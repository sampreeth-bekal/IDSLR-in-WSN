import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.Border;
public class Router implements ActionListener
{
	JFrame f;
	JPanel p;
	JButton b2,b3;
	JLabel con1;
	ImageIcon ic,lab33;
	JComboBox node1,node2,node3,node4;
	Border b1;

	JComboBox jc;

	

	ImageIcon i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11,i12,i13,i14,i15,i16,i17,i18,i19,i20,i21,i22,i23,i24,i25,i26,i27,i28,i29,i30,i31,i32,i33,i34,i35,i36,i37,i38,i39,i40,i41,i42,i43,i44,i45,i46,i47,i48,i49,i50,i51,i52,i53,i54,i56,i57,i58,i59,i60;
	JLabel l1,l2,l3,l4,l5,l6,l7,l8,l9,l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l40,l41,l42,l43,l44,l45,l46,l47,l48,l49,l50,l51,l52,l53,l54,l55,l56,l57,l58,l59,l60;
	ImageIcon i61,i62,i63,i64,i65,i66,i67,i68,i69,i70,i71,i72,i73,i74,i75,i76,i77,i78,i79,i80,i81,i82,i83,i84,i85,i86,i87,i88,i89,i90,i91,i92,i93,i94,i95,i96,i97,i98,i99,i100;


	public JTextArea tf = new JTextArea();
	public JTextField fname = new JTextField();
	public JScrollPane pane1 = new JScrollPane();

	JLabel op1,lo1,lo2,lo3,lo4,lo5,lo6,lo7,lo8,lo9,lo10,lo11,lo12,lo13,lo14,lo15,lo16,lo17,lo18,lo19,lo20,lo21,lo22;
	
	JLabel p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30;

	
	
	
	int cost1=0;
	int cost2=0;
	int cost3=0;
	int cost4=0;
	int cost5=0;
	int cost6=0;
	int cost7=0;
	int cost8=0;
	int cost9=0;
	int cost10=0;
	int cost11=0;
	int cost12=0;
	int cost13=0;
	int cost14=0;
	int cost15=0;
	int cost16=0;
	int cost17=0;
	int cost18=0;
	int cost19=0;
	int cost20=0;



	String state1="";
	String state2="";
	String state3="";
	String state4="";
	String state5="";
	String state6="";
	String state7="";
	String state8="";
	String state9="";
	String state10="";
	String state11="";
	String state12="";
	String state13="";
	String state14="";
	String state15="";
	String state16="";
	String state17="";
	String state18="";
	String state19="";
	String state20="";

	int bw1=0;
	int bw2=0;
	int bw3=0;
	int bw4=0;
	int bw5=0;
	int bw6=0;
	int bw7=0;
	int bw8=0;
	int bw9=0;
	int bw10=0;
	int bw11=0;
	int bw12=0;
	int bw13=0;
	int bw14=0;
	int bw15=0;
	int bw16=0;
	int bw17=0;
	int bw18=0;
	int bw19=0;
	int bw20=0;

	String mac1="";
	String mac2="";
	String mac3="";
	String mac4="";
	String mac5="";
	String mac6="";
	String mac7="";
	String mac8="";
	String mac9="";
	String mac10="";
	String mac11="";
	String mac12="";
	String mac13="";
	String mac14="";
	String mac15="";
	String mac16="";
	String mac17="";
	String mac18="";
	String mac19="";
	String mac20="";
	
	String val1="";
	String val2="";
	String val3="";
	String val4="";
	String val5="";
	String val6="";
	String val7="";
	String val8="";
	String val9="";
	String val10="";
	String val11="";
	String val12="";
	String val13="";
	String val14="";
	String val15="";
	String val16="";
	String val17="";
	String val18="";
	String val19="";
	String val20="";
	

	
	JMenuBar mb;
	JMenu m;
	JMenuItem m1,m2,m3,m4,m5,mi1;
	
	
	
	
	
	public Router() 
	{

		f=new JFrame("Router :: ALBAR Load Balancing Geographic Routing Around Connectivity Holes in WSN");
		p=new JPanel();
//		p.setBackground(new Color(170, 190, 168));

			 p.setBackground(Color.white);


		b2=new JButton("View Vehicle Trjectory");
		b2.setBounds(340, 410, 180, 30);
		//	  p.add(b2);

		b3=new JButton("Refresh");
		b3.setBounds(560, 410, 150, 30);
		//	  p.add(b3);

		Border bb = BorderFactory.createLineBorder(Color.black,7);
		op1= new JLabel();
		op1.setBorder(bb);
		op1.setBounds(50, 65, 640, 590);
		p.add(op1);
		
		


		//Node Names Labels

		lo1=new JLabel("S");
		lo1.setBounds(72, 100, 100, 100);
		lo1.setForeground(Color.white);
		p.add(lo1);



		lo2=new JLabel("N1");
		lo2.setBounds(130, 74, 100, 100);
		lo2.setForeground(Color.white);
		p.add(lo2);


		lo3=new JLabel("N2");
		lo3.setBounds(100, 160, 100, 100);
		lo3.setForeground(Color.white);
		p.add(lo3);


		lo4=new JLabel("N3");
		lo4.setBounds(208, 90, 100, 100);
		lo4.setForeground(Color.white);
		p.add(lo4);

		lo5=new JLabel("N4");
		lo5.setBounds(163, 160, 100, 100);
		lo5.setForeground(Color.white);
		p.add(lo5);

		lo6=new JLabel("N5");
		lo6.setBounds(285, 140, 100, 100);
		lo6.setForeground(Color.white);
		p.add(lo6);

		lo7=new JLabel("N6");
		lo7.setBounds(202, 206, 100, 100);
		lo7.setForeground(Color.white);
		p.add(lo7);

		lo8=new JLabel("N7");
		lo8.setBounds(182, 272, 100, 100);
		lo8.setForeground(Color.white);
		p.add(lo8);


		lo9=new JLabel("N8");
		lo9.setBounds(234, 270, 100, 100);
		lo9.setForeground(Color.white);
		p.add(lo9);

		lo10=new JLabel("N9");
		lo10.setBounds(235, 330, 100, 100);
		lo10.setForeground(Color.white);
		p.add(lo10);

		lo11=new JLabel("N10");
		lo11.setBounds(234, 390, 100, 100);
		lo11.setForeground(Color.white);
		p.add(lo11);

		lo12=new JLabel("N11");
		lo12.setBounds(210, 452, 100, 100);
		lo12.setForeground(Color.white);
		p.add(lo12);

		lo13=new JLabel("N12");
		lo13.setBounds(270, 447, 100, 100);
		lo13.setForeground(Color.white);
		p.add(lo13);


		lo14=new JLabel("N14");
		lo14.setBounds(310, 510, 100, 100);
		lo14.setForeground(Color.white);
		p.add(lo14);

		lo15=new JLabel("N15");
		lo15.setBounds(310, 567, 100, 100);
		lo15.setForeground(Color.white);
		p.add(lo15);

		lo16=new JLabel("N16");
		lo16.setBounds(408, 447, 100, 100);
		lo16.setForeground(Color.white);
		p.add(lo16);

		lo17=new JLabel("N17");
		lo17.setBounds(473,500, 100, 100);
		lo17.setForeground(Color.white);
		p.add(lo17);

		lo18=new JLabel("N18");
		lo18.setBounds(467, 380, 100, 100);
		lo18.setForeground(Color.white);
		p.add(lo18);

		lo19=new JLabel("N19");
		lo19.setBounds(468, 297, 100, 100);
		lo19.setForeground(Color.white);
		p.add(lo19);

		lo20=new JLabel("N20");
		lo20.setBounds(561, 295, 100, 100);
		lo20.setForeground(Color.white);
		p.add(lo20);

		lo21=new JLabel("D");
		lo21.setBounds(657, 297, 100, 100);
		lo21.setForeground(Color.white);
		p.add(lo21);



		lo22=new JLabel("N13");
		lo22.setBounds(180, 525, 100, 100);
		lo22.setForeground(Color.white);
		p.add(lo22);




//Cost Labels
		
		p1=new JLabel("");
		p1.setBounds(94, 74, 100, 100);
		p.add(p1);
		
		
		p2=new JLabel("");
		p2.setBounds(70, 160, 100, 100);
		p.add(p2);

		p3=new JLabel("");
		p3.setBounds(190, 70, 100, 100);
		p.add(p3);
		
		p4=new JLabel("");
		p4.setBounds(155, 138, 100, 100);
		p.add(p4);
		
		p5=new JLabel("");
		p5.setBounds(277, 110, 100, 100);
		p.add(p5);
		
		
		p6=new JLabel("");
		p6.setBounds(226, 206, 100, 100);
		p.add(p6);
		
		p7=new JLabel("");
		p7.setBounds(151, 272, 100, 100);
		p.add(p7);

		p8=new JLabel("");
		p8.setBounds(258, 270, 100, 100);
		p.add(p8);
		
		p9=new JLabel("");
		p9.setBounds(257, 330, 100, 100);
		p.add(p9);
		
		
		p10=new JLabel("");
		p10.setBounds(257, 390, 100, 100);
		p.add(p10);
		
		
		p11=new JLabel("");
		p11.setBounds(183, 452, 100, 100);
		p.add(p11);
		
		p12=new JLabel("");
		p12.setBounds(296, 427, 100, 100);
		p.add(p12);
		
		
		
		p13=new JLabel("");
		p13.setBounds(151, 525, 100, 100);
		p.add(p13);
		
		
		p14=new JLabel("");
		p14.setBounds(280, 518, 100, 100);
		p.add(p14);
		
		p15=new JLabel("");
		p15.setBounds(280, 567, 100, 100);
		p.add(p15);
		
		p16=new JLabel("");
		p16.setBounds(401, 425, 100, 100);
		p.add(p16);
		
		p17=new JLabel("");
		p17.setBounds(436,500, 100, 100);
		p.add(p17);
		
		p18=new JLabel("");
		p18.setBounds(436, 380, 100, 100);
		p.add(p18);
		
		p19=new JLabel("");
		p19.setBounds(436, 297, 100, 100);
		p.add(p19);
		
		p20=new JLabel("");
		p20.setBounds(556, 270, 100, 100);
		p.add(p20);
		
		

		//All Images Starts From Here

		ImageIcon ic=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Source
		con1=new JLabel();
		con1.setIcon(ic);
		con1.setBounds(60, 100, 100, 100);
		p.add(con1);

		ImageIcon i1=new ImageIcon(this.getClass().getResource("Blackline1.png"));  //line 1
		l1=new JLabel();
		l1.setIcon(i1);
		l1.setBounds(78, 84, 100, 100);
		p.add(l1);


		ImageIcon i2=new ImageIcon(this.getClass().getResource("Blackline2.png"));  //line 2
		l2=new JLabel();
		l2.setIcon(i2);
		l2.setBounds(73, 137, 100, 100);
		p.add(l2);

		ImageIcon i3=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //node 1
		l3=new JLabel();
		l3.setIcon(i3);
		l3.setBounds(123, 74, 100, 100);
		p.add(l3);



		ImageIcon i4=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //node 2
		l4=new JLabel();
		l4.setIcon(i4);
		l4.setBounds(93, 160, 100, 100);
		p.add(l4);


		ImageIcon i5=new ImageIcon(this.getClass().getResource("Blackline3.png"));  //line 3
		l5=new JLabel();
		l5.setIcon(i5);
		l5.setBounds(143, 84, 100, 100);
		p.add(l5);



		ImageIcon i6=new ImageIcon(this.getClass().getResource("Blackline4.png"));  //line 4
		l6=new JLabel();
		l6.setIcon(i6);
		l6.setBounds(114, 160, 100, 100);
		p.add(l6);




		ImageIcon i7=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 3
		l7=new JLabel();
		l7.setIcon(i7);
		l7.setBounds(200, 90, 100, 100);
		p.add(l7);

		ImageIcon i8=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 4
		l8=new JLabel();
		l8.setIcon(i8);
		l8.setBounds(155, 160, 100, 100);
		p.add(l8);


		ImageIcon i9=new ImageIcon(this.getClass().getResource("Blackline5.png"));  //Line 5
		l9=new JLabel();
		l9.setIcon(i9);
		l9.setBounds(175, 191, 100, 100);
		p.add(l9);


		ImageIcon i10=new ImageIcon(this.getClass().getResource("Blackline6.png"));  //Line 6
		l10=new JLabel();
		l10.setIcon(i10);
		l10.setBounds(197, 152, 100, 100);
		p.add(l10);


		ImageIcon i11=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 6
		l11=new JLabel();
		l11.setIcon(i11);
		l11.setBounds(194, 206, 100, 100);
		p.add(l11);



		ImageIcon i12=new ImageIcon(this.getClass().getResource("Blackline7.png"));  //line 7
		l12=new JLabel();
		l12.setIcon(i12);
		l12.setBounds(220, 120, 100, 100);
		p.add(l12);


		ImageIcon i13=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 5
		l13=new JLabel();
		l13.setIcon(i13);
		l13.setBounds(277, 140, 100, 100);
		p.add(l13);


		ImageIcon i14=new ImageIcon(this.getClass().getResource("Blackline8.png"));  //Line 8
		l14=new JLabel();
		l14.setIcon(i14);
		l14.setBounds(177, 244, 100, 100);
		p.add(l14);


		ImageIcon i15=new ImageIcon(this.getClass().getResource("Blackline9.png"));  //Line 9
		l15=new JLabel();
		l15.setIcon(i15);
		l15.setBounds(207, 240, 100, 100);
		p.add(l15);

		ImageIcon i16=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 7
		l16=new JLabel();
		l16.setIcon(i16);
		l16.setBounds(173, 272, 100, 100);
		p.add(l16);


		ImageIcon i17=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 8
		l17=new JLabel();
		l17.setIcon(i17);
		l17.setBounds(226, 270, 100, 100);
		p.add(l17);


		ImageIcon i18=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 10
		l18=new JLabel();
		l18.setIcon(i18);
		l18.setBounds(227, 306, 100, 100);
		p.add(l18);


		ImageIcon i19=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 9
		l19=new JLabel();
		l19.setIcon(i19);
		l19.setBounds(227, 330, 100, 100);
		p.add(l19);


		ImageIcon i20=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 11
		l20=new JLabel();
		l20.setIcon(i20);
		l20.setBounds(227, 366, 100, 100);
		p.add(l20);

		ImageIcon i21=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 10
		l21=new JLabel();
		l21.setIcon(i21);
		l21.setBounds(227, 390, 100, 100);
		p.add(l21);


		ImageIcon i22=new ImageIcon(this.getClass().getResource("Blackline13.png"));  //Line 13
		l22=new JLabel();
		l22.setIcon(i22);
		l22.setBounds(204, 424, 100, 100);
		p.add(l22);


		ImageIcon i23=new ImageIcon(this.getClass().getResource("Blackline12.png"));  //Line 12
		l23=new JLabel();
		l23.setIcon(i23);
		l23.setBounds(242, 421, 100, 100);
		p.add(l23);


		ImageIcon i24=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 12
		l24=new JLabel();
		l24.setIcon(i24);
		l24.setBounds(263, 447, 100, 100);
		p.add(l24);

		ImageIcon i25=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 11
		l25=new JLabel();
		l25.setIcon(i25);
		l25.setBounds(203, 452, 100, 100);
		p.add(l25);


		ImageIcon i26=new ImageIcon(this.getClass().getResource("Blackline13.png"));  //Line 14 same as 13
		l26=new JLabel();
		l26.setIcon(i26);
		l26.setBounds(180, 492, 100, 100);
		p.add(l26);


		ImageIcon i27=new ImageIcon(this.getClass().getResource("Blackline12.png"));  //Line 16 same as 12
		l27=new JLabel();
		l27.setIcon(i27);
		l27.setBounds(280, 483, 100, 100);
		p.add(l27);


		ImageIcon i28=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 14
		l28=new JLabel();
		l28.setIcon(i28);
		l28.setBounds(303, 510, 100, 100);
		p.add(l28);

		ImageIcon i29=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 18 same as 10
		l29=new JLabel();
		l29.setIcon(i29);
		l29.setBounds(304, 544, 100, 100);
		p.add(l29);


		ImageIcon i30=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 15
		l30=new JLabel();
		l30.setIcon(i30);
		l30.setBounds(304, 567, 100, 100);
		p.add(l30);


		ImageIcon i31=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 16
		l31=new JLabel();
		l31.setIcon(i31);
		l31.setBounds(401, 447, 100, 100);
		p.add(l31);


		ImageIcon i32=new ImageIcon(this.getClass().getResource("Blackline19.png"));  //Line 19
		l32=new JLabel();
		l32.setIcon(i32);
		l32.setBounds(323, 477, 100, 100);
		p.add(l32);



		ImageIcon i33=new ImageIcon(this.getClass().getResource("Blackline17.png"));  //Line 17
		l33=new JLabel();
		l33.setIcon(i33);
		l33.setBounds(286, 446, 200, 100);
		p.add(l33);



		ImageIcon i34=new ImageIcon(this.getClass().getResource("Blackline20.png"));  //Line 20
		l34=new JLabel();
		l34.setIcon(i34);
		l34.setBounds(327, 510, 100, 100);
		p.add(l34);


		ImageIcon i35=new ImageIcon(this.getClass().getResource("Blackline22.png"));  //Line 22
		l35=new JLabel();
		l35.setIcon(i35);
		l35.setBounds(420, 410, 100, 100);
		p.add(l35);


		ImageIcon i36=new ImageIcon(this.getClass().getResource("Blackline21.png"));  //Line 21
		l36=new JLabel();
		l36.setIcon(i36);
		l36.setBounds(420, 480, 100, 100);
		p.add(l36);


		ImageIcon i37=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 18
		l37=new JLabel();
		l37.setIcon(i37);
		l37.setBounds(460, 380, 100, 100);
		p.add(l37);


		ImageIcon i38=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 17
		l38=new JLabel();
		l38.setIcon(i37);
		l38.setBounds(466,500, 100, 100);
		p.add(l38);


		ImageIcon i39=new ImageIcon(this.getClass().getResource("Blackline23.png"));  //Line 23
		l39=new JLabel();
		l39.setIcon(i39);
		l39.setBounds(462, 336, 100, 100);
		p.add(l39);



		ImageIcon i40=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 19
		l40=new JLabel();
		l40.setIcon(i40);
		l40.setBounds(462, 297, 100, 100);
		p.add(l40);


		ImageIcon i41=new ImageIcon(this.getClass().getResource("Blackline24.png"));  //line 24
		l41=new JLabel();
		l41.setIcon(i41);
		l41.setBounds(480, 336, 100, 100);
		p.add(l41);



		ImageIcon i42=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 20
		l42=new JLabel();
		l42.setIcon(i42);
		l42.setBounds(556, 295, 100, 100);
		p.add(l42);



		ImageIcon i43=new ImageIcon(this.getClass().getResource("Blackline25.png"));  //Line 25
		l43=new JLabel();
		l43.setIcon(i43);
		l43.setBounds(488, 297, 100, 100);
		p.add(l43);

		ImageIcon i44=new ImageIcon(this.getClass().getResource("Blackline25.png"));  //Line 25
		l44=new JLabel();
		l44.setIcon(i44);
		l44.setBounds(580, 297, 100, 100);
		p.add(l44);

		ImageIcon i45=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Destination
		l45=new JLabel();
		l45.setIcon(i45);
		l45.setBounds(646, 297, 100, 100);
		p.add(l45);

		ImageIcon i48=new ImageIcon(this.getClass().getResource("Blacknodes.png")); // Node 13
		l48=new JLabel();
		l48.setIcon(i48);
		l48.setBounds(173, 525, 100, 100);
		p.add(l48);



		//Conectivity Lines

		ImageIcon i46=new ImageIcon(this.getClass().getResource("Blackline7.png"));  //
		l46=new JLabel();
		l46.setIcon(i46);
		l46.setBounds(300, 168, 100, 100);
		p.add(l46);


		ImageIcon i47=new ImageIcon(this.getClass().getResource("Blackline8.png"));  //
		l47=new JLabel();
		l47.setIcon(i47);
		l47.setBounds(153, 310, 100, 100);
		p.add(l47);



		ImageIcon i49=new ImageIcon(this.getClass().getResource("Blackline13.png")); //connectivity
		l49=new JLabel();
		l49.setIcon(i49);
		l49.setBounds(153, 569, 100, 100);
		p.add(l49);
		
		ImageIcon i70=new ImageIcon(this.getClass().getResource("Blackline15.png"));  //Line 15
		l55=new JLabel();
		l55.setIcon(i70);
		l55.setBounds(229, 485, 90, 100);
		p.add(l55);
		
		
		ImageIcon i71=new ImageIcon(this.getClass().getResource("Blackline26.png"));  //Line 26
		l56=new JLabel();
		l56.setIcon(i71);
		l56.setBounds(466,437, 100, 100);
		p.add(l56);
		
		
		
		
		
		
		
		

		mb = new JMenuBar();
		m = new JMenu("File");
		mi1 = new JMenuItem("Assign Cost for Nodes");
		m1 = new JMenuItem("View Details of Nodes");
		m2 = new JMenuItem("Assign Banwidth for Nodes");
		m3 = new JMenuItem("View Status of Router");
		m4 = new JMenuItem("Exit");
		m.add(mi1);
		m.add(m1);
		m.add(m2);
		//m.add(m3);
		m.add(m4);
		mb.add(m);


		f.setJMenuBar(mb);
		f.setSize(740, 720);
		f.setVisible(true);
		p.setLayout(null);

		f.add(p);

		tf.setColumns(200);
		tf.setRows(100);
		tf.setName("tf");
		pane1.setName("pane");
		pane1.setViewportView(tf);
		pane1.setBounds(450, 250, 300, 200);

		 m1.addActionListener(this);
		 mi1.addActionListener(this);
		 m2.addActionListener(this);
		 m3.addActionListener(this);
		 m4.addActionListener(this);
		b2.addActionListener(this);
		b3.addActionListener(this);


		int[] port = new int[] { 1008,1006,1234,2001,504,502};

		for (int i = 0; i < 6; i++) {
			Thread th = new Thread(new PortListener(port[i]));
			th.start();
		}


	}
	public static void main(String[] args) 
	{
		try {
	UIManager
			.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
} catch (Exception e1) {
	e1.printStackTrace();
}
java.awt.EventQueue.invokeLater(new Runnable() {
	public void run() {
		new Router();
	}
});
	}

	class PortListener implements Runnable {
		DataOutputStream dos = null;
		DataInputStream in = null;

		ServerSocket server;
		Socket connection;
		int i;
		String fileid;
		Connection con;
		Statement stmt;
		int port;

		public PortListener(int port) {
			this.port = port;
		}

		public void run() 
		{
			
			if (this.port == 502) {
				try {

					ServerSocket server3 = new ServerSocket(502);
					Socket con2;
					while (true) {
						con2 = server3.accept();
						DataInputStream din = new DataInputStream(
								con2.getInputStream());
							
						String node = (String)din.readUTF();
						String data = (String)din.readUTF();
								
							DBCon db = new DBCon();
							Connection con = db.getConnection();
											
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Attacked', Bw='"+data+"' where nname='"+node+"'";
							stmt2.executeUpdate(sql2);
							
							DataOutputStream dout = new DataOutputStream(con2.getOutputStream());
							dout.writeUTF("success");
						
						}
						
					}
				catch(Exception e1)
				{
					e1.printStackTrace();
				}
				}
			if (this.port == 504) {
				try {

					ServerSocket server3 = new ServerSocket(504);
					Socket con2;
					while (true) {
						con2 = server3.accept();
						DataInputStream din = new DataInputStream(
								con2.getInputStream());
							
						String node = (String)din.readUTF();
						String data = (String)din.readUTF();
						String hash = (String)din.readUTF();
						
												
							DBCon db = new DBCon();
							Connection con = db.getConnection();
							
							
							
							
							
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set status='Attacked', idata='"+data+"', Mac='"+hash+"' where nname='"+node+"'";
								stmt2.executeUpdate(sql2);
								
								
								
								DataOutputStream dout = new DataOutputStream(con2.getOutputStream());
								dout.writeUTF("success");
							
							
						}
						
					}
				catch(Exception e1)
				{
					e1.printStackTrace();
				}
				}
			if(this.port==2001)
			{
				try 
				{
					
					DBCon db=new DBCon();
					Connection con=db.getConnection();
					ServerSocket s1=new ServerSocket(2001);
					while(true)
					{
						Socket ss1=s1.accept();

						DataInputStream dis=new DataInputStream(ss1.getInputStream());
						String fname=dis.readUTF();
						String mac=dis.readUTF();
						String content=dis.readUTF();
						String dname=dis.readUTF();
						String dip=dis.readUTF();
						
						int len=content.length();
						
						
						Statement st1 = con.createStatement();
						String sq1 = "select * from Router where nname='N1'";
						ResultSet rs1=st1.executeQuery(sq1);
			
						if(rs1.next()==true)
						{
							cost1=Integer.parseInt(rs1.getString(2));
							bw1=Integer.parseInt(rs1.getString(3));
							mac1=rs1.getString(4);
							val1=Integer.toString(cost1);;
							
						}
			
						Statement st2 = con.createStatement();
						String sq2 = "select * from Router where nname='N2'";
						ResultSet rs2=st2.executeQuery(sq2);
			
						if(rs2.next()==true)
						{
							cost2=Integer.parseInt(rs2.getString(2));
							bw2=Integer.parseInt(rs2.getString(3));
							mac2=rs2.getString(4);
							
							val2=Integer.toString(cost2);	
			
						}
			
			
						Statement st3 = con.createStatement();
						String sq3 = "select * from Router where nname='N3'";
						ResultSet rs3=st3.executeQuery(sq3);
			
						if(rs3.next()==true)
						{
							cost3=Integer.parseInt(rs3.getString(2));
							bw3=Integer.parseInt(rs3.getString(3));
							mac3=rs3.getString(4);

							val3=Integer.toString(cost3);
						
						}
			
						Statement st4 = con.createStatement();
						String sq4 = "select * from Router where nname='N4'";
						ResultSet rs4=st4.executeQuery(sq4);
			
						if(rs4.next()==true)
						{
							cost4=Integer.parseInt(rs4.getString(2));
							bw4=Integer.parseInt(rs4.getString(3));
							mac4=rs4.getString(4);


							val4=Integer.toString(cost4);
						
						}
			
			
						Statement st5 = con.createStatement();
						String sq5 = "select * from Router where nname='N5'";
						ResultSet rs5=st5.executeQuery(sq5);
			
						if(rs5.next()==true)
						{
			
							cost5=Integer.parseInt(rs5.getString(2));
							bw5=Integer.parseInt(rs5.getString(3));
							mac5=rs5.getString(4);
							
							val5=Integer.toString(cost5);
						
						}
			
						Statement st6 = con.createStatement();
						String sq6 = "select * from Router where nname='N6'";
						ResultSet rs6=st6.executeQuery(sq6);
			
						if(rs6.next()==true)
						{
							cost6=Integer.parseInt(rs6.getString(2));
							bw6=Integer.parseInt(rs6.getString(3));
							mac6=rs6.getString(4);
						
							val6=Integer.toString(cost6);
							
						}
			
			
						Statement st7 = con.createStatement();
						String sq7 = "select * from Router where nname='N7'";
						ResultSet rs7=st7.executeQuery(sq7);
			
						if(rs7.next()==true)
						{
							cost7=Integer.parseInt(rs7.getString(2));
							bw7=Integer.parseInt(rs7.getString(3));
							mac7=rs7.getString(4);
						
							val7=Integer.toString(cost7);
							
						}
			
			
						Statement st8 = con.createStatement();
						String sq8 = "select * from Router where nname='N8'";
						ResultSet rs8=st8.executeQuery(sq8);
			
						if(rs8.next()==true)
						{
							cost8=Integer.parseInt(rs8.getString(2));
							bw8=Integer.parseInt(rs8.getString(3));
							mac8=rs8.getString(4);
							
							val8=Integer.toString(cost8);
						
						}
			
			
						Statement st9 = con.createStatement();
						String sq9 = "select * from Router where nname='N9'";
						ResultSet rs9=st9.executeQuery(sq9);
			
						if(rs9.next()==true)
						{
							cost9=Integer.parseInt(rs9.getString(2));
							bw9=Integer.parseInt(rs9.getString(3));
							mac9=rs9.getString(4);
						
							val9=Integer.toString(cost9);
						
						}
			
						Statement st10 = con.createStatement();
						String sq10 = "select * from Router where nname='N10'";
						ResultSet rs10=st10.executeQuery(sq10);
			
						if(rs10.next()==true)
						{
							cost10=Integer.parseInt(rs10.getString(2));	
							bw10=Integer.parseInt(rs10.getString(3));
							mac10=rs10.getString(4);
							
							val10=Integer.toString(cost10);
						
						}
			
						Statement st11 = con.createStatement();
						String sq11 = "select * from Router where nname='N11'";
						ResultSet rs11=st11.executeQuery(sq11);
			
						if(rs11.next()==true)
						{
							cost11=Integer.parseInt(rs11.getString(2));
							bw11=Integer.parseInt(rs11.getString(3));	
							mac11=rs11.getString(4);
							
							val11=Integer.toString(cost11);
							
						}
			
			
			
						Statement st12 = con.createStatement();
						String sq12 = "select * from Router where nname='N12'";
						ResultSet rs12=st12.executeQuery(sq12);
			
						if(rs12.next()==true)
						{
							cost12=Integer.parseInt(rs12.getString(2));
							bw12=Integer.parseInt(rs12.getString(3));
							mac12=rs12.getString(4);
							
							val12=Integer.toString(cost12);
							
						}
			
						Statement st13 = con.createStatement();
						String sq13 = "select * from Router where nname='N13'";
						ResultSet rs13=st13.executeQuery(sq13);
			
						if(rs13.next()==true)
						{
							cost13=Integer.parseInt(rs13.getString(2));
							bw13=Integer.parseInt(rs13.getString(3));
							mac13=rs13.getString(4);
						
							val13=Integer.toString(cost13);
							
						}
			
						Statement st14 = con.createStatement();
						String sq14 = "select * from Router where nname='N14'";
						ResultSet rs14=st14.executeQuery(sq14);
			
						if(rs14.next()==true)
						{
			
							cost14=Integer.parseInt(rs14.getString(2));
							bw14=Integer.parseInt(rs14.getString(3));
							mac14=rs14.getString(4);
						
							val14=Integer.toString(cost14);
							
						}
			
			
						Statement st15 = con.createStatement();
						String sq15 = "select * from Router where nname='N15'";
						ResultSet rs15=st15.executeQuery(sq15);
			
						if(rs15.next()==true)
						{
			
							cost15=Integer.parseInt(rs15.getString(2));
							bw15=Integer.parseInt(rs15.getString(3));
							mac15=rs15.getString(4);
							
							
							val15=Integer.toString(cost15);
			
						}
			
						Statement st16 = con.createStatement();
						String sq16 = "select * from Router where nname='N16'";
						ResultSet rs16=st16.executeQuery(sq16);
			
						if(rs16.next()==true)
						{
			
							cost16=Integer.parseInt(rs16.getString(2));
							bw16=Integer.parseInt(rs16.getString(3));
							mac16=rs16.getString(4);
							
							
							val16=Integer.toString(cost16);
						}
			
			
						Statement st17 = con.createStatement();
						String sq17 = "select * from Router where nname='N17'";
						ResultSet rs17=st17.executeQuery(sq17);
			
						if(rs17.next()==true)
						{
			
							cost17=Integer.parseInt(rs17.getString(2));
							bw17=Integer.parseInt(rs17.getString(3));
							mac17=rs17.getString(4);
							
							
							val17=Integer.toString(cost17);
						}
			
			
						Statement st18 = con.createStatement();
						String sq18 = "select * from Router where nname='N18'";
						ResultSet rs18=st18.executeQuery(sq18);
			
						if(rs18.next()==true)
						{
			
							cost18=Integer.parseInt(rs18.getString(2));
							bw18=Integer.parseInt(rs18.getString(3));
							mac18=rs18.getString(4);
							
							
							
							val18=Integer.toString(cost18);
						}
			
			
						Statement st19 = con.createStatement();
						String sq19 = "select * from Router where nname='N19'";
						ResultSet rs19=st19.executeQuery(sq19);
			
						if(rs19.next()==true)
						{
			
							cost19=Integer.parseInt(rs19.getString(2));
							bw19=Integer.parseInt(rs19.getString(3));
							mac19=rs19.getString(4);
							
							
							
							val19=Integer.toString(cost19);
						}
			
			
			
						Statement st20 = con.createStatement();
						String sq20 = "select * from Router where nname='N20'";
						ResultSet rs20=st20.executeQuery(sq20);
			
						if(rs20.next()==true)
						{
			
							cost20=Integer.parseInt(rs20.getString(2));
							bw20=Integer.parseInt(rs20.getString(3));
							mac20=rs20.getString(4);
							
							
							val20=Integer.toString(cost20);
			
							
			
						}
									p1.setText(val1);
									p2.setText(val2);
									p3.setText(val3);
									p4.setText(val4);
									p5.setText(val5);
									p6.setText(val6);
									p7.setText(val7);
									p8.setText(val8);
									p9.setText(val9);
									p10.setText(val10);
									p11.setText(val11);
									p12.setText(val12);
									p13.setText(val13);
									p14.setText(val14);
									p15.setText(val15);
									p16.setText(val16);
									p17.setText(val17);
									p18.setText(val18);
									p19.setText(val19);
									p20.setText(val20);
									
									Thread.sleep(3000);
									ImageIcon i50=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //Source
									con1.setIcon(i50);
									
									if(cost1<=cost2)
									{
										Thread.sleep(3000);
										ImageIcon i72=new ImageIcon(this.getClass().getResource("Greenline1.png"));  //line 1
										l1.setIcon(i72);
										
										if(mac.equalsIgnoreCase(mac1))
											{
												if(len<=bw1)
												{
													
													Thread.sleep(3000);
													ImageIcon i51=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
													l3.setIcon(i51);
													
													Thread.sleep(3000);
													ImageIcon i73=new ImageIcon(this.getClass().getResource("Greenline3.png"));  //line 3
													l5.setIcon(i73);
													
													
													if(mac.equalsIgnoreCase(mac3))
													{
														if(len<=bw3)
														{
															Thread.sleep(3000);
															ImageIcon i52=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
															l7.setIcon(i52);
															
															
															
															if(cost5<=cost6)
															{
																Thread.sleep(3000);
																ImageIcon i91=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
																l12.setIcon(i91);
																if(mac.equalsIgnoreCase(mac5))
																{
																	if(len<=bw5)
																	{
																		Thread.sleep(3000);
																		ImageIcon i101=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l13.setIcon(i101);
																		
																		Thread.sleep(3000);
																		ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
																		l46.setIcon(i93);
																		JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
																		
																		Socket sc16 = new Socket("localhost",903);
																		DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																		dout16.writeUTF("N5");
																																				
																		DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																		String i16=din16.readUTF();
																		
																		
																		
																		//code towards node6
																		Thread.sleep(3000);
																		ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
																		l10.setIcon(i95);
																		
																		funcn6(ss1,dname,dip,content,fname, mac,len);
																		break;
																	}
																	else if(len>=bw5)
																	{
																		Thread.sleep(3000);
																		ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l13.setIcon(i101);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-5");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-5");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N5'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N5");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw5));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l13.setIcon(i102);
																			
																			Thread.sleep(3000);
																			ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
																			l46.setIcon(i93);
																			JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
																			
																			Socket sc16 = new Socket("localhost",903);
																			DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																			dout16.writeUTF("N5");
																																					
																			DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																			String i16=din16.readUTF();
																			
																			//code towards node6
																			Thread.sleep(3000);
																			ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
																			l10.setIcon(i95);
																			
																			funcn6(ss1,dname,dip,content,fname, mac,len);
																			break;
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-5 Data Not Transfered");
																			
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
																	l13.setIcon(i101);
																	
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-5");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-5");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N5'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N5");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac5);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l13.setIcon(i102);
																		
																		Thread.sleep(3000);
																		ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
																		l46.setIcon(i93);
																		JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
																		
																		Socket sc16 = new Socket("localhost",903);
																		DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																		dout16.writeUTF("N5");
																																				
																		DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																		String i16=din16.readUTF();
																		
																		//code towards node6
																		Thread.sleep(3000);
																		ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
																		l10.setIcon(i95);
																		funcn6(ss1,dname,dip,content,fname, mac,len);
																		break;
																	}
																	else if(i==1)
																	{
																		//code towards node6
																		Thread.sleep(3000);
																		ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
																		l10.setIcon(i93);
																		funcn6(ss1,dname,dip,content,fname, mac,len);
																		break;
																	}
																}
																
																
															}
															else if(cost5>=cost6)
															{
																Thread.sleep(3000);
																ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
																l10.setIcon(i93);
																
																if(mac.equalsIgnoreCase(mac6))
																{
																	if(len<=bw6)
																	{
																		Thread.sleep(3000);
																		ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l11.setIcon(i102);
																		
																		//code towards node7 and node 8
																		
																		
																		if(cost7<=cost8)
																		{
																			Thread.sleep(3000);
																			ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
																			l14.setIcon(i94);
																			
																			if(mac.equalsIgnoreCase(mac7))
																			{
																				if(len<=bw7)
																				{
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l16.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
																					l47.setIcon(i95);
																					JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
																					
																					Socket sc16 = new Socket("localhost",903);
																					DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																					dout16.writeUTF("N7");
																																							
																					DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																					String i16=din16.readUTF();
																					
																					//code towards node8
																					funcn8(ss1,dname,dip,content,fname,mac,len);
																					break;
																				}
																				else if(len>=bw7)
																				{
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l16.setIcon(i103);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
																					if(i==0)
																					{
																						int bw=len;
																						bw=bw+1000;
																						
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc7 = new Socket("localhost",901);
																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																						dout6.writeUTF("N7");
																						dout6.writeUTF(fname);
																						dout6.writeUTF(Integer.toString(len));
																						dout6.writeUTF(Integer.toString(bw7));
																						dout6.writeUTF(Integer.toString(bw));
																						
																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																						String i7=din7.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l16.setIcon(i104);
																						
																						Thread.sleep(3000);
																						ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
																						l47.setIcon(i95);
																						JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
																						Socket sc16 = new Socket("localhost",903);
																						DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																						dout16.writeUTF("N7");
																																								
																						DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																						String i16=din16.readUTF();
																						
																						//code towards node8
																						funcn8(ss1,dname,dip,content,fname,mac,len);
																						break;
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l16.setIcon(i103);
																				
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
																				if(i==0)
																				{
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N7");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac7);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																					String i7=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l16.setIcon(i104);
																					
																					Thread.sleep(3000);
																					ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
																					l47.setIcon(i95);
																					JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
																					Socket sc16 = new Socket("localhost",903);
																					DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																					dout16.writeUTF("N7");
																																							
																					DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																					String i16=din16.readUTF();
																					
																					//code towards node8
																					
																					funcn8(ss1,dname,dip,content,fname,mac,len);
																					break;
																				}
																				else if(i==1)
																				{
																					//code towards node8
																					
																					funcn8(ss1,dname,dip,content,fname,mac,len);
																					break;
																				}
																				
																			}
																			
																			
																		}
																		else if(cost7>=cost8)
																		{
																			Thread.sleep(3000);
																			ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
																			l15.setIcon(i95);
																			
																			
																			
																			if(mac.equalsIgnoreCase(mac8))
																			{
																				if(len<=bw8)
																				{
																					Thread.sleep(3000);
																					ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l17.setIcon(i104);
																					
																					Thread.sleep(3000);
																					ImageIcon i150=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																					l18.setIcon(i150);
																					
																					
																					if(mac.equalsIgnoreCase(mac9))
																					{
																						if(len<=bw9)
																						{
																							Thread.sleep(3000);
																							ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l19.setIcon(i105);
																							
																							Thread.sleep(3000);
																							ImageIcon i151=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																							l20.setIcon(i151);
																							
																							
																							if(mac.equalsIgnoreCase(mac10))
																							{
																								if(len<=bw10)
																								{
																									Thread.sleep(3000);
																									ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l21.setIcon(i106);
																									
																									//code towards node 11 and node 12
																									
																									
																									
																									if(cost11<=cost12)
																									{
																										Thread.sleep(3000);
																										ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																										l22.setIcon(i96);
																										
																										if(mac.equalsIgnoreCase(mac11))
																										{
																											if(len<=bw11)
																											{
																												Thread.sleep(3000);
																												ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l25.setIcon(i107);
																												
																												//code towards node 13 and node 14
																												
																												
																												if(cost13<=cost14)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																													l26.setIcon(i97);
																													
																													if(mac.equalsIgnoreCase(mac13))
																													{
																														if(len<=bw13)
																														{
																															Thread.sleep(3000);
																															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l48.setIcon(i108);
																															
																															Thread.sleep(3000);
																															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																															l49.setIcon(i98);
																															JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																															Socket sc16 = new Socket("localhost",903);
																															DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																															dout16.writeUTF("N13");
																																																	
																															DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																															String i16=din16.readUTF();
																															
																															//code towards node 14
																															Thread.sleep(3000);
																															ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																															l55.setIcon(i99);
																															
																															funcn14(ss1,dname,dip,content,fname,mac,len);
																															break;
																														}
																														else if(len>=bw13)
																														{
																															Thread.sleep(3000);
																															ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l48.setIcon(i108);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N13");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw13));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l48.setIcon(i109);
																																
																																																									
																																Thread.sleep(3000);
																																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																																l49.setIcon(i98);
																																JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																																Socket sc16 = new Socket("localhost",903);
																																DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																																dout16.writeUTF("N13");
																																																		
																																DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																																String i16=din16.readUTF();
																																
																																//code towards node 14
																																
																																Thread.sleep(3000);
																																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																																l55.setIcon(i99);
																																
																																funcn14(ss1,dname,dip,content,fname,mac,len);
																																break;
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l48.setIcon(i108);
																														
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N13");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac13);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l48.setIcon(i109);
																															
																																																							
																															Thread.sleep(3000);
																															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																															l49.setIcon(i98);
																															JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																															Socket sc16 = new Socket("localhost",903);
																															DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																															dout16.writeUTF("N13");
																																																	
																															DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																															String i16=din16.readUTF();
																															
																															//code towards node 14
																															Thread.sleep(3000);
																															ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																															l55.setIcon(i99);
																															funcn14(ss1,dname,dip,content,fname,mac,len);
																															break;
																														}
																														else if(i==1)
																														{
																															//code towards node 14
																															Thread.sleep(3000);
																															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																															l55.setIcon(i98);
																															
																															funcn14(ss1,dname,dip,content,fname,mac,len);
																															break;
																														}
																														
																														
																													}
																												
																												}
																												else if(cost13>=cost14)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																													l55.setIcon(i97);
																													
																													if(mac.equalsIgnoreCase(mac14))
																													{
																														if(len<=bw14)
																														{
																															Thread.sleep(3000);
																															ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l28.setIcon(i109);
																															
																															//code towards node 15 and node 16
																															
																															
																															
																															if(cost15<=cost16)
																															{
																																Thread.sleep(3000);
																																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																																l29.setIcon(i98);
																																
																																if(mac.equalsIgnoreCase(mac15))
																																{
																																	if(len<=bw15)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l30.setIcon(i110);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																																		l34.setIcon(i99);
																																		
																																		//code towards node 16
																																		
																																		funcn16(ss1,dname,dip,content,fname,mac,len);
																																		break;
																																	}
																																	else if(len>=bw15)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																		l30.setIcon(i110);
																																		
																																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																																		if(i==0)
																																		{
																																			int bw=len;
																																			bw=bw+1000;
																																			
																																			Statement stmt2 = con.createStatement();
																																			String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																																			stmt2.executeUpdate(sql2);
																																			
																																			Socket sc7 = new Socket("localhost",901);
																																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																			dout6.writeUTF("N15");
																																			dout6.writeUTF(fname);
																																			dout6.writeUTF(Integer.toString(len));
																																			dout6.writeUTF(Integer.toString(bw15));
																																			dout6.writeUTF(Integer.toString(bw));
																																			
																																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																			String i7=din7.readUTF();
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																			l30.setIcon(i108);
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																																			l34.setIcon(i99);																									
																																			//code towards node 16
																																			funcn16(ss1,dname,dip,content,fname,mac,len);
																																			break;
																																		}
																																		else if(i==1)
																																		{
																																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																			dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																																			Thread.sleep(2000);   
																																			refresh();
																																		}
																																		
																																	}
																																}
																																else
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l30.setIcon(i110);
																																	
																																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																																	if(i==0)
																																	{
																																		Statement stmt2 = con.createStatement();
																																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																																		stmt2.executeUpdate(sql2);
																																		
																																		Socket sc8 = new Socket("localhost",902);
																																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																		dout7.writeUTF("N15");
																																		dout7.writeUTF(fname);
																																		dout7.writeUTF(mac15);
																																		dout7.writeUTF(mac);
																																		
																																		
																																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																		String i7=din7.readUTF();
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l30.setIcon(i108);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																																		l34.setIcon(i99);																								
																																		//code towards  node 16
																																		
																																		funcn16(ss1,dname,dip,content,fname,mac,len);
																																		break;
																																	}
																																	else if(i==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																	
																																	
																																}
																															}
																															else if(cost15>=cost16)
																															{
																																Thread.sleep(3000);
																																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																																l32.setIcon(i98);
																																
																																if(mac.equalsIgnoreCase(mac16))
																																{
																																	if(len<=bw16)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l31.setIcon(i108);
																																		
																																		//code towards node 17 and node 18
																																		
																																		
																																		if(cost17<=cost18)
																																		{
																																			Thread.sleep(3000);
																																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																																			l36.setIcon(i99);
																																			
																																			if(mac.equalsIgnoreCase(mac17))
																																			{
																																				if(len<=bw17)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l38.setIcon(i110);
																																					
																																					//code towards node 18
																																					
																																					funcn18(ss1,dname,dip,content,fname,mac,len);
																																					break;
																																				}
																																				else if(len>=bw17)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																					l38.setIcon(i110);
																																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																																					if(i==0)
																																					{
																																						int bw=len;
																																						bw=bw+1000;
																																						
																																						Statement stmt2 = con.createStatement();
																																						String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																																						stmt2.executeUpdate(sql2);
																																						
																																						Socket sc7 = new Socket("localhost",901);
																																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																						dout6.writeUTF("N17");
																																						dout6.writeUTF(fname);
																																						dout6.writeUTF(Integer.toString(len));
																																						dout6.writeUTF(Integer.toString(bw17));
																																						dout6.writeUTF(Integer.toString(bw));
																																						
																																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																						String i7=din7.readUTF();
																																						
																																						
																																						Thread.sleep(3000);
																																						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																						l38.setIcon(i111);
																																						
																																																															
																																						//code towards node 18
																																						funcn18(ss1,dname,dip,content,fname,mac,len);
																																						break;
																																					}
																																					else if(i==1)
																																					{
																																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																						dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																																						Thread.sleep(2000);   
																																						refresh();
																																					}
																																				}
																																			}
																																			else 
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																				l38.setIcon(i110);
																																				
																																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																																				if(i==0)
																																				{
																																					Statement stmt2 = con.createStatement();
																																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																																					stmt2.executeUpdate(sql2);
																																					
																																					Socket sc8 = new Socket("localhost",902);
																																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																					dout7.writeUTF("N17");
																																					dout7.writeUTF(fname);
																																					dout7.writeUTF(mac17);
																																					dout7.writeUTF(mac);
																																					
																																					
																																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																					String i7=din7.readUTF();
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l38.setIcon(i111);
																																					
																																																													
																																					//code towards  node 18
																																					funcn18(ss1,dname,dip,content,fname,mac,len);
																																					break;
																																				}
																																				else if(i==1)
																																				{
																																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																					Thread.sleep(2000);   
																																					refresh();
																																				}
																																			}
																																			
																																		}
																																		else if(cost17>=cost18)
																																		{
																																			Thread.sleep(3000);
																																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																																			l35.setIcon(i99);
																																			
																																			if(mac.equalsIgnoreCase(mac18))
																																			{
																																				if(len<=bw18)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l37.setIcon(i111);
																																					
																																					//code towards  node 19 and node 20
																																					
																																					if(cost19<=cost20)
																																					{
																																						Thread.sleep(3000);
																																						ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																																						l39.setIcon(i100);
																																						
																																						if(mac.equalsIgnoreCase(mac19))
																																						{
																																							if(len<=bw19)
																																							{
																																								Thread.sleep(3000);
																																								ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																								l40.setIcon(i112);
																																								
																																								//code towards   node 20
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																								l43.setIcon(i101);
																																								
																																								if(mac.equalsIgnoreCase(mac20))
																																								{
																																									if(len<=bw20)
																																									{
																																										Thread.sleep(3000);
																																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																										l42.setIcon(i113);
																																										
																																										//code towards desti
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																										l44.setIcon(i103);
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																										l45.setIcon(i121);
																																										
																																										funcnD1(ss1,dname,dip,content,fname);
																																																																																				
																																										
																																										
																																									}
																																									else if(len>=bw20)
																																									{
																																										Thread.sleep(3000);
																																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																										l42.setIcon(i110);
																																										
																																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																										if(i==0)
																																										{
																																											int bw=len;
																																											bw=bw+1000;
																																											
																																											Statement stmt2 = con.createStatement();
																																											String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																											stmt2.executeUpdate(sql2);
																																											
																																											Socket sc7 = new Socket("localhost",901);
																																											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																											dout6.writeUTF("N20");
																																											dout6.writeUTF(fname);
																																											dout6.writeUTF(Integer.toString(len));
																																											dout6.writeUTF(Integer.toString(bw20));
																																											dout6.writeUTF(Integer.toString(bw));
																																											
																																											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																											String i7=din7.readUTF();
																																											
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																											l42.setIcon(i113);
																																											
																																																																				
																																											//code towards  desti
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																											l44.setIcon(i103);
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																											l45.setIcon(i121);
																																											
																																											funcnD1(ss1,dname,dip,content,fname);
																																											
																																											
																																										}
																																										else if(i==1)
																																										{
																																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																											Thread.sleep(2000);   
																																											refresh();
																																										}
																																									}
																																								}
																																								else
																																								{
																																									Thread.sleep(3000);
																																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																									l42.setIcon(i110);
																																																																																	
																																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																									if(i==0)
																																									{
																																										Statement stmt2 = con.createStatement();
																																										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																										stmt2.executeUpdate(sql2);
																																										
																																										Socket sc8 = new Socket("localhost",902);
																																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																										dout7.writeUTF("N20");
																																										dout7.writeUTF(fname);
																																										dout7.writeUTF(mac20);
																																										dout7.writeUTF(mac);
																																										
																																										
																																										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																										String i7=din7.readUTF();
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																										l42.setIcon(i113);
																																										
																																																																		
																																										//code towards  desti
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																										l44.setIcon(i103);
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																										l45.setIcon(i121);
																																										
																																										funcnD1(ss1,dname,dip,content,fname);
																																									}
																																									else if(i==1)
																																									{
																																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																										Thread.sleep(2000);   
																																										refresh();
																																									}
																																								
																																								}
																																								
																																							}
																																							else if(len>=bw19)
																																							{
																																								Thread.sleep(3000);
																																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																								l40.setIcon(i110);
																																								
																																								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																																								if(i==0)
																																								{
																																									int bw=len;
																																									bw=bw+1000;
																																									
																																									Statement stmt2 = con.createStatement();
																																									String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																																									stmt2.executeUpdate(sql2);
																																									
																																									Socket sc7 = new Socket("localhost",901);
																																									DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																									dout6.writeUTF("N19");
																																									dout6.writeUTF(fname);
																																									dout6.writeUTF(Integer.toString(len));
																																									dout6.writeUTF(Integer.toString(bw19));
																																									dout6.writeUTF(Integer.toString(bw));
																																									
																																									DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																									String i7=din7.readUTF();
																																									
																																									
																																									Thread.sleep(3000);
																																									ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																									l40.setIcon(i114);
																																									
																																																																		
																																									//code towards   node 20
																																									
																																									
																																									Thread.sleep(3000);
																																									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																									l43.setIcon(i101);
																																									
																																									if(mac.equalsIgnoreCase(mac20))
																																									{
																																										if(len<=bw20)
																																										{
																																											Thread.sleep(3000);
																																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																											l42.setIcon(i113);
																																											
																																											//code towards desti
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																											l44.setIcon(i103);
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																											l45.setIcon(i121);
																																											
																																											funcnD1(ss1,dname,dip,content,fname);
																																																																																					
																																											
																																											
																																										}
																																										else if(len>=bw20)
																																										{
																																											Thread.sleep(3000);
																																											ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																											l42.setIcon(i112);
																																											
																																											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																											if(i1==0)
																																											{
																																												int bw1=len;
																																												bw1=bw1+1000;
																																												
																																												Statement stmt21 = con.createStatement();
																																												String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																												stmt21.executeUpdate(sql21);
																																												
																																												Socket sc71 = new Socket("localhost",901);
																																												DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																												dout61.writeUTF("N20");
																																												dout61.writeUTF(fname);
																																												dout61.writeUTF(Integer.toString(len));
																																												dout61.writeUTF(Integer.toString(bw20));
																																												dout61.writeUTF(Integer.toString(bw1));
																																												
																																												DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																												String i71=din71.readUTF();
																																												
																																												
																																												Thread.sleep(3000);
																																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																												l42.setIcon(i113);
																																												
																																																																					
																																												//code towards  desti
																																												
																																												Thread.sleep(3000);
																																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																												l44.setIcon(i103);
																																												
																																												Thread.sleep(3000);
																																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																												l45.setIcon(i121);
																																												
																																												funcnD1(ss1,dname,dip,content,fname);
																																												
																																												
																																											}
																																											else if(i1==1)
																																											{
																																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																												dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																												Thread.sleep(2000);   
																																												refresh();
																																											}
																																										}
																																									}
																																									else
																																									{
																																										Thread.sleep(3000);
																																										ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																										l42.setIcon(i112);
																																																																																		
																																										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																										if(i1==0)
																																										{
																																											Statement stmt21 = con.createStatement();
																																											String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																											stmt21.executeUpdate(sql21);
																																											
																																											Socket sc8 = new Socket("localhost",902);
																																											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																											dout7.writeUTF("N20");
																																											dout7.writeUTF(fname);
																																											dout7.writeUTF(mac20);
																																											dout7.writeUTF(mac);
																																											
																																											
																																											DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																																											String i71=din7.readUTF();
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																											l42.setIcon(i113);
																																											
																																																																			
																																											//code towards  desti
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																											l44.setIcon(i103);
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																											l45.setIcon(i121);
																																											
																																											funcnD1(ss1,dname,dip,content,fname);
																																										}
																																										else if(i1==1)
																																										{
																																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																											Thread.sleep(2000);   
																																											refresh();
																																										}
																																									
																																									}
																																									
																																									
																																									
																																									
																																								}
																																								else if(i==1)
																																								{
																																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																									dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																																									Thread.sleep(2000);   
																																									refresh();
																																								}
																																								
																																								
																																							}
																																						}
																																						else
																																						{
																																							Thread.sleep(3000);
																																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																							l40.setIcon(i110);
																																							
																																							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																																							if(i==0)
																																							{
																																								Statement stmt2 = con.createStatement();
																																								String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																																								stmt2.executeUpdate(sql2);
																																								
																																								Socket sc8 = new Socket("localhost",902);
																																								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																								dout7.writeUTF("N19");
																																								dout7.writeUTF(fname);
																																								dout7.writeUTF(mac19);
																																								dout7.writeUTF(mac);
																																								
																																								
																																								DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																								String i7=din7.readUTF();
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																								l37.setIcon(i112);
																																								
																																																													
																																								//code towards  node 20
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																								l43.setIcon(i101);
																																								
																																								if(mac.equalsIgnoreCase(mac20))
																																								{
																																									if(len<=bw20)
																																									{
																																										Thread.sleep(3000);
																																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																										l42.setIcon(i113);
																																										
																																										//code towards desti
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																										l44.setIcon(i103);
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																										l45.setIcon(i121);
																																										
																																										funcnD1(ss1,dname,dip,content,fname);
																																																																																				
																																										
																																										
																																									}
																																									else if(len>=bw20)
																																									{
																																										Thread.sleep(3000);
																																										ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																										l42.setIcon(i113);
																																										
																																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																										if(i1==0)
																																										{
																																											int bw1=len;
																																											bw1=bw1+1000;
																																											
																																											Statement stmt21 = con.createStatement();
																																											String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																											stmt21.executeUpdate(sql21);
																																											
																																											Socket sc71 = new Socket("localhost",901);
																																											DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																											dout61.writeUTF("N20");
																																											dout61.writeUTF(fname);
																																											dout61.writeUTF(Integer.toString(len));
																																											dout61.writeUTF(Integer.toString(bw20));
																																											dout61.writeUTF(Integer.toString(bw1));
																																											
																																											DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																											String i71=din71.readUTF();
																																											
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																											l42.setIcon(i114);
																																											
																																																																				
																																											//code towards  desti
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																											l44.setIcon(i103);
																																											
																																											Thread.sleep(3000);
																																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																											l45.setIcon(i121);
																																											
																																											funcnD1(ss1,dname,dip,content,fname);
																																											
																																											
																																										}
																																										else if(i1==1)
																																										{
																																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																											Thread.sleep(2000);   
																																											refresh();
																																										}
																																									}
																																								}
																																								else
																																								{
																																									Thread.sleep(3000);
																																									ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																									l42.setIcon(i115);
																																																																																	
																																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																									int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																									if(i1==0)
																																									{
																																										Statement stmt21 = con.createStatement();
																																										String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																										stmt21.executeUpdate(sql21);
																																										
																																										Socket sc81 = new Socket("localhost",902);
																																										DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																																										dout71.writeUTF("N20");
																																										dout71.writeUTF(fname);
																																										dout71.writeUTF(mac20);
																																										dout71.writeUTF(mac);
																																										
																																										
																																										DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																																										String i71=din7.readUTF();
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																										l42.setIcon(i113);
																																										
																																																																		
																																										//code towards  desti
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																										l44.setIcon(i103);
																																										
																																										Thread.sleep(3000);
																																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																										l45.setIcon(i121);
																																										
																																										funcnD1(ss1,dname,dip,content,fname);
																																									}
																																									else if(i1==1)
																																									{
																																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																										Thread.sleep(2000);   
																																										refresh();
																																									}
																																								
																																								}
																																							}
																																							else if(i==1)
																																							{
																																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																								dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																								Thread.sleep(2000);   
																																								refresh();
																																							}
																																						}
																																					}
																																					else if(cost19>=cost20)
																																					{
																																						ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																																						l41.setIcon(i101);
																																						
																																						if(mac.equalsIgnoreCase(mac20))
																																						{
																																							if(len<=bw20)
																																							{
																																								Thread.sleep(3000);
																																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																								l42.setIcon(i113);
																																								
																																								//code towards desti
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																								l44.setIcon(i103);
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																								l45.setIcon(i121);
																																								
																																								funcnD1(ss1,dname,dip,content,fname);
																																																																																		
																																								
																																								
																																							}
																																							else if(len>=bw20)
																																							{
																																								Thread.sleep(3000);
																																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																								l42.setIcon(i110);
																																								
																																								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																								if(i==0)
																																								{
																																									int bw=len;
																																									bw=bw+1000;
																																									
																																									Statement stmt2 = con.createStatement();
																																									String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																									stmt2.executeUpdate(sql2);
																																									
																																									Socket sc7 = new Socket("localhost",901);
																																									DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																									dout6.writeUTF("N20");
																																									dout6.writeUTF(fname);
																																									dout6.writeUTF(Integer.toString(len));
																																									dout6.writeUTF(Integer.toString(bw20));
																																									dout6.writeUTF(Integer.toString(bw));
																																									
																																									DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																									String i7=din7.readUTF();
																																									
																																									
																																									Thread.sleep(3000);
																																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																									l42.setIcon(i113);
																																									
																																																																		
																																									//code towards  desti
																																									
																																									Thread.sleep(3000);
																																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																									l44.setIcon(i103);
																																									
																																									Thread.sleep(3000);
																																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																									l45.setIcon(i121);
																																									
																																									funcnD1(ss1,dname,dip,content,fname);
																																									
																																									
																																								}
																																								else if(i==1)
																																								{
																																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																									dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																									Thread.sleep(2000);   
																																									refresh();
																																								}
																																							}
																																						}
																																						else
																																						{
																																							Thread.sleep(3000);
																																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																							l42.setIcon(i110);
																																																																															
																																							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																							if(i==0)
																																							{
																																								Statement stmt2 = con.createStatement();
																																								String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																								stmt2.executeUpdate(sql2);
																																								
																																								Socket sc8 = new Socket("localhost",902);
																																								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																								dout7.writeUTF("N20");
																																								dout7.writeUTF(fname);
																																								dout7.writeUTF(mac20);
																																								dout7.writeUTF(mac);
																																								
																																								
																																								DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																								String i7=din7.readUTF();
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																								l42.setIcon(i113);
																																								
																																																																
																																								//code towards  desti
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																								l44.setIcon(i103);
																																								
																																								Thread.sleep(3000);
																																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																								l45.setIcon(i121);
																																								
																																								funcnD1(ss1,dname,dip,content,fname);
																																							}
																																							else if(i==1)
																																							{
																																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																								dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																								Thread.sleep(2000);   
																																								refresh();
																																							}
																																						
																																						}
																																					}
																																						
																																				}
																																				else if(len<=bw18)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																					l37.setIcon(i110);
																																					
																																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																																					if(i==0)
																																					{
																																						int bw=len;
																																						bw=bw+1000;
																																						
																																						Statement stmt2 = con.createStatement();
																																						String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																																						stmt2.executeUpdate(sql2);
																																						
																																						Socket sc7 = new Socket("localhost",901);
																																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																						dout6.writeUTF("N18");
																																						dout6.writeUTF(fname);
																																						dout6.writeUTF(Integer.toString(len));
																																						dout6.writeUTF(Integer.toString(bw18));
																																						dout6.writeUTF(Integer.toString(bw));
																																						
																																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																						String i7=din7.readUTF();
																																						
																																						
																																						Thread.sleep(3000);
																																						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																						l37.setIcon(i111);
																																						
																																																															
																																						//code towards  node 19 and node 20
																																						funcn19to20(ss1,dname,dip,content,fname,mac,len);
																																						break;
																																						
																																						
																																						
																																					}
																																					else if(i==1)
																																					{
																																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																						dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																																						Thread.sleep(2000);   
																																						refresh();
																																					}
																																					
																																				}
																																			}
																																			else
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																				l37.setIcon(i110);
																																				
																																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																																				if(i==0)
																																				{
																																					Statement stmt2 = con.createStatement();
																																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																																					stmt2.executeUpdate(sql2);
																																					
																																					Socket sc8 = new Socket("localhost",902);
																																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																					dout7.writeUTF("N18");
																																					dout7.writeUTF(fname);
																																					dout7.writeUTF(mac18);
																																					dout7.writeUTF(mac);
																																					
																																					
																																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																					String i7=din7.readUTF();
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l37.setIcon(i111);
																																					
																																																													
																																					//code towards  node 19 and node 20
																																					funcn19to20(ss1,dname,dip,content,fname,mac,len);
																																					break;
																																					
																																				}
																																				else if(i==1)
																																				{
																																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																					Thread.sleep(2000);   
																																					refresh();
																																				}
																																			}
																																			
																																		}
																																		
																																		
																																	}
																																	else if(len>=bw16)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																		l31.setIcon(i110);
																																		
																																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																																		if(i==0)
																																		{
																																			int bw=len;
																																			bw=bw+1000;
																																			
																																			Statement stmt2 = con.createStatement();
																																			String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																																			stmt2.executeUpdate(sql2);
																																			
																																			Socket sc7 = new Socket("localhost",901);
																																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																			dout6.writeUTF("N16");
																																			dout6.writeUTF(fname);
																																			dout6.writeUTF(Integer.toString(len));
																																			dout6.writeUTF(Integer.toString(bw16));
																																			dout6.writeUTF(Integer.toString(bw));
																																			
																																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																			String i7=din7.readUTF();
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																			l31.setIcon(i108);
																																			
																																																												
																																			//code towards node 17 and node 18
																																			funcn17to18(ss1,dname,dip,content,fname,mac,len);
																																			break;
																																		}
																																		else if(i==1)
																																		{
																																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																			dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																																			Thread.sleep(2000);   
																																			refresh();
																																		}
																																	}
																																}
																																else
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l31.setIcon(i110);
																																	
																																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																																	if(i==0)
																																	{
																																		Statement stmt2 = con.createStatement();
																																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																																		stmt2.executeUpdate(sql2);
																																		
																																		Socket sc8 = new Socket("localhost",902);
																																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																		dout7.writeUTF("N16");
																																		dout7.writeUTF(fname);
																																		dout7.writeUTF(mac16);
																																		dout7.writeUTF(mac);
																																		
																																		
																																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																		String i7=din7.readUTF();
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l31.setIcon(i108);
																																		
																																																										
																																		//code towards node 17 and node 18
																																		
																																		funcn17to18(ss1,dname,dip,content,fname,mac,len);
																																		break;
																																	}
																																	else if(i==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																}
																															}
																															
																															
																														}
																														else if(len>=bw14)
																														{
																															Thread.sleep(3000);
																															ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l28.setIcon(i109);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N14");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw14));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l28.setIcon(i108);
																																
																																																									
																																//code towards node 15 and node 16
																																funcn15to16(ss1,dname,dip,content,fname,mac,len);
																																break;
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l28.setIcon(i109);
																														
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N14");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac14);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l28.setIcon(i108);
																															
																																																							
																															//code towards node 15 and node 16
																															
																															funcn15to16(ss1,dname,dip,content,fname,mac,len);
																															break;
																															
																														}
																														else if(i==1)
																														{
																															//code towards node 12
																															funcn12(ss1,dname,dip,content,fname,mac,len);
																															break;
																														}
																														
																														
																													}
																												}
																												
																												
																													
																											}
																											else if(len>=bw11)
																											{
																												Thread.sleep(3000);
																												ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l25.setIcon(i107);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N11");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw11));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l25.setIcon(i108);
																													
																																																						
																													//code towards node 13 and node 14
																													
																													funcn13to14(ss1,dname,dip,content,fname,mac,len);
																													break;
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l25.setIcon(i107);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N11");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac11);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l25.setIcon(i108);
																												
																																																				
																												//code towards node 13 and node 14
																												funcn13to14(ss1,dname,dip,content,fname,mac,len);
																												break;
																											}
																											else if(i==1)
																											{
																												//code towards node 12
																												funcn12(ss1,dname,dip,content,fname,mac,len);
																												break;
																											}
																										}
																									}
																									else if(cost11>=cost12)
																									{
																										Thread.sleep(3000);
																										ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																										l23.setIcon(i96);
																										
																										if(mac.equalsIgnoreCase(mac12))
																										{
																											if(len<=bw12)
																											{
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l24.setIcon(i108);
																												//code towards node 14 and node 16
																												
																												if(cost14<=cost16)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																													l27.setIcon(i97);
																													//code towards node 14
																													
																													funcn14(ss1,dname,dip,content,fname,mac,len);
																													break;
																												}
																												else if(cost14>=cost16)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																													l33.setIcon(i97);
																													//code towards node 16
																													
																													funcn16(ss1,dname,dip,content,fname,mac,len);
																													break;
																													
																													
																												}
																												
																											}
																											else if(len>=bw12)
																											{
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l24.setIcon(i108);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N12");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw12));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l24.setIcon(i107);
																													
																																																						
																													//code towards node 14 and node 16
																													
																													if(cost14<=cost16)
																													{
																														Thread.sleep(3000);
																														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																														l27.setIcon(i97);
																														//code towards node 14
																														
																														funcn14(ss1,dname,dip,content,fname,mac,len);
																														break;
																													}
																													else if(cost14>=cost16)
																													{
																														Thread.sleep(3000);
																														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																														l33.setIcon(i97);
																														//code towards node 16
																														
																														funcn16(ss1,dname,dip,content,fname,mac,len);
																														break;
																														
																														
																													}
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l24.setIcon(i108);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N12");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac12);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l24.setIcon(i107);
																												
																																																				
																												//code towards node 14 and node 16
																												
																												if(cost14<=cost16)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																													l27.setIcon(i97);
																													//code towards node 14
																													
																													funcn14(ss1,dname,dip,content,fname,mac,len);
																													break;
																												}
																												else if(cost14>=cost16)
																												{
																													Thread.sleep(3000);
																													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																													l33.setIcon(i97);
																													//code towards node 16
																													
																													funcn16(ss1,dname,dip,content,fname,mac,len);
																													break;
																													
																													
																												}
																											}
																											else if(i==1)
																											{
																												//code towards node 11
																												funcn11(ss1,dname,dip,content,fname,mac,len);
																												break;
																											}
																										}
																									}
																									
																									
																								}
																								else if(len>=bw10)
																								{
																									Thread.sleep(3000);
																									ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l21.setIcon(i107);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N10");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw10));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l21.setIcon(i106);
																										
																																																			
																										//code towards node 11 and node 12
																										funcn11to12(ss1,dname,dip,content,fname,mac,len);
																										break;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l21.setIcon(i103);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N10");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac10);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l21.setIcon(i107);
																									
																																																	
																									//code towards node 11 and node 12
																									
																									funcn11to12(ss1,dname,dip,content,fname,mac,len);
																									break;
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																							
																						}
																						else if(len>=bw9)
																						{
																							Thread.sleep(3000);
																							ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l19.setIcon(i107);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N9");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw9));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l19.setIcon(i106);
																								
																																																	
																								//code towards node 10
																								
																								funcn10(ss1,dname,dip,content,fname,mac,len);
																								break;
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else
																					{

																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l19.setIcon(i103);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N9");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac9);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l19.setIcon(i107);
																							
																																															
																							//code towards node 10
																							
																							Thread.sleep(3000);
																							ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
																							l20.setIcon(i122);
																							
																							funcn10(ss1,dname,dip,content,fname,mac,len);
																							break;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					
																					}
																					
																				}
																				else if(len>=bw8)
																				{
																					Thread.sleep(3000);
																					ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l17.setIcon(i107);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
																					if(i==0)
																					{
																						int bw=len;
																						bw=bw+1000;
																						
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc7 = new Socket("localhost",901);
																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																						dout6.writeUTF("N8");
																						dout6.writeUTF(fname);
																						dout6.writeUTF(Integer.toString(len));
																						dout6.writeUTF(Integer.toString(bw8));
																						dout6.writeUTF(Integer.toString(bw));
																						
																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																						String i7=din7.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l17.setIcon(i106);
																						
																																															
																						//code towards node 9
																						funcn9(ss1,dname,dip,content,fname,mac,len);
																						break;
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{

																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l17.setIcon(i103);
																				
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
																				if(i==0)
																				{
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N8");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac8);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																					String i7=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l17.setIcon(i107);
																					
																																													
																					//code towards node 9
																					
																					Thread.sleep(3000);
																					ImageIcon i125=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
																					l18.setIcon(i125);
																					
																					funcn9(ss1,dname,dip,content,fname,mac,len);
																					break;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			
																			}
																			
																			
																					
																		}
																		
																		
																		
																	}
																	else if(len>=bw6)
																	{
																		Thread.sleep(3000);
																		ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l11.setIcon(i102);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-6");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-6");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N6'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N6");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw6));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l11.setIcon(i103);
																			
																			
																			
																			//code towards node7 and node 8
																			funcn7to8(ss1,dname,dip,content,fname,mac,len);
																			break;
																			
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-6 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																		
																	}
																		
																}
																else 
																{
																	Thread.sleep(3000);
																	ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l11.setIcon(i102);
																	
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-6");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-6");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N6'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N6");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac6);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l11.setIcon(i103);
																		
																		
																		
																		//code towards node7 and node 8
																		funcn7to8(ss1,dname,dip,content,fname,mac,len);
																		break;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																	
																}
																
															}
															
														}
														else if(len>=bw3)
														{
															Thread.sleep(3000);
															ImageIcon i523=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
															l7.setIcon(i523);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-3");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-3");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N3'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N3");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw3));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i521=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
																l7.setIcon(i521);
																
																//code towards node 5 or node 6
																
																funcn5to6(ss1,dname,dip,content,fname,mac,len);
																break;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-3 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i52=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
														l7.setIcon(i52);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-3");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-3");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N3'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N3");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac3);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
															l7.setIcon(i511);
															
															//code towards node 5 or node 6
															funcn5to6(ss1,dname,dip,content,fname,mac,len);
															break;
														}
														else if(i==1)
														{
															//code towards node 1 to 2
															funcn2(ss1,dname,dip,content,fname,mac,len);
															break;
														}
													}
												
													
													
												}
												else if(len>=bw1)
												{
													Thread.sleep(3000);
													ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
													l3.setIcon(i51);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-1");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-1");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N1'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N1");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw1));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
														l3.setIcon(i511);
														
														//code towards node 3
														funcn3(ss1,dname,dip,content,fname,mac,len);
														break;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-1 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
													
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
												l3.setIcon(i51);
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-1");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-1");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N1'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N1");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac1);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
													l3.setIcon(i511);
													
													//code towards node 3
													funcn3(ss1,dname,dip,content,fname,mac,len);
													break;
												}
												else if(i==1)
												{
													//code towards node 2
													
													funcn2(ss1,dname,dip,content,fname,mac,len);
													break;
												}
												
											}
										
											
									}
									else if(cost2<=cost1)
									{
										Thread.sleep(3000);
										ImageIcon i73=new ImageIcon(this.getClass().getResource("Greenline2.png"));  //line 3
										l2.setIcon(i73);
										
										if(mac.equalsIgnoreCase(mac2))
										{
											if(len<=bw2)
											{
												Thread.sleep(3000);
												ImageIcon i52=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
												l4.setIcon(i52);
												
												Thread.sleep(3000);
												ImageIcon i75=new ImageIcon(this.getClass().getResource("Greenline4.png"));  //line 3
												l6.setIcon(i75);
												
												if(mac.equalsIgnoreCase(mac4))
												{
													if(len<=bw4)
													{
														Thread.sleep(3000);
														ImageIcon i53=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
														l8.setIcon(i53);
														
														Thread.sleep(3000);
														ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
														l9.setIcon(i74);
														
														//code towards node 6
														funcn6(ss1,dname,dip,content,fname, mac,len);
														break;
													}
													else if(len>=bw4)
													{
														Thread.sleep(3000);
														ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
														l8.setIcon(i51);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-4");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-4");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N4'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N4");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw4));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
															l8.setIcon(i511);
															
															//code towards node 6
															
															Thread.sleep(3000);
															ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
															l9.setIcon(i74);
															
															funcn6(ss1,dname,dip,content,fname, mac,len);
															break;
															
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-4 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
													l8.setIcon(i51);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-4");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-4");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N4'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N4");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac4);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
														l8.setIcon(i511);
														
														//code towards node 6
														
														Thread.sleep(3000);
														ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
														l9.setIcon(i74);
														
														funcn6(ss1,dname,dip,content,fname, mac,len);
														break;
														
													}
													else if(i==1)
													{
														//code towards node 1
														
														funcn1(ss1,dname,dip,content,fname,mac,len);
														break;
													}
												}
											}
											else if(len>=bw2)
											{
												Thread.sleep(3000);
												ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
												l4.setIcon(i51);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-2");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-2");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N2'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N2");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw2));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
													l4.setIcon(i511);
													
													//code towards node 4
													funcn4(ss1,dname,dip,content,fname,mac,len);
													break;
													
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-2 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
											l4.setIcon(i51);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-2");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-2");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N2'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N2");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac2);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
												l4.setIcon(i511);
												
												//code towards node 4
												funcn4(ss1,dname,dip,content,fname,mac,len);
												break;
											}
											else if(i==1)
											{
												//code towards node 1
												
												funcn1(ss1,dname,dip,content,fname,mac,len);
												break;
											}
										}
									}

						
				
					
											

					}
				} catch (Exception e) {
					// TODO: handle exception
				}


			}

			if(this.port==1006)
			{

				try 
				{

					DBCon db=new DBCon();
					Connection con=db.getConnection();

					ServerSocket s1=new ServerSocket(1006);
					while(true)
					{
						Socket ss1=s1.accept();

						DataInputStream dis=new DataInputStream(ss1.getInputStream());

						String fname=dis.readUTF();
						String mac=dis.readUTF();
						String dname=dis.readUTF();
						String dip=dis.readUTF();
						
						Statement stmt1 = con.createStatement();
						String sql2="update Router set Mac='"+mac+"',fname='"+fname+"',dname='"+dname+"',dip='"+dip+"',idata='',status='Normal' ";
						stmt1.executeUpdate(sql2);
						
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("success");



					}
				} catch (Exception e) {
					// TODO: handle exception
				}

			}
			
			
			

		}

	}
	
	
	public void funcn2(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();

				Thread.sleep(3000);
				ImageIcon i73=new ImageIcon(this.getClass().getResource("Greenline2.png"));  //line 3
				l2.setIcon(i73);
				
			one:	if(mac.equalsIgnoreCase(mac2))
				{
					if(len<=bw2)
					{
						Thread.sleep(3000);
						ImageIcon i52=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
						l4.setIcon(i52);
						
						Thread.sleep(3000);
						ImageIcon i75=new ImageIcon(this.getClass().getResource("Greenline4.png"));  //line 3
						l6.setIcon(i75);
						
						if(mac.equalsIgnoreCase(mac4))
						{
							if(len<=bw4)
							{
								Thread.sleep(3000);
								ImageIcon i53=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
								l8.setIcon(i53);
								
								Thread.sleep(3000);
								ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
								l9.setIcon(i74);
								
								//code towards node 6
								funcn6(ss1,dname,dip,content,fname, mac,len);
								break one;
							}
							else if(len>=bw4)
							{
								Thread.sleep(3000);
								ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
								l8.setIcon(i51);
								
								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-4");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-4");
								if(i==0)
								{
									int bw=len;
									bw=bw+1000;
									
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set  Bw="+bw+" where nname='N4'";
									stmt2.executeUpdate(sql2);
									
									Socket sc7 = new Socket("localhost",901);
									DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
									dout6.writeUTF("N4");
									dout6.writeUTF(fname);
									dout6.writeUTF(Integer.toString(len));
									dout6.writeUTF(Integer.toString(bw4));
									dout6.writeUTF(Integer.toString(bw));
									
									DataInputStream din7 = new DataInputStream(sc7.getInputStream());
									String i7=din7.readUTF();
									
									
									Thread.sleep(3000);
									ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
									l8.setIcon(i511);
									
									//code towards node 6
									
									Thread.sleep(3000);
									ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
									l9.setIcon(i74);
									
									funcn6(ss1,dname,dip,content,fname, mac,len);
									break one;
									
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("Due to Less Energy in Node-4 Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
						}
						else
						{
							Thread.sleep(3000);
							ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
							l8.setIcon(i51);
							
							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-4");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-4");
							if(i==0)
							{
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N4'";
								stmt2.executeUpdate(sql2);
								
								Socket sc8 = new Socket("localhost",902);
								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
								dout7.writeUTF("N4");
								dout7.writeUTF(fname);
								dout7.writeUTF(mac4);
								dout7.writeUTF(mac);
								
								
								DataInputStream din7 = new DataInputStream(sc8.getInputStream());
								String i7=din7.readUTF();
								
								Thread.sleep(3000);
								ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
								l8.setIcon(i511);
								
								//code towards node 6
								
								Thread.sleep(3000);
								ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
								l9.setIcon(i74);
								
								funcn6(ss1,dname,dip,content,fname, mac,len);
								break one;
								
							}
							else if(i==1)
							{
								//code towards node 1
								
								funcn1(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
						}
					}
					else if(len>=bw2)
					{
						Thread.sleep(3000);
						ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
						l4.setIcon(i51);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-2");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-2");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N2'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N2");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw2));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
							l4.setIcon(i511);
							
							//code towards node 4
							funcn4(ss1,dname,dip,content,fname,mac,len);
							break one;
							
							
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-2 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
					l4.setIcon(i51);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-2");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-2");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N2'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N2");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac2);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
						l4.setIcon(i511);
						
						//code towards node 4
						funcn4(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						//code towards node 1
						
						funcn1(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
				}
			
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn1(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				Thread.sleep(3000);
				ImageIcon i72=new ImageIcon(this.getClass().getResource("Greenline1.png"));  //line 1
				l1.setIcon(i72);
				
			one:	if(mac.equalsIgnoreCase(mac1))
					{
						if(len<=bw1)
						{
							
							Thread.sleep(3000);
							ImageIcon i51=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
							l3.setIcon(i51);
							
							Thread.sleep(3000);
							ImageIcon i73=new ImageIcon(this.getClass().getResource("Greenline3.png"));  //line 3
							l5.setIcon(i73);
							
							
							if(mac.equalsIgnoreCase(mac3))
							{
								if(len<=bw3)
								{
									Thread.sleep(3000);
									ImageIcon i52=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
									l7.setIcon(i52);
									
									
									
									if(cost5<=cost6)
									{
										Thread.sleep(3000);
										ImageIcon i91=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
										l12.setIcon(i91);
										if(mac.equalsIgnoreCase(mac5))
										{
											if(len<=bw5)
											{
												Thread.sleep(3000);
												ImageIcon i101=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l13.setIcon(i101);
												
												Thread.sleep(3000);
												ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
												l46.setIcon(i93);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
												
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N5");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												
												//code towards node6
												Thread.sleep(3000);
												ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
												l10.setIcon(i95);
												
												funcn6(ss1,dname,dip,content,fname, mac,len);
												break one;
											}
											else if(len>=bw5)
											{
												Thread.sleep(3000);
												ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l13.setIcon(i101);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-5");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-5");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N5'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N5");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw5));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l13.setIcon(i102);
													
													Thread.sleep(3000);
													ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
													l46.setIcon(i93);
													JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
													Socket sc16 = new Socket("localhost",903);
													DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
													dout16.writeUTF("N5");
																															
													DataInputStream din16 = new DataInputStream(sc16.getInputStream());
													String i16=din16.readUTF();
													
													//code towards node6
													Thread.sleep(3000);
													ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
													l10.setIcon(i95);
													
													funcn6(ss1,dname,dip,content,fname, mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-5 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
											l13.setIcon(i101);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-5");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-5");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N5'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N5");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac5);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l13.setIcon(i102);
												
												Thread.sleep(3000);
												ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
												l46.setIcon(i93);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N5");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												//code towards node6
												Thread.sleep(3000);
												ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
												l10.setIcon(i95);
												funcn6(ss1,dname,dip,content,fname, mac,len);
												break one;
											}
											else if(i==1)
											{
												//code towards node6
												Thread.sleep(3000);
												ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
												l10.setIcon(i93);
												funcn6(ss1,dname,dip,content,fname, mac,len);
												break one;
											}
										}
										
										
									}
									else if(cost5>=cost6)
									{
										Thread.sleep(3000);
										ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
										l10.setIcon(i93);
										
										if(mac.equalsIgnoreCase(mac6))
										{
											if(len<=bw6)
											{
												Thread.sleep(3000);
												ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l11.setIcon(i102);
												
												//code towards node7 and node 8
												
												
												if(cost7<=cost8)
												{
													Thread.sleep(3000);
													ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
													l14.setIcon(i94);
													
													if(mac.equalsIgnoreCase(mac7))
													{
														if(len<=bw7)
														{
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l16.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
															l47.setIcon(i95);
															JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
															Socket sc16 = new Socket("localhost",903);
															DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
															dout16.writeUTF("N7");
																																	
															DataInputStream din16 = new DataInputStream(sc16.getInputStream());
															String i16=din16.readUTF();
															
															//code towards node8
															funcn8(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(len>=bw7)
														{
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l16.setIcon(i103);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N7");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw7));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l16.setIcon(i104);
																
																Thread.sleep(3000);
																ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
																l47.setIcon(i95);
																JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
																Socket sc16 = new Socket("localhost",903);
																DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																dout16.writeUTF("N7");
																																		
																DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																String i16=din16.readUTF();
																
																//code towards node8
																funcn8(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l16.setIcon(i103);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N7");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac7);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l16.setIcon(i104);
															
															Thread.sleep(3000);
															ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
															l47.setIcon(i95);
															JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
															Socket sc16 = new Socket("localhost",903);
															DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
															dout16.writeUTF("N7");
																																	
															DataInputStream din16 = new DataInputStream(sc16.getInputStream());
															String i16=din16.readUTF();
															
															//code towards node8
															
															funcn8(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															//code towards node8
															
															funcn8(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														
													}
													
													
												}
												else if(cost7>=cost8)
												{
													Thread.sleep(3000);
													ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
													l15.setIcon(i95);
													
													
													
													if(mac.equalsIgnoreCase(mac8))
													{
														if(len<=bw8)
														{
															Thread.sleep(3000);
															ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l17.setIcon(i104);
															
															
															
															if(mac.equalsIgnoreCase(mac9))
															{
																if(len<=bw9)
																{
																	Thread.sleep(3000);
																	ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l19.setIcon(i105);
																	
																	
																	
																	if(mac.equalsIgnoreCase(mac10))
																	{
																		if(len<=bw10)
																		{
																			Thread.sleep(3000);
																			ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l21.setIcon(i106);
																			
																			//code towards node 11 and node 12
																			
																			
																			
																			if(cost11<=cost12)
																			{
																				Thread.sleep(3000);
																				ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																				l22.setIcon(i96);
																				
																				if(mac.equalsIgnoreCase(mac11))
																				{
																					if(len<=bw11)
																					{
																						Thread.sleep(3000);
																						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l25.setIcon(i107);
																						
																						//code towards node 13 and node 14
																						
																						
																						if(cost13<=cost14)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																							l26.setIcon(i97);
																							
																							if(mac.equalsIgnoreCase(mac13))
																							{
																								if(len<=bw13)
																								{
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l48.setIcon(i108);
																									
																									Thread.sleep(3000);
																									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																									l49.setIcon(i98);
																									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																									Socket sc16 = new Socket("localhost",903);
																									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																									dout16.writeUTF("N13");
																																											
																									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																									String i16=din16.readUTF();
																									
																									//code towards node 14
																									Thread.sleep(3000);
																									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																									l55.setIcon(i99);
																									
																									funcn14(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(len>=bw13)
																								{
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l48.setIcon(i108);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N13");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw13));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l48.setIcon(i109);
																										
																																																			
																										Thread.sleep(3000);
																										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																										l49.setIcon(i98);
																										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																										Socket sc16 = new Socket("localhost",903);
																										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																										dout16.writeUTF("N13");
																																												
																										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																										String i16=din16.readUTF();
																										
																										//code towards node 14
																										
																										Thread.sleep(3000);
																										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																										l55.setIcon(i99);
																										
																										funcn14(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l48.setIcon(i108);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N13");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac13);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l48.setIcon(i109);
																									
																																																	
																									Thread.sleep(3000);
																									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																									l49.setIcon(i98);
																									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																									Socket sc16 = new Socket("localhost",903);
																									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																									dout16.writeUTF("N13");
																																											
																									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																									String i16=din16.readUTF();
																									
																									//code towards node 14
																									Thread.sleep(3000);
																									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																									l55.setIcon(i99);
																									funcn14(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(i==1)
																								{
																									//code towards node 14
																									Thread.sleep(3000);
																									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																									l55.setIcon(i98);
																									
																									funcn14(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								
																								
																							}
																						
																						}
																						else if(cost13>=cost14)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																							l55.setIcon(i97);
																							
																							if(mac.equalsIgnoreCase(mac14))
																							{
																								if(len<=bw14)
																								{
																									Thread.sleep(3000);
																									ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l28.setIcon(i109);
																									
																									//code towards node 15 and node 16
																									
																									
																									
																									if(cost15<=cost16)
																									{
																										Thread.sleep(3000);
																										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																										l29.setIcon(i98);
																										
																										if(mac.equalsIgnoreCase(mac15))
																										{
																											if(len<=bw15)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l30.setIcon(i110);
																												
																												Thread.sleep(3000);
																												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																												l34.setIcon(i99);
																												
																												//code towards node 16
																												
																												funcn16(ss1,dname,dip,content,fname,mac,len);
																												break one;
																											}
																											else if(len>=bw15)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l30.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N15");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw15));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l30.setIcon(i108);
																													
																													Thread.sleep(3000);
																													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																													l34.setIcon(i99);																									
																													//code towards node 16
																													funcn16(ss1,dname,dip,content,fname,mac,len);
																													break one;
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																												
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l30.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N15");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac15);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l30.setIcon(i108);
																												
																												Thread.sleep(3000);
																												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																												l34.setIcon(i99);																								
																												//code towards  node 16
																												
																												funcn16(ss1,dname,dip,content,fname,mac,len);
																												break one;
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																											
																											
																										}
																									}
																									else if(cost15>=cost16)
																									{
																										Thread.sleep(3000);
																										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																										l32.setIcon(i98);
																										
																										if(mac.equalsIgnoreCase(mac16))
																										{
																											if(len<=bw16)
																											{
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l31.setIcon(i108);
																												
																												//code towards node 17 and node 18
																												
																												
																												if(cost17<=cost18)
																												{
																													Thread.sleep(3000);
																													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																													l36.setIcon(i99);
																													
																													if(mac.equalsIgnoreCase(mac17))
																													{
																														if(len<=bw17)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l38.setIcon(i110);
																															
																															//code towards node 18
																															
																															funcn18(ss1,dname,dip,content,fname,mac,len);
																															break one;
																														}
																														else if(len>=bw17)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l38.setIcon(i110);
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N17");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw17));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l38.setIcon(i111);
																																
																																																									
																																//code towards node 18
																																funcn18(ss1,dname,dip,content,fname,mac,len);
																																break one;
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else 
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l38.setIcon(i110);
																														
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N17");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac17);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l38.setIcon(i111);
																															
																																																							
																															//code towards  node 18
																															funcn18(ss1,dname,dip,content,fname,mac,len);
																															break one;
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													}
																													
																												}
																												else if(cost17>=cost18)
																												{
																													Thread.sleep(3000);
																													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																													l35.setIcon(i99);
																													
																													if(mac.equalsIgnoreCase(mac18))
																													{
																														if(len<=bw18)
																														{
																															Thread.sleep(3000);
																															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l37.setIcon(i111);
																															
																															//code towards  node 19 and node 20
																															
																															if(cost19<=cost20)
																															{
																																Thread.sleep(3000);
																																ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																																l39.setIcon(i100);
																																
																																if(mac.equalsIgnoreCase(mac19))
																																{
																																	if(len<=bw19)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l40.setIcon(i112);
																																		
																																		//code towards   node 20
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l43.setIcon(i101);
																																		
																																		if(mac.equalsIgnoreCase(mac20))
																																		{
																																			if(len<=bw20)
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																				l42.setIcon(i113);
																																				
																																				//code towards desti
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																				l44.setIcon(i103);
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																				l45.setIcon(i121);
																																				
																																				funcnD1(ss1,dname,dip,content,fname);
																																																																														
																																				
																																				
																																			}
																																			else if(len>=bw20)
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																				l42.setIcon(i110);
																																				
																																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																				if(i==0)
																																				{
																																					int bw=len;
																																					bw=bw+1000;
																																					
																																					Statement stmt2 = con.createStatement();
																																					String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																					stmt2.executeUpdate(sql2);
																																					
																																					Socket sc7 = new Socket("localhost",901);
																																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																					dout6.writeUTF("N20");
																																					dout6.writeUTF(fname);
																																					dout6.writeUTF(Integer.toString(len));
																																					dout6.writeUTF(Integer.toString(bw20));
																																					dout6.writeUTF(Integer.toString(bw));
																																					
																																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																					String i7=din7.readUTF();
																																					
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l42.setIcon(i113);
																																					
																																																														
																																					//code towards  desti
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																					l44.setIcon(i103);
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																					l45.setIcon(i121);
																																					
																																					funcnD1(ss1,dname,dip,content,fname);
																																					
																																					
																																				}
																																				else if(i==1)
																																				{
																																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																					dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																					Thread.sleep(2000);   
																																					refresh();
																																				}
																																			}
																																		}
																																		else
																																		{
																																			Thread.sleep(3000);
																																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																			l42.setIcon(i110);
																																																																											
																																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																			if(i==0)
																																			{
																																				Statement stmt2 = con.createStatement();
																																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																				stmt2.executeUpdate(sql2);
																																				
																																				Socket sc8 = new Socket("localhost",902);
																																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																				dout7.writeUTF("N20");
																																				dout7.writeUTF(fname);
																																				dout7.writeUTF(mac20);
																																				dout7.writeUTF(mac);
																																				
																																				
																																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																				String i7=din7.readUTF();
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																				l42.setIcon(i113);
																																				
																																																												
																																				//code towards  desti
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																				l44.setIcon(i103);
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																				l45.setIcon(i121);
																																				
																																				funcnD1(ss1,dname,dip,content,fname);
																																			}
																																			else if(i==1)
																																			{
																																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																				Thread.sleep(2000);   
																																				refresh();
																																			}
																																		
																																		}
																																		
																																	}
																																	else if(len>=bw19)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																		l40.setIcon(i110);
																																		
																																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																																		if(i==0)
																																		{
																																			int bw=len;
																																			bw=bw+1000;
																																			
																																			Statement stmt2 = con.createStatement();
																																			String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																																			stmt2.executeUpdate(sql2);
																																			
																																			Socket sc7 = new Socket("localhost",901);
																																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																			dout6.writeUTF("N19");
																																			dout6.writeUTF(fname);
																																			dout6.writeUTF(Integer.toString(len));
																																			dout6.writeUTF(Integer.toString(bw19));
																																			dout6.writeUTF(Integer.toString(bw));
																																			
																																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																			String i7=din7.readUTF();
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																			l40.setIcon(i114);
																																			
																																																												
																																			//code towards   node 20
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																			l43.setIcon(i101);
																																			
																																			if(mac.equalsIgnoreCase(mac20))
																																			{
																																				if(len<=bw20)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l42.setIcon(i113);
																																					
																																					//code towards desti
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																					l44.setIcon(i103);
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																					l45.setIcon(i121);
																																					
																																					funcnD1(ss1,dname,dip,content,fname);
																																																																															
																																					
																																					
																																				}
																																				else if(len>=bw20)
																																				{
																																					Thread.sleep(3000);
																																					ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																					l42.setIcon(i112);
																																					
																																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																					int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																					if(i1==0)
																																					{
																																						int bw1=len;
																																						bw1=bw1+1000;
																																						
																																						Statement stmt21 = con.createStatement();
																																						String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																						stmt21.executeUpdate(sql21);
																																						
																																						Socket sc71 = new Socket("localhost",901);
																																						DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																						dout61.writeUTF("N20");
																																						dout61.writeUTF(fname);
																																						dout61.writeUTF(Integer.toString(len));
																																						dout61.writeUTF(Integer.toString(bw20));
																																						dout61.writeUTF(Integer.toString(bw1));
																																						
																																						DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																						String i71=din71.readUTF();
																																						
																																						
																																						Thread.sleep(3000);
																																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																						l42.setIcon(i113);
																																						
																																																															
																																						//code towards  desti
																																						
																																						Thread.sleep(3000);
																																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																						l44.setIcon(i103);
																																						
																																						Thread.sleep(3000);
																																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																						l45.setIcon(i121);
																																						
																																						funcnD1(ss1,dname,dip,content,fname);
																																						
																																						
																																					}
																																					else if(i1==1)
																																					{
																																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																						dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																						Thread.sleep(2000);   
																																						refresh();
																																					}
																																				}
																																			}
																																			else
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																				l42.setIcon(i112);
																																																																												
																																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																				int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																				if(i1==0)
																																				{
																																					Statement stmt21 = con.createStatement();
																																					String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																					stmt21.executeUpdate(sql21);
																																					
																																					Socket sc8 = new Socket("localhost",902);
																																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																					dout7.writeUTF("N20");
																																					dout7.writeUTF(fname);
																																					dout7.writeUTF(mac20);
																																					dout7.writeUTF(mac);
																																					
																																					
																																					DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																																					String i71=din7.readUTF();
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l42.setIcon(i113);
																																					
																																																													
																																					//code towards  desti
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																					l44.setIcon(i103);
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																					l45.setIcon(i121);
																																					
																																					funcnD1(ss1,dname,dip,content,fname);
																																				}
																																				else if(i1==1)
																																				{
																																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																					Thread.sleep(2000);   
																																					refresh();
																																				}
																																			
																																			}
																																			
																																			
																																			
																																			
																																		}
																																		else if(i==1)
																																		{
																																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																			dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																																			Thread.sleep(2000);   
																																			refresh();
																																		}
																																		
																																		
																																	}
																																}
																																else
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l40.setIcon(i110);
																																	
																																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																																	if(i==0)
																																	{
																																		Statement stmt2 = con.createStatement();
																																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																																		stmt2.executeUpdate(sql2);
																																		
																																		Socket sc8 = new Socket("localhost",902);
																																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																		dout7.writeUTF("N19");
																																		dout7.writeUTF(fname);
																																		dout7.writeUTF(mac19);
																																		dout7.writeUTF(mac);
																																		
																																		
																																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																		String i7=din7.readUTF();
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l37.setIcon(i112);
																																		
																																																							
																																		//code towards  node 20
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l43.setIcon(i101);
																																		
																																		if(mac.equalsIgnoreCase(mac20))
																																		{
																																			if(len<=bw20)
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																				l42.setIcon(i113);
																																				
																																				//code towards desti
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																				l44.setIcon(i103);
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																				l45.setIcon(i121);
																																				
																																				funcnD1(ss1,dname,dip,content,fname);
																																																																														
																																				
																																				
																																			}
																																			else if(len>=bw20)
																																			{
																																				Thread.sleep(3000);
																																				ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																				l42.setIcon(i113);
																																				
																																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																				int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																				if(i1==0)
																																				{
																																					int bw1=len;
																																					bw1=bw1+1000;
																																					
																																					Statement stmt21 = con.createStatement();
																																					String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																					stmt21.executeUpdate(sql21);
																																					
																																					Socket sc71 = new Socket("localhost",901);
																																					DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																					dout61.writeUTF("N20");
																																					dout61.writeUTF(fname);
																																					dout61.writeUTF(Integer.toString(len));
																																					dout61.writeUTF(Integer.toString(bw20));
																																					dout61.writeUTF(Integer.toString(bw1));
																																					
																																					DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																					String i71=din71.readUTF();
																																					
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																					l42.setIcon(i114);
																																					
																																																														
																																					//code towards  desti
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																					l44.setIcon(i103);
																																					
																																					Thread.sleep(3000);
																																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																					l45.setIcon(i121);
																																					
																																					funcnD1(ss1,dname,dip,content,fname);
																																					
																																					
																																				}
																																				else if(i1==1)
																																				{
																																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																					dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																					Thread.sleep(2000);   
																																					refresh();
																																				}
																																			}
																																		}
																																		else
																																		{
																																			Thread.sleep(3000);
																																			ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																			l42.setIcon(i115);
																																																																											
																																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																			int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																			if(i1==0)
																																			{
																																				Statement stmt21 = con.createStatement();
																																				String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																				stmt21.executeUpdate(sql21);
																																				
																																				Socket sc81 = new Socket("localhost",902);
																																				DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																																				dout71.writeUTF("N20");
																																				dout71.writeUTF(fname);
																																				dout71.writeUTF(mac20);
																																				dout71.writeUTF(mac);
																																				
																																				
																																				DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																																				String i71=din7.readUTF();
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																				l42.setIcon(i113);
																																				
																																																												
																																				//code towards  desti
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																				l44.setIcon(i103);
																																				
																																				Thread.sleep(3000);
																																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																				l45.setIcon(i121);
																																				
																																				funcnD1(ss1,dname,dip,content,fname);
																																			}
																																			else if(i1==1)
																																			{
																																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																				Thread.sleep(2000);   
																																				refresh();
																																			}
																																		
																																		}
																																	}
																																	else if(i==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																}
																															}
																															else if(cost19>=cost20)
																															{
																																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																																l41.setIcon(i101);
																																
																																if(mac.equalsIgnoreCase(mac20))
																																{
																																	if(len<=bw20)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i113);
																																		
																																		//code towards desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																																																												
																																		
																																		
																																	}
																																	else if(len>=bw20)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																		l42.setIcon(i110);
																																		
																																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																		if(i==0)
																																		{
																																			int bw=len;
																																			bw=bw+1000;
																																			
																																			Statement stmt2 = con.createStatement();
																																			String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																			stmt2.executeUpdate(sql2);
																																			
																																			Socket sc7 = new Socket("localhost",901);
																																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																			dout6.writeUTF("N20");
																																			dout6.writeUTF(fname);
																																			dout6.writeUTF(Integer.toString(len));
																																			dout6.writeUTF(Integer.toString(bw20));
																																			dout6.writeUTF(Integer.toString(bw));
																																			
																																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																			String i7=din7.readUTF();
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																			l42.setIcon(i113);
																																			
																																																												
																																			//code towards  desti
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																			l44.setIcon(i103);
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																			l45.setIcon(i121);
																																			
																																			funcnD1(ss1,dname,dip,content,fname);
																																			
																																			
																																		}
																																		else if(i==1)
																																		{
																																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																			Thread.sleep(2000);   
																																			refresh();
																																		}
																																	}
																																}
																																else
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l42.setIcon(i110);
																																																																									
																																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																	if(i==0)
																																	{
																																		Statement stmt2 = con.createStatement();
																																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																		stmt2.executeUpdate(sql2);
																																		
																																		Socket sc8 = new Socket("localhost",902);
																																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																		dout7.writeUTF("N20");
																																		dout7.writeUTF(fname);
																																		dout7.writeUTF(mac20);
																																		dout7.writeUTF(mac);
																																		
																																		
																																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																		String i7=din7.readUTF();
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i113);
																																		
																																																										
																																		//code towards  desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																	}
																																	else if(i==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																
																																}
																															}
																																
																														}
																														else if(len<=bw18)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l37.setIcon(i110);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N18");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw18));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l37.setIcon(i111);
																																
																																																									
																																//code towards  node 19 and node 20
																																funcn19to20(ss1,dname,dip,content,fname,mac,len);
																																break one;
																																
																																
																																
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																															
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l37.setIcon(i110);
																														
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N18");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac18);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l37.setIcon(i111);
																															
																																																							
																															//code towards  node 19 and node 20
																															funcn19to20(ss1,dname,dip,content,fname,mac,len);
																															break one;
																															
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													}
																													
																												}
																												
																												
																											}
																											else if(len>=bw16)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l31.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N16");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw16));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l31.setIcon(i108);
																													
																																																						
																													//code towards node 17 and node 18
																													funcn17to18(ss1,dname,dip,content,fname,mac,len);
																													break one;
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l31.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N16");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac16);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l31.setIcon(i108);
																												
																																																				
																												//code towards node 17 and node 18
																												
																												funcn17to18(ss1,dname,dip,content,fname,mac,len);
																												break one;
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																									}
																									
																									
																								}
																								else if(len>=bw14)
																								{
																									Thread.sleep(3000);
																									ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l28.setIcon(i109);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N14");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw14));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l28.setIcon(i108);
																										
																																																			
																										//code towards node 15 and node 16
																										funcn15to16(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l28.setIcon(i109);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N14");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac14);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l28.setIcon(i108);
																									
																																																	
																									//code towards node 15 and node 16
																									
																									funcn15to16(ss1,dname,dip,content,fname,mac,len);
																									break one;
																									
																								}
																								else if(i==1)
																								{
																									//code towards node 12
																									funcn12(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								
																								
																							}
																						}
																						
																						
																							
																					}
																					else if(len>=bw11)
																					{
																						Thread.sleep(3000);
																						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l25.setIcon(i107);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N11");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw11));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l25.setIcon(i108);
																							
																																																
																							//code towards node 13 and node 14
																							
																							funcn13to14(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l25.setIcon(i107);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N11");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac11);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l25.setIcon(i108);
																						
																																														
																						//code towards node 13 and node 14
																						funcn13to14(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(i==1)
																					{
																						//code towards node 12
																						funcn12(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																				}
																			}
																			else if(cost11>=cost12)
																			{
																				Thread.sleep(3000);
																				ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																				l23.setIcon(i96);
																				
																				if(mac.equalsIgnoreCase(mac12))
																				{
																					if(len<=bw12)
																					{
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l24.setIcon(i108);
																						//code towards node 14 and node 16
																						
																						if(cost14<=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																							l27.setIcon(i97);
																							//code towards node 14
																							
																							funcn14(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(cost14>=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																							l33.setIcon(i97);
																							//code towards node 16
																							
																							funcn16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																							
																							
																						}
																						
																					}
																					else if(len>=bw12)
																					{
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l24.setIcon(i108);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N12");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw12));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l24.setIcon(i107);
																							
																																																
																							//code towards node 14 and node 16
																							
																							if(cost14<=cost16)
																							{
																								Thread.sleep(3000);
																								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																								l27.setIcon(i97);
																								//code towards node 14
																								
																								funcn14(ss1,dname,dip,content,fname,mac,len);
																								break one;
																							}
																							else if(cost14>=cost16)
																							{
																								Thread.sleep(3000);
																								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																								l33.setIcon(i97);
																								//code towards node 16
																								
																								funcn16(ss1,dname,dip,content,fname,mac,len);
																								break one;
																								
																								
																							}
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l24.setIcon(i108);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N12");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac12);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l24.setIcon(i107);
																						
																																														
																						//code towards node 14 and node 16
																						
																						if(cost14<=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																							l27.setIcon(i97);
																							//code towards node 14
																							
																							funcn14(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(cost14>=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																							l33.setIcon(i97);
																							//code towards node 16
																							
																							funcn16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																							
																							
																						}
																					}
																					else if(i==1)
																					{
																						//code towards node 11
																						funcn11(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																				}
																			}
																			
																			
																		}
																		else if(len>=bw10)
																		{
																			Thread.sleep(3000);
																			ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l21.setIcon(i107);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N10");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw10));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l21.setIcon(i106);
																				
																																													
																				//code towards node 11 and node 12
																				funcn11to12(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l21.setIcon(i103);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N10");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac10);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l21.setIcon(i107);
																			
																																											
																			//code towards node 11 and node 12
																			
																			funcn11to12(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																	
																}
																else if(len>=bw9)
																{
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l19.setIcon(i107);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N9");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw9));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l19.setIcon(i106);
																		
																																											
																		//code towards node 10
																		
																		funcn10(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{

																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l19.setIcon(i103);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N9");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac9);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l19.setIcon(i107);
																	
																																									
																	//code towards node 10
																	
																	Thread.sleep(3000);
																	ImageIcon i125=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
																	l20.setIcon(i125);
																	
																	funcn10(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															
															}
															
														}
														else if(len>=bw8)
														{
															Thread.sleep(3000);
															ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l17.setIcon(i107);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N8");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw8));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l17.setIcon(i106);
																
																																									
																//code towards node 9
																funcn9(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{

														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l17.setIcon(i103);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N8");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac8);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l17.setIcon(i107);
															
																																							
															//code towards node 9
															
															funcn9(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													
													}
													
													
															
												}
												
												
												
											}
											else if(len>=bw6)
											{
												Thread.sleep(3000);
												ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l11.setIcon(i102);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-6");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-6");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N6'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N6");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw6));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l11.setIcon(i103);
													
													
													
													//code towards node7 and node 8
													funcn7to8(ss1,dname,dip,content,fname,mac,len);
													break one;
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-6 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
												
											}
												
										}
										else 
										{
											Thread.sleep(3000);
											ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l11.setIcon(i102);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-6");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-6");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N6'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N6");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac6);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l11.setIcon(i103);
												
												
												
												//code towards node7 and node 8
												funcn7to8(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
											
										}
										
									}
									
								}
								else if(len>=bw3)
								{
									Thread.sleep(3000);
									ImageIcon i523=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
									l7.setIcon(i523);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-3");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-3");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N3'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N3");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw3));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i521=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
										l7.setIcon(i521);
										
										//code towards node 5 or node 6
										
										funcn5to6(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-3 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i52=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
								l7.setIcon(i52);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-3");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-3");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N3'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N3");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac3);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
									l7.setIcon(i511);
									
									//code towards node 5 or node 6
									funcn5to6(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									//code towards node 1 to 2
									funcn2(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
							}
						
							
							
						}
						else if(len>=bw1)
						{
							Thread.sleep(3000);
							ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
							l3.setIcon(i51);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-1");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-1");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N1'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N1");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw1));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
								l3.setIcon(i511);
								
								//code towards node 3
								funcn3(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-1 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
							
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
						l3.setIcon(i51);
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-1");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-1");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N1'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N1");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac1);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
							l3.setIcon(i511);
							
							//code towards node 3
							funcn3(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							//code towards node 2
							
							funcn2(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						
					}
				
					
			
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn4(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			 Thread.sleep(3000);
				ImageIcon i75=new ImageIcon(this.getClass().getResource("Greenline4.png"));  //line 3
				l6.setIcon(i75);
				
			one:	if(mac.equalsIgnoreCase(mac4))
				{
					if(len<=bw4)
					{
						Thread.sleep(3000);
						ImageIcon i53=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
						l8.setIcon(i53);
						
						Thread.sleep(3000);
						ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
						l9.setIcon(i74);
						
						//code towards node 6
						funcn6(ss1,dname,dip,content,fname, mac,len);
						break one;
					}
					else if(len>=bw4)
					{
						Thread.sleep(3000);
						ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
						l8.setIcon(i51);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-4");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-4");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N4'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N4");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw4));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
							l8.setIcon(i511);
							
							//code towards node 6
							
							Thread.sleep(3000);
							ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
							l9.setIcon(i74);
							
							funcn6(ss1,dname,dip,content,fname, mac,len);
							break one;
							
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-4 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i51=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 1
					l8.setIcon(i51);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-4");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-4");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N4'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N4");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac4);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
						l8.setIcon(i511);
						
						//code towards node 6
						
						Thread.sleep(3000);
						ImageIcon i74=new ImageIcon(this.getClass().getResource("Greenline5.png"));  //line 3
						l9.setIcon(i74);
						
						funcn6(ss1,dname,dip,content,fname, mac,len);
						break one;
						
					}
					else if(i==1)
					{
						//code towards node 1
						
						funcn1(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn3(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			 Thread.sleep(3000);
				ImageIcon i73=new ImageIcon(this.getClass().getResource("Greenline3.png"));  //line 3
				l5.setIcon(i73);
				
				
			one:	if(mac.equalsIgnoreCase(mac3))
				{
					if(len<=bw3)
					{
						Thread.sleep(3000);
						ImageIcon i52=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
						l7.setIcon(i52);
						
						
						
						if(cost5<=cost6)
						{
							Thread.sleep(3000);
							ImageIcon i91=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
							l12.setIcon(i91);
							if(mac.equalsIgnoreCase(mac5))
							{
								if(len<=bw5)
								{
									Thread.sleep(3000);
									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l13.setIcon(i101);
									
									Thread.sleep(3000);
									ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
									l46.setIcon(i93);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N5");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									
									//code towards node6
									
									funcn6(ss1,dname,dip,content,fname, mac,len);
									break one;
								}
								else if(len>=bw5)
								{
									Thread.sleep(3000);
									ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l13.setIcon(i101);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-5");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-5");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N5'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N5");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw5));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l13.setIcon(i102);
										
										Thread.sleep(3000);
										ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
										l46.setIcon(i93);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N5");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node6
										funcn6(ss1,dname,dip,content,fname, mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-5 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
								l13.setIcon(i101);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-5");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-5");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N5'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N5");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac5);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l13.setIcon(i102);
									
									Thread.sleep(3000);
									ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
									l46.setIcon(i93);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N5");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									//code towards node6
									funcn6(ss1,dname,dip,content,fname, mac,len);
									break one;
								}
								else if(i==1)
								{
									//code towards node6
									
									funcn6(ss1,dname,dip,content,fname, mac,len);
									break one;
								}
							}
							
							
						}
						else if(cost5>=cost6)
						{
							Thread.sleep(3000);
							ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
							l10.setIcon(i93);
							
							if(mac.equalsIgnoreCase(mac6))
							{
								if(len<=bw6)
								{
									Thread.sleep(3000);
									ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l11.setIcon(i102);
									
									//code towards node7 and node 8
									
									
									if(cost7<=cost8)
									{
										Thread.sleep(3000);
										ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
										l14.setIcon(i94);
										
										if(mac.equalsIgnoreCase(mac7))
										{
											if(len<=bw7)
											{
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l16.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
												l47.setIcon(i95);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N7");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												//code towards node8
												funcn8(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(len>=bw7)
											{
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l16.setIcon(i103);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N7");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw7));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l16.setIcon(i104);
													
													Thread.sleep(3000);
													ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
													l47.setIcon(i95);
													JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
													Socket sc16 = new Socket("localhost",903);
													DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
													dout16.writeUTF("N7");
																															
													DataInputStream din16 = new DataInputStream(sc16.getInputStream());
													String i16=din16.readUTF();
													
													//code towards node8
													funcn8(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l16.setIcon(i103);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N7");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac7);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l16.setIcon(i104);
												
												Thread.sleep(3000);
												ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
												l47.setIcon(i95);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N7");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												//code towards node8
												
												funcn8(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												//code towards node8
												
												funcn8(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											
										}
										
										
									}
									else if(cost7>=cost8)
									{
										Thread.sleep(3000);
										ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
										l15.setIcon(i95);
										
										
										
										if(mac.equalsIgnoreCase(mac8))
										{
											if(len<=bw8)
											{
												Thread.sleep(3000);
												ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l17.setIcon(i104);
												
												
												
												if(mac.equalsIgnoreCase(mac9))
												{
													if(len<=bw9)
													{
														Thread.sleep(3000);
														ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l19.setIcon(i105);
														
														
														
														if(mac.equalsIgnoreCase(mac10))
														{
															if(len<=bw10)
															{
																Thread.sleep(3000);
																ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l21.setIcon(i106);
																
																//code towards node 11 and node 12
																
																
																
																if(cost11<=cost12)
																{
																	Thread.sleep(3000);
																	ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																	l22.setIcon(i96);
																	
																	if(mac.equalsIgnoreCase(mac11))
																	{
																		if(len<=bw11)
																		{
																			Thread.sleep(3000);
																			ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l25.setIcon(i107);
																			
																			//code towards node 13 and node 14
																			
																			
																			if(cost13<=cost14)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																				l26.setIcon(i97);
																				
																				if(mac.equalsIgnoreCase(mac13))
																				{
																					if(len<=bw13)
																					{
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l48.setIcon(i108);
																						
																						Thread.sleep(3000);
																						ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																						l49.setIcon(i98);
																						JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																						Socket sc16 = new Socket("localhost",903);
																						DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																						dout16.writeUTF("N13");
																																								
																						DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																						String i16=din16.readUTF();
																						
																						//code towards node 14
																						Thread.sleep(3000);
																						ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																						l55.setIcon(i99);
																						
																						funcn14(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(len>=bw13)
																					{
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l48.setIcon(i108);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N13");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw13));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l48.setIcon(i109);
																							
																																																
																							Thread.sleep(3000);
																							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																							l49.setIcon(i98);
																							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																							Socket sc16 = new Socket("localhost",903);
																							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																							dout16.writeUTF("N13");
																																									
																							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																							String i16=din16.readUTF();
																							
																							//code towards node 14
																							
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																							l55.setIcon(i99);
																							
																							funcn14(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l48.setIcon(i108);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N13");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac13);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l48.setIcon(i109);
																						
																																														
																						Thread.sleep(3000);
																						ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																						l49.setIcon(i98);
																						JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																						Socket sc16 = new Socket("localhost",903);
																						DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																						dout16.writeUTF("N13");
																																								
																						DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																						String i16=din16.readUTF();
																						
																						//code towards node 14
																						Thread.sleep(3000);
																						ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																						l55.setIcon(i99);
																						funcn14(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(i==1)
																					{
																						//code towards node 14
																						Thread.sleep(3000);
																						ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																						l55.setIcon(i98);
																						
																						funcn14(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					
																					
																				}
																			
																			}
																			else if(cost13>=cost14)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																				l55.setIcon(i97);
																				
																				if(mac.equalsIgnoreCase(mac14))
																				{
																					if(len<=bw14)
																					{
																						Thread.sleep(3000);
																						ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l28.setIcon(i109);
																						
																						//code towards node 15 and node 16
																						
																						
																						
																						if(cost15<=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																							l29.setIcon(i98);
																							
																							if(mac.equalsIgnoreCase(mac15))
																							{
																								if(len<=bw15)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l30.setIcon(i110);
																									
																									Thread.sleep(3000);
																									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																									l34.setIcon(i99);
																									
																									//code towards node 16
																									
																									funcn16(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(len>=bw15)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l30.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N15");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw15));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l30.setIcon(i108);
																										
																										Thread.sleep(3000);
																										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																										l34.setIcon(i99);																									
																										//code towards node 16
																										funcn16(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																									
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l30.setIcon(i110);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N15");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac15);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l30.setIcon(i108);
																									
																									Thread.sleep(3000);
																									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																									l34.setIcon(i99);																								
																									//code towards  node 16
																									
																									funcn16(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																								
																								
																							}
																						}
																						else if(cost15>=cost16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																							l32.setIcon(i98);
																							
																							if(mac.equalsIgnoreCase(mac16))
																							{
																								if(len<=bw16)
																								{
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l31.setIcon(i108);
																									
																									//code towards node 17 and node 18
																									
																									
																									if(cost17<=cost18)
																									{
																										Thread.sleep(3000);
																										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																										l36.setIcon(i99);
																										
																										if(mac.equalsIgnoreCase(mac17))
																										{
																											if(len<=bw17)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l38.setIcon(i110);
																												
																												//code towards node 18
																												
																												funcn18(ss1,dname,dip,content,fname,mac,len);
																												break one;
																											}
																											else if(len>=bw17)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l38.setIcon(i110);
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N17");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw17));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l38.setIcon(i111);
																													
																																																						
																													//code towards node 18
																													funcn18(ss1,dname,dip,content,fname,mac,len);
																													break one;
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else 
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l38.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N17");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac17);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l38.setIcon(i111);
																												
																																																				
																												//code towards  node 18
																												funcn18(ss1,dname,dip,content,fname,mac,len);
																												break one;
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																										
																									}
																									else if(cost17>=cost18)
																									{
																										Thread.sleep(3000);
																										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																										l35.setIcon(i99);
																										
																										if(mac.equalsIgnoreCase(mac18))
																										{
																											if(len<=bw18)
																											{
																												Thread.sleep(3000);
																												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l37.setIcon(i111);
																												
																												//code towards  node 19 and node 20
																												
																												if(cost19<=cost20)
																												{
																													Thread.sleep(3000);
																													ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																													l39.setIcon(i100);
																													
																													if(mac.equalsIgnoreCase(mac19))
																													{
																														if(len<=bw19)
																														{
																															Thread.sleep(3000);
																															ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l40.setIcon(i112);
																															
																															//code towards   node 20
																															
																															Thread.sleep(3000);
																															ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l43.setIcon(i101);
																															
																															if(mac.equalsIgnoreCase(mac20))
																															{
																																if(len<=bw20)
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																	//code towards desti
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																	l44.setIcon(i103);
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																	l45.setIcon(i121);
																																	
																																	funcnD1(ss1,dname,dip,content,fname);
																																																																											
																																	
																																	
																																}
																																else if(len>=bw20)
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l42.setIcon(i110);
																																	
																																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																	if(i==0)
																																	{
																																		int bw=len;
																																		bw=bw+1000;
																																		
																																		Statement stmt2 = con.createStatement();
																																		String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																		stmt2.executeUpdate(sql2);
																																		
																																		Socket sc7 = new Socket("localhost",901);
																																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																		dout6.writeUTF("N20");
																																		dout6.writeUTF(fname);
																																		dout6.writeUTF(Integer.toString(len));
																																		dout6.writeUTF(Integer.toString(bw20));
																																		dout6.writeUTF(Integer.toString(bw));
																																		
																																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																		String i7=din7.readUTF();
																																		
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i113);
																																		
																																																											
																																		//code towards  desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																		
																																		
																																	}
																																	else if(i==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																}
																															}
																															else
																															{
																																Thread.sleep(3000);
																																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																l42.setIcon(i110);
																																																																								
																																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																if(i==0)
																																{
																																	Statement stmt2 = con.createStatement();
																																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																	stmt2.executeUpdate(sql2);
																																	
																																	Socket sc8 = new Socket("localhost",902);
																																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																	dout7.writeUTF("N20");
																																	dout7.writeUTF(fname);
																																	dout7.writeUTF(mac20);
																																	dout7.writeUTF(mac);
																																	
																																	
																																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																																	String i7=din7.readUTF();
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																																									
																																	//code towards  desti
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																	l44.setIcon(i103);
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																	l45.setIcon(i121);
																																	
																																	funcnD1(ss1,dname,dip,content,fname);
																																}
																																else if(i==1)
																																{
																																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																	Thread.sleep(2000);   
																																	refresh();
																																}
																															
																															}
																															
																														}
																														else if(len>=bw19)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l40.setIcon(i110);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N19");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw19));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l40.setIcon(i114);
																																
																																																									
																																//code towards   node 20
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l43.setIcon(i101);
																																
																																if(mac.equalsIgnoreCase(mac20))
																																{
																																	if(len<=bw20)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i113);
																																		
																																		//code towards desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																																																												
																																		
																																		
																																	}
																																	else if(len>=bw20)
																																	{
																																		Thread.sleep(3000);
																																		ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																		l42.setIcon(i112);
																																		
																																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																		int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																		if(i1==0)
																																		{
																																			int bw1=len;
																																			bw1=bw1+1000;
																																			
																																			Statement stmt21 = con.createStatement();
																																			String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																			stmt21.executeUpdate(sql21);
																																			
																																			Socket sc71 = new Socket("localhost",901);
																																			DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																			dout61.writeUTF("N20");
																																			dout61.writeUTF(fname);
																																			dout61.writeUTF(Integer.toString(len));
																																			dout61.writeUTF(Integer.toString(bw20));
																																			dout61.writeUTF(Integer.toString(bw1));
																																			
																																			DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																			String i71=din71.readUTF();
																																			
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																			l42.setIcon(i113);
																																			
																																																												
																																			//code towards  desti
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																			l44.setIcon(i103);
																																			
																																			Thread.sleep(3000);
																																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																			l45.setIcon(i121);
																																			
																																			funcnD1(ss1,dname,dip,content,fname);
																																			
																																			
																																		}
																																		else if(i1==1)
																																		{
																																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																			Thread.sleep(2000);   
																																			refresh();
																																		}
																																	}
																																}
																																else
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l42.setIcon(i112);
																																																																									
																																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																	int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																	if(i1==0)
																																	{
																																		Statement stmt21 = con.createStatement();
																																		String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																		stmt21.executeUpdate(sql21);
																																		
																																		Socket sc8 = new Socket("localhost",902);
																																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																		dout7.writeUTF("N20");
																																		dout7.writeUTF(fname);
																																		dout7.writeUTF(mac20);
																																		dout7.writeUTF(mac);
																																		
																																		
																																		DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																																		String i71=din7.readUTF();
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i113);
																																		
																																																										
																																		//code towards  desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																	}
																																	else if(i1==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																
																																}
																																
																																
																																
																																
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																															
																															
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l40.setIcon(i110);
																														
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N19");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac19);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l37.setIcon(i112);
																															
																																																				
																															//code towards  node 20
																															
																															Thread.sleep(3000);
																															ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l43.setIcon(i101);
																															
																															if(mac.equalsIgnoreCase(mac20))
																															{
																																if(len<=bw20)
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																	//code towards desti
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																	l44.setIcon(i103);
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																	l45.setIcon(i121);
																																	
																																	funcnD1(ss1,dname,dip,content,fname);
																																																																											
																																	
																																	
																																}
																																else if(len>=bw20)
																																{
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																	int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																	if(i1==0)
																																	{
																																		int bw1=len;
																																		bw1=bw1+1000;
																																		
																																		Statement stmt21 = con.createStatement();
																																		String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																		stmt21.executeUpdate(sql21);
																																		
																																		Socket sc71 = new Socket("localhost",901);
																																		DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																		dout61.writeUTF("N20");
																																		dout61.writeUTF(fname);
																																		dout61.writeUTF(Integer.toString(len));
																																		dout61.writeUTF(Integer.toString(bw20));
																																		dout61.writeUTF(Integer.toString(bw1));
																																		
																																		DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																		String i71=din71.readUTF();
																																		
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																		l42.setIcon(i114);
																																		
																																																											
																																		//code towards  desti
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																		l44.setIcon(i103);
																																		
																																		Thread.sleep(3000);
																																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																		l45.setIcon(i121);
																																		
																																		funcnD1(ss1,dname,dip,content,fname);
																																		
																																		
																																	}
																																	else if(i1==1)
																																	{
																																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																		dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																		Thread.sleep(2000);   
																																		refresh();
																																	}
																																}
																															}
																															else
																															{
																																Thread.sleep(3000);
																																ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																l42.setIcon(i115);
																																																																								
																																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																																int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																																if(i1==0)
																																{
																																	Statement stmt21 = con.createStatement();
																																	String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																	stmt21.executeUpdate(sql21);
																																	
																																	Socket sc81 = new Socket("localhost",902);
																																	DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																																	dout71.writeUTF("N20");
																																	dout71.writeUTF(fname);
																																	dout71.writeUTF(mac20);
																																	dout71.writeUTF(mac);
																																	
																																	
																																	DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																																	String i71=din7.readUTF();
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																																									
																																	//code towards  desti
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																	l44.setIcon(i103);
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																	l45.setIcon(i121);
																																	
																																	funcnD1(ss1,dname,dip,content,fname);
																																}
																																else if(i1==1)
																																{
																																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																	Thread.sleep(2000);   
																																	refresh();
																																}
																															
																															}
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													}
																												}
																												else if(cost19>=cost20)
																												{
																													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																													l41.setIcon(i101);
																													
																													if(mac.equalsIgnoreCase(mac20))
																													{
																														if(len<=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																															//code towards desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																																																																									
																															
																															
																														}
																														else if(len>=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l42.setIcon(i110);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N20");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw20));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i113);
																																
																																																									
																																//code towards  desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																																
																																
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i110);
																																																																						
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N20");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac20);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																																																							
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													
																													}
																												}
																													
																											}
																											else if(len<=bw18)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l37.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N18");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw18));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l37.setIcon(i111);
																													
																																																						
																													//code towards  node 19 and node 20
																													funcn19to20(ss1,dname,dip,content,fname,mac,len);
																													break one;
																													
																													
																													
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																												
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l37.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N18");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac18);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l37.setIcon(i111);
																												
																																																				
																												//code towards  node 19 and node 20
																												funcn19to20(ss1,dname,dip,content,fname,mac,len);
																												break one;
																												
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																										
																									}
																									
																									
																								}
																								else if(len>=bw16)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l31.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N16");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw16));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l31.setIcon(i108);
																										
																																																			
																										//code towards node 17 and node 18
																										funcn17to18(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l31.setIcon(i110);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N16");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac16);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l31.setIcon(i108);
																									
																																																	
																									//code towards node 17 and node 18
																									
																									funcn17to18(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																						}
																						
																						
																					}
																					else if(len>=bw14)
																					{
																						Thread.sleep(3000);
																						ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l28.setIcon(i109);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N14");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw14));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l28.setIcon(i108);
																							
																																																
																							//code towards node 15 and node 16
																							funcn15to16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l28.setIcon(i109);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N14");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac14);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l28.setIcon(i108);
																						
																																														
																						//code towards node 15 and node 16
																						
																						funcn15to16(ss1,dname,dip,content,fname,mac,len);
																						break one;
																						
																					}
																					else if(i==1)
																					{
																						//code towards node 12
																						funcn12(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					
																					
																				}
																			}
																			
																			
																				
																		}
																		else if(len>=bw11)
																		{
																			Thread.sleep(3000);
																			ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l25.setIcon(i107);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N11");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw11));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l25.setIcon(i108);
																				
																																													
																				//code towards node 13 and node 14
																				
																				funcn13to14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l25.setIcon(i107);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N11");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac11);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l25.setIcon(i108);
																			
																																											
																			//code towards node 13 and node 14
																			funcn13to14(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			//code towards node 12
																			funcn12(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																	}
																}
																else if(cost11>=cost12)
																{
																	Thread.sleep(3000);
																	ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																	l23.setIcon(i96);
																	
																	if(mac.equalsIgnoreCase(mac12))
																	{
																		if(len<=bw12)
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l24.setIcon(i108);
																			//code towards node 14 and node 16
																			
																			if(cost14<=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																				l27.setIcon(i97);
																				//code towards node 14
																				
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(cost14>=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																				l33.setIcon(i97);
																				//code towards node 16
																				
																				funcn16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																				
																				
																			}
																			
																		}
																		else if(len>=bw12)
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l24.setIcon(i108);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N12");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw12));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l24.setIcon(i107);
																				
																																													
																				//code towards node 14 and node 16
																				
																				if(cost14<=cost16)
																				{
																					Thread.sleep(3000);
																					ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																					l27.setIcon(i97);
																					//code towards node 14
																					
																					funcn14(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(cost14>=cost16)
																				{
																					Thread.sleep(3000);
																					ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																					l33.setIcon(i97);
																					//code towards node 16
																					
																					funcn16(ss1,dname,dip,content,fname,mac,len);
																					break one;
																					
																					
																				}
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l24.setIcon(i108);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N12");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac12);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l24.setIcon(i107);
																			
																																											
																			//code towards node 14 and node 16
																			
																			if(cost14<=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																				l27.setIcon(i97);
																				//code towards node 14
																				
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(cost14>=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																				l33.setIcon(i97);
																				//code towards node 16
																				
																				funcn16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																				
																				
																			}
																		}
																		else if(i==1)
																		{
																			//code towards node 11
																			funcn11(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																	}
																}
																
																
															}
															else if(len>=bw10)
															{
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l21.setIcon(i107);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N10");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw10));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l21.setIcon(i106);
																	
																																										
																	//code towards node 11 and node 12
																	funcn11to12(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l21.setIcon(i103);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N10");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac10);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l21.setIcon(i107);
																
																																								
																//code towards node 11 and node 12
																
																funcn11to12(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
														
													}
													else if(len>=bw9)
													{
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l19.setIcon(i107);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N9");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw9));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l19.setIcon(i106);
															
																																								
															//code towards node 10
															
															funcn10(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{

													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l19.setIcon(i103);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N9");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac9);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l19.setIcon(i107);
														
																																						
														//code towards node 10
														
														Thread.sleep(3000);
														ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
														l20.setIcon(i122);
														
														funcn10(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												
												}
												
											}
											else if(len>=bw8)
											{
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l17.setIcon(i107);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N8");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw8));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l17.setIcon(i106);
													
																																						
													//code towards node 9
													funcn9(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{

											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l17.setIcon(i103);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N8");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac8);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l17.setIcon(i107);
												
																																				
												//code towards node 9
												
												funcn9(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
										
										
												
									}
									
									
									
								}
								else if(len>=bw6)
								{
									Thread.sleep(3000);
									ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l11.setIcon(i102);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-6");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-6");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N6'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N6");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw6));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l11.setIcon(i103);
										
										
										
										//code towards node7 and node 8
										funcn7to8(ss1,dname,dip,content,fname,mac,len);
										break one;
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-6 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
									
								}
									
							}
							else 
							{
								Thread.sleep(3000);
								ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l11.setIcon(i102);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-6");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-6");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N6'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N6");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac6);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l11.setIcon(i103);
									
									
									
									//code towards node7 and node 8
									funcn7to8(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
								
							}
							
						}
						
					}
					else if(len>=bw3)
					{
						Thread.sleep(3000);
						ImageIcon i523=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
						l7.setIcon(i523);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-3");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-3");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N3'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N3");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw3));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i521=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 3
							l7.setIcon(i521);
							
							//code towards node 5 or node 6
							
							funcn5to6(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-3 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i52=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
					l7.setIcon(i52);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-3");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-3");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N3'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N3");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac3);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i511=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 1
						l7.setIcon(i511);
						
						//code towards node 5 or node 6
						funcn5to6(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						//code towards node 1 to 2
						funcn2(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
				}
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn5to6(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(cost5<=cost6)
				{
					Thread.sleep(3000);
					ImageIcon i91=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
					l12.setIcon(i91);
					if(mac.equalsIgnoreCase(mac5))
					{
						if(len<=bw5)
						{
							Thread.sleep(3000);
							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l13.setIcon(i101);
							
							Thread.sleep(3000);
							ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
							l46.setIcon(i93);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N5");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							
							//code towards node6
							
							funcn6(ss1,dname,dip,content,fname, mac,len);
							break one;
						}
						else if(len>=bw5)
						{
							Thread.sleep(3000);
							ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l13.setIcon(i101);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-5");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-5");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N5'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N5");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw5));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l13.setIcon(i102);
								
								Thread.sleep(3000);
								ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
								l46.setIcon(i93);
								JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
								Socket sc16 = new Socket("localhost",903);
								DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
								dout16.writeUTF("N5");
																										
								DataInputStream din16 = new DataInputStream(sc16.getInputStream());
								String i16=din16.readUTF();
								
								//code towards node6
								funcn6(ss1,dname,dip,content,fname, mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-5 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i101=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 3
						l13.setIcon(i101);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-5");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-5");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N5'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N5");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac5);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l13.setIcon(i102);
							
							Thread.sleep(3000);
							ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline7.png"));  //line 3
							l46.setIcon(i93);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-5");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N5");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							//code towards node6
							funcn6(ss1,dname,dip,content,fname, mac,len);
							break one;
						}
						else if(i==1)
						{
							//code towards node6
							
							funcn6(ss1,dname,dip,content,fname, mac,len);
							break one;
						}
					}
					
					
				}
				else if(cost5>=cost6)
				{
					Thread.sleep(3000);
					ImageIcon i93=new ImageIcon(this.getClass().getResource("Greenline6.png"));  //line 3
					l10.setIcon(i93);
					
					if(mac.equalsIgnoreCase(mac6))
					{
						if(len<=bw6)
						{
							Thread.sleep(3000);
							ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l11.setIcon(i102);
							
							//code towards node7 and node 8
							
							
							if(cost7<=cost8)
							{
								Thread.sleep(3000);
								ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
								l14.setIcon(i94);
								
								if(mac.equalsIgnoreCase(mac7))
								{
									if(len<=bw7)
									{
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l16.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
										l47.setIcon(i95);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N7");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node8
										funcn8(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(len>=bw7)
									{
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l16.setIcon(i103);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N7");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw7));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l16.setIcon(i104);
											
											Thread.sleep(3000);
											ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
											l47.setIcon(i95);
											JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
											Socket sc16 = new Socket("localhost",903);
											DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
											dout16.writeUTF("N7");
																													
											DataInputStream din16 = new DataInputStream(sc16.getInputStream());
											String i16=din16.readUTF();
											
											//code towards node8
											funcn8(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l16.setIcon(i103);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N7");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac7);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l16.setIcon(i104);
										
										Thread.sleep(3000);
										ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
										l47.setIcon(i95);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N7");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node8
										
										funcn8(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										//code towards node8
										
										funcn8(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									
								}
								
								
							}
							else if(cost7>=cost8)
							{
								Thread.sleep(3000);
								ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
								l15.setIcon(i95);
								
								
								
								if(mac.equalsIgnoreCase(mac8))
								{
									if(len<=bw8)
									{
										Thread.sleep(3000);
										ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l17.setIcon(i104);
										
										
										
										if(mac.equalsIgnoreCase(mac9))
										{
											if(len<=bw9)
											{
												Thread.sleep(3000);
												ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l19.setIcon(i105);
												
												
												
												if(mac.equalsIgnoreCase(mac10))
												{
													if(len<=bw10)
													{
														Thread.sleep(3000);
														ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l21.setIcon(i106);
														
														//code towards node 11 and node 12
														
														
														
														if(cost11<=cost12)
														{
															Thread.sleep(3000);
															ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
															l22.setIcon(i96);
															
															if(mac.equalsIgnoreCase(mac11))
															{
																if(len<=bw11)
																{
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l25.setIcon(i107);
																	
																	//code towards node 13 and node 14
																	
																	
																	if(cost13<=cost14)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																		l26.setIcon(i97);
																		
																		if(mac.equalsIgnoreCase(mac13))
																		{
																			if(len<=bw13)
																			{
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l48.setIcon(i108);
																				
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																				l49.setIcon(i98);
																				JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																				Socket sc16 = new Socket("localhost",903);
																				DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																				dout16.writeUTF("N13");
																																						
																				DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																				String i16=din16.readUTF();
																				
																				//code towards node 14
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																				l55.setIcon(i99);
																				
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(len>=bw13)
																			{
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l48.setIcon(i108);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N13");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw13));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l48.setIcon(i109);
																					
																																														
																					Thread.sleep(3000);
																					ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																					l49.setIcon(i98);
																					JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																					Socket sc16 = new Socket("localhost",903);
																					DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																					dout16.writeUTF("N13");
																																							
																					DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																					String i16=din16.readUTF();
																					
																					//code towards node 14
																					
																					Thread.sleep(3000);
																					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																					l55.setIcon(i99);
																					
																					funcn14(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l48.setIcon(i108);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N13");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac13);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l48.setIcon(i109);
																				
																																												
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																				l49.setIcon(i98);
																				JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																				Socket sc16 = new Socket("localhost",903);
																				DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																				dout16.writeUTF("N13");
																																						
																				DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																				String i16=din16.readUTF();
																				
																				//code towards node 14
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																				l55.setIcon(i99);
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				//code towards node 14
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																				l55.setIcon(i98);
																				
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			
																			
																		}
																	
																	}
																	else if(cost13>=cost14)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																		l55.setIcon(i97);
																		
																		if(mac.equalsIgnoreCase(mac14))
																		{
																			if(len<=bw14)
																			{
																				Thread.sleep(3000);
																				ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l28.setIcon(i109);
																				
																				//code towards node 15 and node 16
																				
																				
																				
																				if(cost15<=cost16)
																				{
																					Thread.sleep(3000);
																					ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																					l29.setIcon(i98);
																					
																					if(mac.equalsIgnoreCase(mac15))
																					{
																						if(len<=bw15)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l30.setIcon(i110);
																							
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																							l34.setIcon(i99);
																							
																							//code towards node 16
																							
																							funcn16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(len>=bw15)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l30.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N15");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw15));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l30.setIcon(i108);
																								
																								Thread.sleep(3000);
																								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																								l34.setIcon(i99);																									
																								//code towards node 16
																								funcn16(ss1,dname,dip,content,fname,mac,len);
																								break one;
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																							
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l30.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N15");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac15);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l30.setIcon(i108);
																							
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																							l34.setIcon(i99);																								
																							//code towards  node 16
																							
																							funcn16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																						
																						
																					}
																				}
																				else if(cost15>=cost16)
																				{
																					Thread.sleep(3000);
																					ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																					l32.setIcon(i98);
																					
																					if(mac.equalsIgnoreCase(mac16))
																					{
																						if(len<=bw16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l31.setIcon(i108);
																							
																							//code towards node 17 and node 18
																							
																							
																							if(cost17<=cost18)
																							{
																								Thread.sleep(3000);
																								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																								l36.setIcon(i99);
																								
																								if(mac.equalsIgnoreCase(mac17))
																								{
																									if(len<=bw17)
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l38.setIcon(i110);
																										
																										//code towards node 18
																										
																										funcn18(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(len>=bw17)
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l38.setIcon(i110);
																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																										if(i==0)
																										{
																											int bw=len;
																											bw=bw+1000;
																											
																											Statement stmt2 = con.createStatement();
																											String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																											stmt2.executeUpdate(sql2);
																											
																											Socket sc7 = new Socket("localhost",901);
																											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																											dout6.writeUTF("N17");
																											dout6.writeUTF(fname);
																											dout6.writeUTF(Integer.toString(len));
																											dout6.writeUTF(Integer.toString(bw17));
																											dout6.writeUTF(Integer.toString(bw));
																											
																											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																											String i7=din7.readUTF();
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l38.setIcon(i111);
																											
																																																				
																											//code towards node 18
																											funcn18(ss1,dname,dip,content,fname,mac,len);
																											break one;
																										}
																										else if(i==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																									}
																								}
																								else 
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l38.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																									if(i==0)
																									{
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc8 = new Socket("localhost",902);
																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																										dout7.writeUTF("N17");
																										dout7.writeUTF(fname);
																										dout7.writeUTF(mac17);
																										dout7.writeUTF(mac);
																										
																										
																										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																										String i7=din7.readUTF();
																										
																										Thread.sleep(3000);
																										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l38.setIcon(i111);
																										
																																																		
																										//code towards  node 18
																										funcn18(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																								
																							}
																							else if(cost17>=cost18)
																							{
																								Thread.sleep(3000);
																								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																								l35.setIcon(i99);
																								
																								if(mac.equalsIgnoreCase(mac18))
																								{
																									if(len<=bw18)
																									{
																										Thread.sleep(3000);
																										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l37.setIcon(i111);
																										
																										//code towards  node 19 and node 20
																										
																										if(cost19<=cost20)
																										{
																											Thread.sleep(3000);
																											ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																											l39.setIcon(i100);
																											
																											if(mac.equalsIgnoreCase(mac19))
																											{
																												if(len<=bw19)
																												{
																													Thread.sleep(3000);
																													ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l40.setIcon(i112);
																													
																													//code towards   node 20
																													
																													Thread.sleep(3000);
																													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l43.setIcon(i101);
																													
																													if(mac.equalsIgnoreCase(mac20))
																													{
																														if(len<=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																															//code towards desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																																																																									
																															
																															
																														}
																														else if(len>=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l42.setIcon(i110);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																															if(i==0)
																															{
																																int bw=len;
																																bw=bw+1000;
																																
																																Statement stmt2 = con.createStatement();
																																String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																																stmt2.executeUpdate(sql2);
																																
																																Socket sc7 = new Socket("localhost",901);
																																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																																dout6.writeUTF("N20");
																																dout6.writeUTF(fname);
																																dout6.writeUTF(Integer.toString(len));
																																dout6.writeUTF(Integer.toString(bw20));
																																dout6.writeUTF(Integer.toString(bw));
																																
																																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																																String i7=din7.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i113);
																																
																																																									
																																//code towards  desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																																
																																
																															}
																															else if(i==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i110);
																																																																						
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																														if(i==0)
																														{
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N20");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac20);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																															String i7=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																																																							
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													
																													}
																													
																												}
																												else if(len>=bw19)
																												{
																													Thread.sleep(3000);
																													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																													l40.setIcon(i110);
																													
																													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																													if(i==0)
																													{
																														int bw=len;
																														bw=bw+1000;
																														
																														Statement stmt2 = con.createStatement();
																														String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																														stmt2.executeUpdate(sql2);
																														
																														Socket sc7 = new Socket("localhost",901);
																														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																														dout6.writeUTF("N19");
																														dout6.writeUTF(fname);
																														dout6.writeUTF(Integer.toString(len));
																														dout6.writeUTF(Integer.toString(bw19));
																														dout6.writeUTF(Integer.toString(bw));
																														
																														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																														String i7=din7.readUTF();
																														
																														
																														Thread.sleep(3000);
																														ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l40.setIcon(i114);
																														
																																																							
																														//code towards   node 20
																														
																														
																														Thread.sleep(3000);
																														ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l43.setIcon(i101);
																														
																														if(mac.equalsIgnoreCase(mac20))
																														{
																															if(len<=bw20)
																															{
																																Thread.sleep(3000);
																																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i113);
																																
																																//code towards desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																																																																										
																																
																																
																															}
																															else if(len>=bw20)
																															{
																																Thread.sleep(3000);
																																ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																																l42.setIcon(i112);
																																
																																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																																int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																																if(i1==0)
																																{
																																	int bw1=len;
																																	bw1=bw1+1000;
																																	
																																	Statement stmt21 = con.createStatement();
																																	String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																	stmt21.executeUpdate(sql21);
																																	
																																	Socket sc71 = new Socket("localhost",901);
																																	DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																	dout61.writeUTF("N20");
																																	dout61.writeUTF(fname);
																																	dout61.writeUTF(Integer.toString(len));
																																	dout61.writeUTF(Integer.toString(bw20));
																																	dout61.writeUTF(Integer.toString(bw1));
																																	
																																	DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																	String i71=din71.readUTF();
																																	
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																	l42.setIcon(i113);
																																	
																																																										
																																	//code towards  desti
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																	l44.setIcon(i103);
																																	
																																	Thread.sleep(3000);
																																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																	l45.setIcon(i121);
																																	
																																	funcnD1(ss1,dname,dip,content,fname);
																																	
																																	
																																}
																																else if(i1==1)
																																{
																																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																	dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																	Thread.sleep(2000);   
																																	refresh();
																																}
																															}
																														}
																														else
																														{
																															Thread.sleep(3000);
																															ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l42.setIcon(i112);
																																																																							
																															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																															if(i1==0)
																															{
																																Statement stmt21 = con.createStatement();
																																String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																																stmt21.executeUpdate(sql21);
																																
																																Socket sc8 = new Socket("localhost",902);
																																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																																dout7.writeUTF("N20");
																																dout7.writeUTF(fname);
																																dout7.writeUTF(mac20);
																																dout7.writeUTF(mac);
																																
																																
																																DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																																String i71=din7.readUTF();
																																
																																Thread.sleep(3000);
																																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i113);
																																
																																																								
																																//code towards  desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																															}
																															else if(i1==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														
																														}
																														
																														
																														
																														
																													}
																													else if(i==1)
																													{
																														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																														dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																														Thread.sleep(2000);   
																														refresh();
																													}
																													
																													
																												}
																											}
																											else
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l40.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																												if(i==0)
																												{
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc8 = new Socket("localhost",902);
																													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																													dout7.writeUTF("N19");
																													dout7.writeUTF(fname);
																													dout7.writeUTF(mac19);
																													dout7.writeUTF(mac);
																													
																													
																													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																													String i7=din7.readUTF();
																													
																													Thread.sleep(3000);
																													ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l37.setIcon(i112);
																													
																																																		
																													//code towards  node 20
																													
																													Thread.sleep(3000);
																													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l43.setIcon(i101);
																													
																													if(mac.equalsIgnoreCase(mac20))
																													{
																														if(len<=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																															//code towards desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																																																																									
																															
																															
																														}
																														else if(len>=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																															if(i1==0)
																															{
																																int bw1=len;
																																bw1=bw1+1000;
																																
																																Statement stmt21 = con.createStatement();
																																String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																stmt21.executeUpdate(sql21);
																																
																																Socket sc71 = new Socket("localhost",901);
																																DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																dout61.writeUTF("N20");
																																dout61.writeUTF(fname);
																																dout61.writeUTF(Integer.toString(len));
																																dout61.writeUTF(Integer.toString(bw20));
																																dout61.writeUTF(Integer.toString(bw1));
																																
																																DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																String i71=din71.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i114);
																																
																																																									
																																//code towards  desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																																
																																
																															}
																															else if(i1==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i115);
																																																																						
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																														if(i1==0)
																														{
																															Statement stmt21 = con.createStatement();
																															String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																															stmt21.executeUpdate(sql21);
																															
																															Socket sc81 = new Socket("localhost",902);
																															DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																															dout71.writeUTF("N20");
																															dout71.writeUTF(fname);
																															dout71.writeUTF(mac20);
																															dout71.writeUTF(mac);
																															
																															
																															DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																															String i71=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																																																							
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																														}
																														else if(i1==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													
																													}
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else if(cost19>=cost20)
																										{
																											ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																											l41.setIcon(i101);
																											
																											if(mac.equalsIgnoreCase(mac20))
																											{
																												if(len<=bw20)
																												{
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																													//code towards desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																																																																							
																													
																													
																												}
																												else if(len>=bw20)
																												{
																													Thread.sleep(3000);
																													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																													l42.setIcon(i110);
																													
																													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																													if(i==0)
																													{
																														int bw=len;
																														bw=bw+1000;
																														
																														Statement stmt2 = con.createStatement();
																														String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																														stmt2.executeUpdate(sql2);
																														
																														Socket sc7 = new Socket("localhost",901);
																														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																														dout6.writeUTF("N20");
																														dout6.writeUTF(fname);
																														dout6.writeUTF(Integer.toString(len));
																														dout6.writeUTF(Integer.toString(bw20));
																														dout6.writeUTF(Integer.toString(bw));
																														
																														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																														String i7=din7.readUTF();
																														
																														
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																																																							
																														//code towards  desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																														
																														
																													}
																													else if(i==1)
																													{
																														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																														dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																														Thread.sleep(2000);   
																														refresh();
																													}
																												}
																											}
																											else
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i110);
																																																																				
																												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																												if(i==0)
																												{
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc8 = new Socket("localhost",902);
																													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																													dout7.writeUTF("N20");
																													dout7.writeUTF(fname);
																													dout7.writeUTF(mac20);
																													dout7.writeUTF(mac);
																													
																													
																													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																													String i7=din7.readUTF();
																													
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																																																					
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											
																											}
																										}
																											
																									}
																									else if(len<=bw18)
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l37.setIcon(i110);
																										
																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																										if(i==0)
																										{
																											int bw=len;
																											bw=bw+1000;
																											
																											Statement stmt2 = con.createStatement();
																											String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																											stmt2.executeUpdate(sql2);
																											
																											Socket sc7 = new Socket("localhost",901);
																											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																											dout6.writeUTF("N18");
																											dout6.writeUTF(fname);
																											dout6.writeUTF(Integer.toString(len));
																											dout6.writeUTF(Integer.toString(bw18));
																											dout6.writeUTF(Integer.toString(bw));
																											
																											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																											String i7=din7.readUTF();
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l37.setIcon(i111);
																											
																																																				
																											//code towards  node 19 and node 20
																											funcn19to20(ss1,dname,dip,content,fname,mac,len);
																											break one;
																											
																											
																											
																										}
																										else if(i==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																										
																									}
																								}
																								else
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l37.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																									if(i==0)
																									{
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc8 = new Socket("localhost",902);
																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																										dout7.writeUTF("N18");
																										dout7.writeUTF(fname);
																										dout7.writeUTF(mac18);
																										dout7.writeUTF(mac);
																										
																										
																										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																										String i7=din7.readUTF();
																										
																										Thread.sleep(3000);
																										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l37.setIcon(i111);
																										
																																																		
																										//code towards  node 19 and node 20
																										funcn19to20(ss1,dname,dip,content,fname,mac,len);
																										break one;
																										
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																								
																							}
																							
																							
																						}
																						else if(len>=bw16)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l31.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N16");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw16));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l31.setIcon(i108);
																								
																																																	
																								//code towards node 17 and node 18
																								funcn17to18(ss1,dname,dip,content,fname,mac,len);
																								break one;
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l31.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N16");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac16);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l31.setIcon(i108);
																							
																																															
																							//code towards node 17 and node 18
																							
																							funcn17to18(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				
																				
																			}
																			else if(len>=bw14)
																			{
																				Thread.sleep(3000);
																				ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l28.setIcon(i109);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N14");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw14));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l28.setIcon(i108);
																					
																																														
																					//code towards node 15 and node 16
																					funcn15to16(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l28.setIcon(i109);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N14");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac14);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l28.setIcon(i108);
																				
																																												
																				//code towards node 15 and node 16
																				
																				funcn15to16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																				
																			}
																			else if(i==1)
																			{
																				//code towards node 12
																				funcn12(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			
																			
																		}
																	}
																	
																	
																		
																}
																else if(len>=bw11)
																{
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l25.setIcon(i107);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N11");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw11));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l25.setIcon(i108);
																		
																																											
																		//code towards node 13 and node 14
																		
																		funcn13to14(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l25.setIcon(i107);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N11");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac11);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l25.setIcon(i108);
																	
																																									
																	//code towards node 13 and node 14
																	funcn13to14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	//code towards node 12
																	funcn12(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
															}
														}
														else if(cost11>=cost12)
														{
															Thread.sleep(3000);
															ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
															l23.setIcon(i96);
															
															if(mac.equalsIgnoreCase(mac12))
															{
																if(len<=bw12)
																{
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l24.setIcon(i108);
																	//code towards node 14 and node 16
																	
																	if(cost14<=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																		l27.setIcon(i97);
																		//code towards node 14
																		
																		funcn14(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(cost14>=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																		l33.setIcon(i97);
																		//code towards node 16
																		
																		funcn16(ss1,dname,dip,content,fname,mac,len);
																		break one;
																		
																		
																	}
																	
																}
																else if(len>=bw12)
																{
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l24.setIcon(i108);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N12");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw12));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l24.setIcon(i107);
																		
																																											
																		//code towards node 14 and node 16
																		
																		if(cost14<=cost16)
																		{
																			Thread.sleep(3000);
																			ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																			l27.setIcon(i97);
																			//code towards node 14
																			
																			funcn14(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(cost14>=cost16)
																		{
																			Thread.sleep(3000);
																			ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																			l33.setIcon(i97);
																			//code towards node 16
																			
																			funcn16(ss1,dname,dip,content,fname,mac,len);
																			break one;
																			
																			
																		}
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l24.setIcon(i108);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N12");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac12);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l24.setIcon(i107);
																	
																																									
																	//code towards node 14 and node 16
																	
																	if(cost14<=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																		l27.setIcon(i97);
																		//code towards node 14
																		
																		funcn14(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(cost14>=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																		l33.setIcon(i97);
																		//code towards node 16
																		
																		funcn16(ss1,dname,dip,content,fname,mac,len);
																		break one;
																		
																		
																	}
																}
																else if(i==1)
																{
																	//code towards node 11
																	funcn11(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
															}
														}
														
														
													}
													else if(len>=bw10)
													{
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l21.setIcon(i107);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N10");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw10));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l21.setIcon(i106);
															
																																								
															//code towards node 11 and node 12
															funcn11to12(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l21.setIcon(i103);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N10");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac10);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l21.setIcon(i107);
														
																																						
														//code towards node 11 and node 12
														
														funcn11to12(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
												
											}
											else if(len>=bw9)
											{
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l19.setIcon(i107);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N9");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw9));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l19.setIcon(i106);
													
																																						
													//code towards node 10
													
													funcn10(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{

											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l19.setIcon(i103);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N9");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac9);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l19.setIcon(i107);
												
																																				
												//code towards node 10
												
												Thread.sleep(3000);
												ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
												l20.setIcon(i122);
												
												funcn10(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
										
									}
									else if(len>=bw8)
									{
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l17.setIcon(i107);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N8");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw8));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l17.setIcon(i106);
											
																																				
											//code towards node 9
											funcn9(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{

									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l17.setIcon(i103);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N8");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac8);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l17.setIcon(i107);
										
																																		
										//code towards node 9
										
										Thread.sleep(3000);
										ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
										l18.setIcon(i122);
										
										funcn9(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								
								}
								
								
										
							}
							
							
							
						}
						else if(len>=bw6)
						{
							Thread.sleep(3000);
							ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l11.setIcon(i102);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-6");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-6");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N6'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N6");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw6));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l11.setIcon(i103);
								
								
								
								//code towards node7 and node 8
								funcn7to8(ss1,dname,dip,content,fname,mac,len);
								break one;
								
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-6 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
							
						}
							
					}
					else 
					{
						Thread.sleep(3000);
						ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l11.setIcon(i102);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-6");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-6");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N6'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N6");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac6);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l11.setIcon(i103);
							
							
							
							//code towards node7 and node 8
							funcn7to8(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
						
					}
					
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn6(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				
				
			one:	if(mac.equalsIgnoreCase(mac6))
				{
					if(len<=bw6)
					{
						Thread.sleep(3000);
						ImageIcon i102=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l11.setIcon(i102);
						
						//code towards node7 and node 8
						
						
						if(cost7<=cost8)
						{
							Thread.sleep(3000);
							ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
							l14.setIcon(i94);
							
							if(mac.equalsIgnoreCase(mac7))
							{
								if(len<=bw7)
								{
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l16.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
									l47.setIcon(i95);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N7");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									//code towards node8
									funcn8(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(len>=bw7)
								{
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l16.setIcon(i103);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N7");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw7));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l16.setIcon(i104);
										
										Thread.sleep(3000);
										ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
										l47.setIcon(i95);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N7");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node8
										funcn8(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l16.setIcon(i103);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N7");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac7);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l16.setIcon(i104);
									
									Thread.sleep(3000);
									ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
									l47.setIcon(i95);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N7");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									//code towards node8
									
									funcn8(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									//code towards node8
									
									funcn8(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								
							}
							
							
						}
						else if(cost7>=cost8)
						{
							Thread.sleep(3000);
							ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
							l15.setIcon(i95);
							
							
							
							if(mac.equalsIgnoreCase(mac8))
							{
								if(len<=bw8)
								{
									Thread.sleep(3000);
									ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l17.setIcon(i104);
									
									Thread.sleep(3000);
									ImageIcon i191=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
									l18.setIcon(i191);
									
									if(mac.equalsIgnoreCase(mac9))
									{
										if(len<=bw9)
										{
											Thread.sleep(3000);
											ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l19.setIcon(i105);
											
											Thread.sleep(3000);
											ImageIcon i192=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
											l20.setIcon(i192);
											
											if(mac.equalsIgnoreCase(mac10))
											{
												if(len<=bw10)
												{
													Thread.sleep(3000);
													ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l21.setIcon(i106);
													
													//code towards node 11 and node 12
													
													
													
													if(cost11<=cost12)
													{
														Thread.sleep(3000);
														ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
														l22.setIcon(i96);
														
														if(mac.equalsIgnoreCase(mac11))
														{
															if(len<=bw11)
															{
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l25.setIcon(i107);
																
																//code towards node 13 and node 14
																
																
																if(cost13<=cost14)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																	l26.setIcon(i97);
																	
																	if(mac.equalsIgnoreCase(mac13))
																	{
																		if(len<=bw13)
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l48.setIcon(i108);
																			
																			Thread.sleep(3000);
																			ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																			l49.setIcon(i98);
																			JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																			Socket sc16 = new Socket("localhost",903);
																			DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																			dout16.writeUTF("N13");
																																					
																			DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																			String i16=din16.readUTF();
																			
																			//code towards node 14
																			Thread.sleep(3000);
																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																			l55.setIcon(i99);
																			
																			funcn14(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(len>=bw13)
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l48.setIcon(i108);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N13");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw13));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l48.setIcon(i109);
																				
																																													
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																				l49.setIcon(i98);
																				JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																				Socket sc16 = new Socket("localhost",903);
																				DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																				dout16.writeUTF("N13");
																																						
																				DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																				String i16=din16.readUTF();
																				
																				//code towards node 14
																				
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																				l55.setIcon(i99);
																				
																				funcn14(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l48.setIcon(i108);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N13");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac13);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l48.setIcon(i109);
																			
																																											
																			Thread.sleep(3000);
																			ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																			l49.setIcon(i98);
																			JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																			Socket sc16 = new Socket("localhost",903);
																			DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																			dout16.writeUTF("N13");
																																					
																			DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																			String i16=din16.readUTF();
																			
																			//code towards node 14
																			Thread.sleep(3000);
																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																			l55.setIcon(i99);
																			funcn14(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			//code towards node 14
																			Thread.sleep(3000);
																			ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																			l55.setIcon(i98);
																			
																			funcn14(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		
																		
																	}
																
																}
																else if(cost13>=cost14)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																	l55.setIcon(i97);
																	
																	if(mac.equalsIgnoreCase(mac14))
																	{
																		if(len<=bw14)
																		{
																			Thread.sleep(3000);
																			ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l28.setIcon(i109);
																			
																			//code towards node 15 and node 16
																			
																			
																			
																			if(cost15<=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																				l29.setIcon(i98);
																				
																				if(mac.equalsIgnoreCase(mac15))
																				{
																					if(len<=bw15)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l30.setIcon(i110);
																						
																						Thread.sleep(3000);
																						ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																						l34.setIcon(i99);
																						
																						//code towards node 16
																						
																						funcn16(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(len>=bw15)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l30.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N15");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw15));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l30.setIcon(i108);
																							
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																							l34.setIcon(i99);																									
																							//code towards node 16
																							funcn16(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																						
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l30.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N15");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac15);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l30.setIcon(i108);
																						
																						Thread.sleep(3000);
																						ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																						l34.setIcon(i99);																								
																						//code towards  node 16
																						
																						funcn16(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																					
																					
																				}
																			}
																			else if(cost15>=cost16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																				l32.setIcon(i98);
																				
																				if(mac.equalsIgnoreCase(mac16))
																				{
																					if(len<=bw16)
																					{
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l31.setIcon(i108);
																						
																						//code towards node 17 and node 18
																						
																						
																						if(cost17<=cost18)
																						{
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																							l36.setIcon(i99);
																							
																							if(mac.equalsIgnoreCase(mac17))
																							{
																								if(len<=bw17)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l38.setIcon(i110);
																									
																									//code towards node 18
																									
																									funcn18(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(len>=bw17)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l38.setIcon(i110);
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N17");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw17));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l38.setIcon(i111);
																										
																																																			
																										//code towards node 18
																										funcn18(ss1,dname,dip,content,fname,mac,len);
																										break one;
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else 
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l38.setIcon(i110);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N17");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac17);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l38.setIcon(i111);
																									
																																																	
																									//code towards  node 18
																									funcn18(ss1,dname,dip,content,fname,mac,len);
																									break one;
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																							
																						}
																						else if(cost17>=cost18)
																						{
																							Thread.sleep(3000);
																							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																							l35.setIcon(i99);
																							
																							if(mac.equalsIgnoreCase(mac18))
																							{
																								if(len<=bw18)
																								{
																									Thread.sleep(3000);
																									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l37.setIcon(i111);
																									
																									//code towards  node 19 and node 20
																									
																									if(cost19<=cost20)
																									{
																										Thread.sleep(3000);
																										ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																										l39.setIcon(i100);
																										
																										if(mac.equalsIgnoreCase(mac19))
																										{
																											if(len<=bw19)
																											{
																												Thread.sleep(3000);
																												ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l40.setIcon(i112);
																												
																												//code towards   node 20
																												
																												Thread.sleep(3000);
																												ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l43.setIcon(i101);
																												
																												if(mac.equalsIgnoreCase(mac20))
																												{
																													if(len<=bw20)
																													{
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																														//code towards desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																																																																								
																														
																														
																													}
																													else if(len>=bw20)
																													{
																														Thread.sleep(3000);
																														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i110);
																														
																														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																														if(i==0)
																														{
																															int bw=len;
																															bw=bw+1000;
																															
																															Statement stmt2 = con.createStatement();
																															String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																															stmt2.executeUpdate(sql2);
																															
																															Socket sc7 = new Socket("localhost",901);
																															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																															dout6.writeUTF("N20");
																															dout6.writeUTF(fname);
																															dout6.writeUTF(Integer.toString(len));
																															dout6.writeUTF(Integer.toString(bw20));
																															dout6.writeUTF(Integer.toString(bw));
																															
																															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																															String i7=din7.readUTF();
																															
																															
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																																																								
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																															
																															
																														}
																														else if(i==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													}
																												}
																												else
																												{
																													Thread.sleep(3000);
																													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																													l42.setIcon(i110);
																																																																					
																													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																													if(i==0)
																													{
																														Statement stmt2 = con.createStatement();
																														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																														stmt2.executeUpdate(sql2);
																														
																														Socket sc8 = new Socket("localhost",902);
																														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																														dout7.writeUTF("N20");
																														dout7.writeUTF(fname);
																														dout7.writeUTF(mac20);
																														dout7.writeUTF(mac);
																														
																														
																														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																														String i7=din7.readUTF();
																														
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																																																						
																														//code towards  desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																													}
																													else if(i==1)
																													{
																														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																														Thread.sleep(2000);   
																														refresh();
																													}
																												
																												}
																												
																											}
																											else if(len>=bw19)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l40.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N19");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw19));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l40.setIcon(i114);
																													
																																																						
																													//code towards   node 20
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l43.setIcon(i101);
																													
																													if(mac.equalsIgnoreCase(mac20))
																													{
																														if(len<=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																															//code towards desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																																																																									
																															
																															
																														}
																														else if(len>=bw20)
																														{
																															Thread.sleep(3000);
																															ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																															l42.setIcon(i112);
																															
																															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																															if(i1==0)
																															{
																																int bw1=len;
																																bw1=bw1+1000;
																																
																																Statement stmt21 = con.createStatement();
																																String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																																stmt21.executeUpdate(sql21);
																																
																																Socket sc71 = new Socket("localhost",901);
																																DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																																dout61.writeUTF("N20");
																																dout61.writeUTF(fname);
																																dout61.writeUTF(Integer.toString(len));
																																dout61.writeUTF(Integer.toString(bw20));
																																dout61.writeUTF(Integer.toString(bw1));
																																
																																DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																																String i71=din71.readUTF();
																																
																																
																																Thread.sleep(3000);
																																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																																l42.setIcon(i113);
																																
																																																									
																																//code towards  desti
																																
																																Thread.sleep(3000);
																																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																																l44.setIcon(i103);
																																
																																Thread.sleep(3000);
																																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																																l45.setIcon(i121);
																																
																																funcnD1(ss1,dname,dip,content,fname);
																																
																																
																															}
																															else if(i1==1)
																															{
																																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																																Thread.sleep(2000);   
																																refresh();
																															}
																														}
																													}
																													else
																													{
																														Thread.sleep(3000);
																														ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i112);
																																																																						
																														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																														if(i1==0)
																														{
																															Statement stmt21 = con.createStatement();
																															String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																															stmt21.executeUpdate(sql21);
																															
																															Socket sc8 = new Socket("localhost",902);
																															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																															dout7.writeUTF("N20");
																															dout7.writeUTF(fname);
																															dout7.writeUTF(mac20);
																															dout7.writeUTF(mac);
																															
																															
																															DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																															String i71=din7.readUTF();
																															
																															Thread.sleep(3000);
																															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i113);
																															
																																																							
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																														}
																														else if(i1==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													
																													}
																													
																													
																													
																													
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																												
																												
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l40.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N19");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac19);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l37.setIcon(i112);
																												
																																																	
																												//code towards  node 20
																												
																												Thread.sleep(3000);
																												ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l43.setIcon(i101);
																												
																												if(mac.equalsIgnoreCase(mac20))
																												{
																													if(len<=bw20)
																													{
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																														//code towards desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																																																																								
																														
																														
																													}
																													else if(len>=bw20)
																													{
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																														if(i1==0)
																														{
																															int bw1=len;
																															bw1=bw1+1000;
																															
																															Statement stmt21 = con.createStatement();
																															String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																															stmt21.executeUpdate(sql21);
																															
																															Socket sc71 = new Socket("localhost",901);
																															DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																															dout61.writeUTF("N20");
																															dout61.writeUTF(fname);
																															dout61.writeUTF(Integer.toString(len));
																															dout61.writeUTF(Integer.toString(bw20));
																															dout61.writeUTF(Integer.toString(bw1));
																															
																															DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																															String i71=din71.readUTF();
																															
																															
																															Thread.sleep(3000);
																															ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																															l42.setIcon(i114);
																															
																																																								
																															//code towards  desti
																															
																															Thread.sleep(3000);
																															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																															l44.setIcon(i103);
																															
																															Thread.sleep(3000);
																															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																															l45.setIcon(i121);
																															
																															funcnD1(ss1,dname,dip,content,fname);
																															
																															
																														}
																														else if(i1==1)
																														{
																															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																															dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																															Thread.sleep(2000);   
																															refresh();
																														}
																													}
																												}
																												else
																												{
																													Thread.sleep(3000);
																													ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																													l42.setIcon(i115);
																																																																					
																													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																													int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																													if(i1==0)
																													{
																														Statement stmt21 = con.createStatement();
																														String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																														stmt21.executeUpdate(sql21);
																														
																														Socket sc81 = new Socket("localhost",902);
																														DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																														dout71.writeUTF("N20");
																														dout71.writeUTF(fname);
																														dout71.writeUTF(mac20);
																														dout71.writeUTF(mac);
																														
																														
																														DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																														String i71=din7.readUTF();
																														
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																																																						
																														//code towards  desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																													}
																													else if(i1==1)
																													{
																														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																														Thread.sleep(2000);   
																														refresh();
																													}
																												
																												}
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																									}
																									else if(cost19>=cost20)
																									{
																										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																										l41.setIcon(i101);
																										
																										if(mac.equalsIgnoreCase(mac20))
																										{
																											if(len<=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																												//code towards desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																																																																						
																												
																												
																											}
																											else if(len>=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N20");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw20));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																																																						
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																													
																													
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i110);
																																																																			
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N20");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac20);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																																																				
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										
																										}
																									}
																										
																								}
																								else if(len<=bw18)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l37.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N18");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw18));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l37.setIcon(i111);
																										
																																																			
																										//code towards  node 19 and node 20
																										funcn19to20(ss1,dname,dip,content,fname,mac,len);
																										break one;
																										
																										
																										
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																									
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l37.setIcon(i110);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N18");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac18);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l37.setIcon(i111);
																									
																																																	
																									//code towards  node 19 and node 20
																									funcn19to20(ss1,dname,dip,content,fname,mac,len);
																									break one;
																									
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																							
																						}
																						
																						
																					}
																					else if(len>=bw16)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l31.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N16");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw16));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l31.setIcon(i108);
																							
																																																
																							//code towards node 17 and node 18
																							funcn17to18(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l31.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N16");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac16);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l31.setIcon(i108);
																						
																																														
																						//code towards node 17 and node 18
																						
																						funcn17to18(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			
																			
																		}
																		else if(len>=bw14)
																		{
																			Thread.sleep(3000);
																			ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l28.setIcon(i109);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N14");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw14));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l28.setIcon(i108);
																				
																																													
																				//code towards node 15 and node 16
																				funcn15to16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l28.setIcon(i109);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N14");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac14);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l28.setIcon(i108);
																			
																																											
																			//code towards node 15 and node 16
																			
																			funcn15to16(ss1,dname,dip,content,fname,mac,len);
																			break one;
																			
																		}
																		else if(i==1)
																		{
																			//code towards node 12
																			funcn12(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		
																		
																	}
																}
																
																
																	
															}
															else if(len>=bw11)
															{
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l25.setIcon(i107);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N11");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw11));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l25.setIcon(i108);
																	
																																										
																	//code towards node 13 and node 14
																	
																	funcn13to14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l25.setIcon(i107);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N11");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac11);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l25.setIcon(i108);
																
																																								
																//code towards node 13 and node 14
																funcn13to14(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																//code towards node 12
																funcn12(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
														}
													}
													else if(cost11>=cost12)
													{
														Thread.sleep(3000);
														ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
														l23.setIcon(i96);
														
														if(mac.equalsIgnoreCase(mac12))
														{
															if(len<=bw12)
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l24.setIcon(i108);
																//code towards node 14 and node 16
																
																if(cost14<=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																	l27.setIcon(i97);
																	//code towards node 14
																	
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(cost14>=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																	l33.setIcon(i97);
																	//code towards node 16
																	
																	funcn16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																	
																	
																}
																
															}
															else if(len>=bw12)
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l24.setIcon(i108);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N12");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw12));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l24.setIcon(i107);
																	
																																										
																	//code towards node 14 and node 16
																	
																	if(cost14<=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																		l27.setIcon(i97);
																		//code towards node 14
																		
																		funcn14(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(cost14>=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																		l33.setIcon(i97);
																		//code towards node 16
																		
																		funcn16(ss1,dname,dip,content,fname,mac,len);
																		break one;
																		
																		
																	}
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l24.setIcon(i108);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N12");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac12);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l24.setIcon(i107);
																
																																								
																//code towards node 14 and node 16
																
																if(cost14<=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																	l27.setIcon(i97);
																	//code towards node 14
																	
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(cost14>=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																	l33.setIcon(i97);
																	//code towards node 16
																	
																	funcn16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																	
																	
																}
															}
															else if(i==1)
															{
																//code towards node 11
																funcn11(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
														}
													}
													
													
												}
												else if(len>=bw10)
												{
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l21.setIcon(i107);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N10");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw10));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l21.setIcon(i106);
														
																																							
														//code towards node 11 and node 12
														funcn11to12(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l21.setIcon(i103);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N10");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac10);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l21.setIcon(i107);
													
																																					
													//code towards node 11 and node 12
													
													funcn11to12(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
											
										}
										else if(len>=bw9)
										{
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l19.setIcon(i107);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
											if(i==0)
											{
												int bw=len;
												bw=bw+1000;
												
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
												stmt2.executeUpdate(sql2);
												
												Socket sc7 = new Socket("localhost",901);
												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
												dout6.writeUTF("N9");
												dout6.writeUTF(fname);
												dout6.writeUTF(Integer.toString(len));
												dout6.writeUTF(Integer.toString(bw9));
												dout6.writeUTF(Integer.toString(bw));
												
												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
												String i7=din7.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l19.setIcon(i106);
												
																																					
												//code towards node 10
												
												funcn10(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{

										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l19.setIcon(i103);
										
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
										if(i==0)
										{
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
											stmt2.executeUpdate(sql2);
											
											Socket sc8 = new Socket("localhost",902);
											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
											dout7.writeUTF("N9");
											dout7.writeUTF(fname);
											dout7.writeUTF(mac9);
											dout7.writeUTF(mac);
											
											
											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
											String i7=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l19.setIcon(i107);
											
																																			
											//code towards node 10
											
											Thread.sleep(3000);
											ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
											l20.setIcon(i122);
											
											funcn10(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									
									}
									
								}
								else if(len>=bw8)
								{
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l17.setIcon(i107);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N8");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw8));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l17.setIcon(i106);
										
																																			
										//code towards node 9
										funcn9(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{

								Thread.sleep(3000);
								ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l17.setIcon(i103);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N8");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac8);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l17.setIcon(i107);
									
																																	
									//code towards node 9
									
									funcn9(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							
							}
							
							
									
						}
						
						
						
					}
					else if(len>=bw6)
					{
						Thread.sleep(3000);
						ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l11.setIcon(i102);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-6");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-6");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N6'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N6");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw6));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l11.setIcon(i103);
							
							
							
							//code towards node7 and node 8
							funcn7to8(ss1,dname,dip,content,fname,mac,len);
							break one;
							
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-6 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
						
					}
						
				}
				else 
				{
					Thread.sleep(3000);
					ImageIcon i102=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l11.setIcon(i102);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-6");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-6");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N6'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N6");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac6);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l11.setIcon(i103);
						
						
						
						//code towards node7 and node 8
						funcn7to8(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
					
				}
				
			
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn7to8(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			 
			one: if(cost7<=cost8)
				{
					Thread.sleep(3000);
					ImageIcon i94=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
					l14.setIcon(i94);
					
					if(mac.equalsIgnoreCase(mac7))
					{
						if(len<=bw7)
						{
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l16.setIcon(i103);
							
							Thread.sleep(3000);
							ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
							l47.setIcon(i95);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N7");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							//code towards node8
							funcn8(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(len>=bw7)
						{
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l16.setIcon(i103);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-7");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-7");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N7'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N7");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw7));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l16.setIcon(i104);
								
								Thread.sleep(3000);
								ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
								l47.setIcon(i95);
								JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
								Socket sc16 = new Socket("localhost",903);
								DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
								dout16.writeUTF("N7");
																										
								DataInputStream din16 = new DataInputStream(sc16.getInputStream());
								String i16=din16.readUTF();
								
								//code towards node8
								funcn8(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-7 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l16.setIcon(i103);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-7");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-7");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N7'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N7");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac7);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l16.setIcon(i104);
							
							Thread.sleep(3000);
							ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline8.png"));  //line 3
							l47.setIcon(i95);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-7");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N7");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							//code towards node8
							
							funcn8(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							//code towards node8
							
							funcn8(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						
					}
					
					
				}
				else if(cost7>=cost8)
				{
					Thread.sleep(3000);
					ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
					l15.setIcon(i95);
					
					
					
					if(mac.equalsIgnoreCase(mac8))
					{
						if(len<=bw8)
						{
							Thread.sleep(3000);
							ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l17.setIcon(i104);
							
							
							
							if(mac.equalsIgnoreCase(mac9))
							{
								if(len<=bw9)
								{
									Thread.sleep(3000);
									ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l19.setIcon(i105);
									
									
									
									if(mac.equalsIgnoreCase(mac10))
									{
										if(len<=bw10)
										{
											Thread.sleep(3000);
											ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l21.setIcon(i106);
											
											//code towards node 11 and node 12
											
											
											
											if(cost11<=cost12)
											{
												Thread.sleep(3000);
												ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
												l22.setIcon(i96);
												
												if(mac.equalsIgnoreCase(mac11))
												{
													if(len<=bw11)
													{
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l25.setIcon(i107);
														
														//code towards node 13 and node 14
														
														
														if(cost13<=cost14)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
															l26.setIcon(i97);
															
															if(mac.equalsIgnoreCase(mac13))
															{
																if(len<=bw13)
																{
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l48.setIcon(i108);
																	
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																	l49.setIcon(i98);
																	JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																	Socket sc16 = new Socket("localhost",903);
																	DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																	dout16.writeUTF("N13");
																																			
																	DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																	String i16=din16.readUTF();
																	
																	//code towards node 14
																	Thread.sleep(3000);
																	ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																	l55.setIcon(i99);
																	
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(len>=bw13)
																{
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l48.setIcon(i108);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N13");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw13));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l48.setIcon(i109);
																		
																																											
																		Thread.sleep(3000);
																		ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																		l49.setIcon(i98);
																		JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																		Socket sc16 = new Socket("localhost",903);
																		DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																		dout16.writeUTF("N13");
																																				
																		DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																		String i16=din16.readUTF();
																		
																		//code towards node 14
																		
																		Thread.sleep(3000);
																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																		l55.setIcon(i99);
																		
																		funcn14(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l48.setIcon(i108);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N13");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac13);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l48.setIcon(i109);
																	
																																									
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																	l49.setIcon(i98);
																	JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																	Socket sc16 = new Socket("localhost",903);
																	DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																	dout16.writeUTF("N13");
																																			
																	DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																	String i16=din16.readUTF();
																	
																	//code towards node 14
																	Thread.sleep(3000);
																	ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																	l55.setIcon(i99);
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	//code towards node 14
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																	l55.setIcon(i98);
																	
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																
																
															}
														
														}
														else if(cost13>=cost14)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
															l55.setIcon(i97);
															
															if(mac.equalsIgnoreCase(mac14))
															{
																if(len<=bw14)
																{
																	Thread.sleep(3000);
																	ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l28.setIcon(i109);
																	
																	//code towards node 15 and node 16
																	
																	
																	
																	if(cost15<=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																		l29.setIcon(i98);
																		
																		if(mac.equalsIgnoreCase(mac15))
																		{
																			if(len<=bw15)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l30.setIcon(i110);
																				
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																				l34.setIcon(i99);
																				
																				//code towards node 16
																				
																				funcn16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(len>=bw15)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l30.setIcon(i110);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N15");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw15));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l30.setIcon(i108);
																					
																					Thread.sleep(3000);
																					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																					l34.setIcon(i99);																									
																					//code towards node 16
																					funcn16(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																				
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l30.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N15");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac15);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l30.setIcon(i108);
																				
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																				l34.setIcon(i99);																								
																				//code towards  node 16
																				
																				funcn16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																			
																			
																		}
																	}
																	else if(cost15>=cost16)
																	{
																		Thread.sleep(3000);
																		ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																		l32.setIcon(i98);
																		
																		if(mac.equalsIgnoreCase(mac16))
																		{
																			if(len<=bw16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l31.setIcon(i108);
																				
																				//code towards node 17 and node 18
																				
																				
																				if(cost17<=cost18)
																				{
																					Thread.sleep(3000);
																					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																					l36.setIcon(i99);
																					
																					if(mac.equalsIgnoreCase(mac17))
																					{
																						if(len<=bw17)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l38.setIcon(i110);
																							
																							//code towards node 18
																							
																							funcn18(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(len>=bw17)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l38.setIcon(i110);
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N17");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw17));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l38.setIcon(i111);
																								
																																																	
																								//code towards node 18
																								funcn18(ss1,dname,dip,content,fname,mac,len);
																								break one;
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else 
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l38.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N17");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac17);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l38.setIcon(i111);
																							
																																															
																							//code towards  node 18
																							funcn18(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																					
																				}
																				else if(cost17>=cost18)
																				{
																					Thread.sleep(3000);
																					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																					l35.setIcon(i99);
																					
																					if(mac.equalsIgnoreCase(mac18))
																					{
																						if(len<=bw18)
																						{
																							Thread.sleep(3000);
																							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l37.setIcon(i111);
																							
																							//code towards  node 19 and node 20
																							
																							if(cost19<=cost20)
																							{
																								Thread.sleep(3000);
																								ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																								l39.setIcon(i100);
																								
																								if(mac.equalsIgnoreCase(mac19))
																								{
																									if(len<=bw19)
																									{
																										Thread.sleep(3000);
																										ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l40.setIcon(i112);
																										
																										//code towards   node 20
																										
																										Thread.sleep(3000);
																										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l43.setIcon(i101);
																										
																										if(mac.equalsIgnoreCase(mac20))
																										{
																											if(len<=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																												//code towards desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																																																																						
																												
																												
																											}
																											else if(len>=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i110);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																												if(i==0)
																												{
																													int bw=len;
																													bw=bw+1000;
																													
																													Statement stmt2 = con.createStatement();
																													String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																													stmt2.executeUpdate(sql2);
																													
																													Socket sc7 = new Socket("localhost",901);
																													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																													dout6.writeUTF("N20");
																													dout6.writeUTF(fname);
																													dout6.writeUTF(Integer.toString(len));
																													dout6.writeUTF(Integer.toString(bw20));
																													dout6.writeUTF(Integer.toString(bw));
																													
																													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																													String i7=din7.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																																																						
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																													
																													
																												}
																												else if(i==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i110);
																																																																			
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																											if(i==0)
																											{
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N20");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac20);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																												String i7=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																																																				
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										
																										}
																										
																									}
																									else if(len>=bw19)
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l40.setIcon(i110);
																										
																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																										if(i==0)
																										{
																											int bw=len;
																											bw=bw+1000;
																											
																											Statement stmt2 = con.createStatement();
																											String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																											stmt2.executeUpdate(sql2);
																											
																											Socket sc7 = new Socket("localhost",901);
																											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																											dout6.writeUTF("N19");
																											dout6.writeUTF(fname);
																											dout6.writeUTF(Integer.toString(len));
																											dout6.writeUTF(Integer.toString(bw19));
																											dout6.writeUTF(Integer.toString(bw));
																											
																											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																											String i7=din7.readUTF();
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l40.setIcon(i114);
																											
																																																				
																											//code towards   node 20
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l43.setIcon(i101);
																											
																											if(mac.equalsIgnoreCase(mac20))
																											{
																												if(len<=bw20)
																												{
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																													//code towards desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																																																																							
																													
																													
																												}
																												else if(len>=bw20)
																												{
																													Thread.sleep(3000);
																													ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																													l42.setIcon(i112);
																													
																													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																													int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																													if(i1==0)
																													{
																														int bw1=len;
																														bw1=bw1+1000;
																														
																														Statement stmt21 = con.createStatement();
																														String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																														stmt21.executeUpdate(sql21);
																														
																														Socket sc71 = new Socket("localhost",901);
																														DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																														dout61.writeUTF("N20");
																														dout61.writeUTF(fname);
																														dout61.writeUTF(Integer.toString(len));
																														dout61.writeUTF(Integer.toString(bw20));
																														dout61.writeUTF(Integer.toString(bw1));
																														
																														DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																														String i71=din71.readUTF();
																														
																														
																														Thread.sleep(3000);
																														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																														l42.setIcon(i113);
																														
																																																							
																														//code towards  desti
																														
																														Thread.sleep(3000);
																														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																														l44.setIcon(i103);
																														
																														Thread.sleep(3000);
																														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																														l45.setIcon(i121);
																														
																														funcnD1(ss1,dname,dip,content,fname);
																														
																														
																													}
																													else if(i1==1)
																													{
																														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																														dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																														Thread.sleep(2000);   
																														refresh();
																													}
																												}
																											}
																											else
																											{
																												Thread.sleep(3000);
																												ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i112);
																																																																				
																												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																												if(i1==0)
																												{
																													Statement stmt21 = con.createStatement();
																													String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																													stmt21.executeUpdate(sql21);
																													
																													Socket sc8 = new Socket("localhost",902);
																													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																													dout7.writeUTF("N20");
																													dout7.writeUTF(fname);
																													dout7.writeUTF(mac20);
																													dout7.writeUTF(mac);
																													
																													
																													DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																													String i71=din7.readUTF();
																													
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																																																					
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																												}
																												else if(i1==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											
																											}
																											
																											
																											
																											
																										}
																										else if(i==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																										
																										
																									}
																								}
																								else
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l40.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																									if(i==0)
																									{
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc8 = new Socket("localhost",902);
																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																										dout7.writeUTF("N19");
																										dout7.writeUTF(fname);
																										dout7.writeUTF(mac19);
																										dout7.writeUTF(mac);
																										
																										
																										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																										String i7=din7.readUTF();
																										
																										Thread.sleep(3000);
																										ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l37.setIcon(i112);
																										
																																															
																										//code towards  node 20
																										
																										Thread.sleep(3000);
																										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l43.setIcon(i101);
																										
																										if(mac.equalsIgnoreCase(mac20))
																										{
																											if(len<=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																												//code towards desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																																																																						
																												
																												
																											}
																											else if(len>=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																												if(i1==0)
																												{
																													int bw1=len;
																													bw1=bw1+1000;
																													
																													Statement stmt21 = con.createStatement();
																													String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																													stmt21.executeUpdate(sql21);
																													
																													Socket sc71 = new Socket("localhost",901);
																													DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																													dout61.writeUTF("N20");
																													dout61.writeUTF(fname);
																													dout61.writeUTF(Integer.toString(len));
																													dout61.writeUTF(Integer.toString(bw20));
																													dout61.writeUTF(Integer.toString(bw1));
																													
																													DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																													String i71=din71.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i114);
																													
																																																						
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																													
																													
																												}
																												else if(i1==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i115);
																																																																			
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																											if(i1==0)
																											{
																												Statement stmt21 = con.createStatement();
																												String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																												stmt21.executeUpdate(sql21);
																												
																												Socket sc81 = new Socket("localhost",902);
																												DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																												dout71.writeUTF("N20");
																												dout71.writeUTF(fname);
																												dout71.writeUTF(mac20);
																												dout71.writeUTF(mac);
																												
																												
																												DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																												String i71=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																																																				
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																											}
																											else if(i1==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										
																										}
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else if(cost19>=cost20)
																							{
																								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																								l41.setIcon(i101);
																								
																								if(mac.equalsIgnoreCase(mac20))
																								{
																									if(len<=bw20)
																									{
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																										//code towards desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																																																																				
																										
																										
																									}
																									else if(len>=bw20)
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l42.setIcon(i110);
																										
																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																										if(i==0)
																										{
																											int bw=len;
																											bw=bw+1000;
																											
																											Statement stmt2 = con.createStatement();
																											String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																											stmt2.executeUpdate(sql2);
																											
																											Socket sc7 = new Socket("localhost",901);
																											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																											dout6.writeUTF("N20");
																											dout6.writeUTF(fname);
																											dout6.writeUTF(Integer.toString(len));
																											dout6.writeUTF(Integer.toString(bw20));
																											dout6.writeUTF(Integer.toString(bw));
																											
																											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																											String i7=din7.readUTF();
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																																																				
																											//code towards  desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																											
																											
																										}
																										else if(i==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																									}
																								}
																								else
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l42.setIcon(i110);
																																																																	
																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																									if(i==0)
																									{
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc8 = new Socket("localhost",902);
																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																										dout7.writeUTF("N20");
																										dout7.writeUTF(fname);
																										dout7.writeUTF(mac20);
																										dout7.writeUTF(mac);
																										
																										
																										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																										String i7=din7.readUTF();
																										
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																																																		
																										//code towards  desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								
																								}
																							}
																								
																						}
																						else if(len<=bw18)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l37.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N18");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw18));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l37.setIcon(i111);
																								
																																																	
																								//code towards  node 19 and node 20
																								funcn19to20(ss1,dname,dip,content,fname,mac,len);
																								break one;
																								
																								
																								
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																							
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l37.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N18");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac18);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l37.setIcon(i111);
																							
																																															
																							//code towards  node 19 and node 20
																							funcn19to20(ss1,dname,dip,content,fname,mac,len);
																							break one;
																							
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																					
																				}
																				
																				
																			}
																			else if(len>=bw16)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l31.setIcon(i110);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N16");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw16));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l31.setIcon(i108);
																					
																																														
																					//code towards node 17 and node 18
																					funcn17to18(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l31.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N16");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac16);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l31.setIcon(i108);
																				
																																												
																				//code towards node 17 and node 18
																				
																				funcn17to18(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	
																	
																}
																else if(len>=bw14)
																{
																	Thread.sleep(3000);
																	ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l28.setIcon(i109);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N14");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw14));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l28.setIcon(i108);
																		
																																											
																		//code towards node 15 and node 16
																		funcn15to16(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l28.setIcon(i109);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N14");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac14);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l28.setIcon(i108);
																	
																																									
																	//code towards node 15 and node 16
																	
																	funcn15to16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																	
																}
																else if(i==1)
																{
																	//code towards node 12
																	funcn12(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																
																
															}
														}
														
														
															
													}
													else if(len>=bw11)
													{
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l25.setIcon(i107);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N11");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw11));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l25.setIcon(i108);
															
																																								
															//code towards node 13 and node 14
															
															funcn13to14(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l25.setIcon(i107);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N11");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac11);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l25.setIcon(i108);
														
																																						
														//code towards node 13 and node 14
														funcn13to14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														//code towards node 12
														funcn12(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
												}
											}
											else if(cost11>=cost12)
											{
												Thread.sleep(3000);
												ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
												l23.setIcon(i96);
												
												if(mac.equalsIgnoreCase(mac12))
												{
													if(len<=bw12)
													{
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l24.setIcon(i108);
														//code towards node 14 and node 16
														
														if(cost14<=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
															l27.setIcon(i97);
															//code towards node 14
															
															funcn14(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(cost14>=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
															l33.setIcon(i97);
															//code towards node 16
															
															funcn16(ss1,dname,dip,content,fname,mac,len);
															break one;
															
															
														}
														
													}
													else if(len>=bw12)
													{
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l24.setIcon(i108);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N12");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw12));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l24.setIcon(i107);
															
																																								
															//code towards node 14 and node 16
															
															if(cost14<=cost16)
															{
																Thread.sleep(3000);
																ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
																l27.setIcon(i97);
																//code towards node 14
																
																funcn14(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(cost14>=cost16)
															{
																Thread.sleep(3000);
																ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
																l33.setIcon(i97);
																//code towards node 16
																
																funcn16(ss1,dname,dip,content,fname,mac,len);
																break one;
																
																
															}
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l24.setIcon(i108);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N12");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac12);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l24.setIcon(i107);
														
																																						
														//code towards node 14 and node 16
														
														if(cost14<=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
															l27.setIcon(i97);
															//code towards node 14
															
															funcn14(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(cost14>=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
															l33.setIcon(i97);
															//code towards node 16
															
															funcn16(ss1,dname,dip,content,fname,mac,len);
															break one;
															
															
														}
													}
													else if(i==1)
													{
														//code towards node 11
														funcn11(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
												}
											}
											
											
										}
										else if(len>=bw10)
										{
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l21.setIcon(i107);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
											if(i==0)
											{
												int bw=len;
												bw=bw+1000;
												
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
												stmt2.executeUpdate(sql2);
												
												Socket sc7 = new Socket("localhost",901);
												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
												dout6.writeUTF("N10");
												dout6.writeUTF(fname);
												dout6.writeUTF(Integer.toString(len));
												dout6.writeUTF(Integer.toString(bw10));
												dout6.writeUTF(Integer.toString(bw));
												
												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
												String i7=din7.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l21.setIcon(i106);
												
																																					
												//code towards node 11 and node 12
												funcn11to12(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l21.setIcon(i103);
										
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
										if(i==0)
										{
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
											stmt2.executeUpdate(sql2);
											
											Socket sc8 = new Socket("localhost",902);
											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
											dout7.writeUTF("N10");
											dout7.writeUTF(fname);
											dout7.writeUTF(mac10);
											dout7.writeUTF(mac);
											
											
											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
											String i7=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l21.setIcon(i107);
											
																																			
											//code towards node 11 and node 12
											
											funcn11to12(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
									
								}
								else if(len>=bw9)
								{
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l19.setIcon(i107);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N9");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw9));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l19.setIcon(i106);
										
																																			
										//code towards node 10
										
										funcn10(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{

								Thread.sleep(3000);
								ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l19.setIcon(i103);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N9");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac9);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l19.setIcon(i107);
									
																																	
									//code towards node 10
									Thread.sleep(3000);
									ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
									l20.setIcon(i122);
									
									funcn10(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							
							}
							
						}
						else if(len>=bw8)
						{
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l17.setIcon(i107);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N8");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw8));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l17.setIcon(i106);
								
																																	
								//code towards node 9
								funcn9(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{

						Thread.sleep(3000);
						ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l17.setIcon(i103);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N8");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac8);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l17.setIcon(i107);
							
																															
							//code towards node 9
							
							funcn9(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					
					}
					
					
							
				}
			 
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn8(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			 Thread.sleep(3000);
				ImageIcon i95=new ImageIcon(this.getClass().getResource("Greenline9.png"));  //line 3
				l15.setIcon(i95);
			 
			one: if(mac.equalsIgnoreCase(mac8))
				{
					if(len<=bw8)
					{
						Thread.sleep(3000);
						ImageIcon i104=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l17.setIcon(i104);
						
						Thread.sleep(3000);
						ImageIcon i150=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
						l18.setIcon(i150);
						
						if(mac.equalsIgnoreCase(mac9))
						{
							if(len<=bw9)
							{
								Thread.sleep(3000);
								ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l19.setIcon(i105);
								
								Thread.sleep(3000);
								ImageIcon i151=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
								l20.setIcon(i151);
								
								if(mac.equalsIgnoreCase(mac10))
								{
									if(len<=bw10)
									{
										Thread.sleep(3000);
										ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l21.setIcon(i106);
										
										//code towards node 11 and node 12
										
										
										
										if(cost11<=cost12)
										{
											Thread.sleep(3000);
											ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
											l22.setIcon(i96);
											
											if(mac.equalsIgnoreCase(mac11))
											{
												if(len<=bw11)
												{
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l25.setIcon(i107);
													
													//code towards node 13 and node 14
													
													
													if(cost13<=cost14)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
														l26.setIcon(i97);
														
														if(mac.equalsIgnoreCase(mac13))
														{
															if(len<=bw13)
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l48.setIcon(i108);
																
																Thread.sleep(3000);
																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																l49.setIcon(i98);
																JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																Socket sc16 = new Socket("localhost",903);
																DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																dout16.writeUTF("N13");
																																		
																DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																String i16=din16.readUTF();
																
																//code towards node 14
																Thread.sleep(3000);
																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																l55.setIcon(i99);
																
																funcn14(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(len>=bw13)
															{
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l48.setIcon(i108);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N13");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw13));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l48.setIcon(i109);
																	
																																										
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																	l49.setIcon(i98);
																	JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																	Socket sc16 = new Socket("localhost",903);
																	DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																	dout16.writeUTF("N13");
																																			
																	DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																	String i16=din16.readUTF();
																	
																	//code towards node 14
																	
																	Thread.sleep(3000);
																	ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																	l55.setIcon(i99);
																	
																	funcn14(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l48.setIcon(i108);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N13");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac13);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l48.setIcon(i109);
																
																																								
																Thread.sleep(3000);
																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
																l49.setIcon(i98);
																JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
																Socket sc16 = new Socket("localhost",903);
																DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
																dout16.writeUTF("N13");
																																		
																DataInputStream din16 = new DataInputStream(sc16.getInputStream());
																String i16=din16.readUTF();
																
																//code towards node 14
																Thread.sleep(3000);
																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																l55.setIcon(i99);
																funcn14(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																//code towards node 14
																Thread.sleep(3000);
																ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
																l55.setIcon(i98);
																
																funcn14(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															
															
														}
													
													}
													else if(cost13>=cost14)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
														l55.setIcon(i97);
														
														if(mac.equalsIgnoreCase(mac14))
														{
															if(len<=bw14)
															{
																Thread.sleep(3000);
																ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l28.setIcon(i109);
																
																//code towards node 15 and node 16
																
																
																
																if(cost15<=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
																	l29.setIcon(i98);
																	
																	if(mac.equalsIgnoreCase(mac15))
																	{
																		if(len<=bw15)
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l30.setIcon(i110);
																			
																			Thread.sleep(3000);
																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																			l34.setIcon(i99);
																			
																			//code towards node 16
																			
																			funcn16(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(len>=bw15)
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l30.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N15");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw15));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l30.setIcon(i108);
																				
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																				l34.setIcon(i99);																									
																				//code towards node 16
																				funcn16(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																			
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l30.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N15");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac15);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l30.setIcon(i108);
																			
																			Thread.sleep(3000);
																			ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																			l34.setIcon(i99);																								
																			//code towards  node 16
																			
																			funcn16(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																		
																		
																	}
																}
																else if(cost15>=cost16)
																{
																	Thread.sleep(3000);
																	ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
																	l32.setIcon(i98);
																	
																	if(mac.equalsIgnoreCase(mac16))
																	{
																		if(len<=bw16)
																		{
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l31.setIcon(i108);
																			
																			//code towards node 17 and node 18
																			
																			
																			if(cost17<=cost18)
																			{
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																				l36.setIcon(i99);
																				
																				if(mac.equalsIgnoreCase(mac17))
																				{
																					if(len<=bw17)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l38.setIcon(i110);
																						
																						//code towards node 18
																						
																						funcn18(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(len>=bw17)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l38.setIcon(i110);
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N17");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw17));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l38.setIcon(i111);
																							
																																																
																							//code towards node 18
																							funcn18(ss1,dname,dip,content,fname,mac,len);
																							break one;
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else 
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l38.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N17");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac17);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l38.setIcon(i111);
																						
																																														
																						//code towards  node 18
																						funcn18(ss1,dname,dip,content,fname,mac,len);
																						break one;
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																				
																			}
																			else if(cost17>=cost18)
																			{
																				Thread.sleep(3000);
																				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																				l35.setIcon(i99);
																				
																				if(mac.equalsIgnoreCase(mac18))
																				{
																					if(len<=bw18)
																					{
																						Thread.sleep(3000);
																						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l37.setIcon(i111);
																						
																						//code towards  node 19 and node 20
																						
																						if(cost19<=cost20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																							l39.setIcon(i100);
																							
																							if(mac.equalsIgnoreCase(mac19))
																							{
																								if(len<=bw19)
																								{
																									Thread.sleep(3000);
																									ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l40.setIcon(i112);
																									
																									//code towards   node 20
																									
																									Thread.sleep(3000);
																									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l43.setIcon(i101);
																									
																									if(mac.equalsIgnoreCase(mac20))
																									{
																										if(len<=bw20)
																										{
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																											//code towards desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																																																																					
																											
																											
																										}
																										else if(len>=bw20)
																										{
																											Thread.sleep(3000);
																											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i110);
																											
																											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																											if(i==0)
																											{
																												int bw=len;
																												bw=bw+1000;
																												
																												Statement stmt2 = con.createStatement();
																												String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																												stmt2.executeUpdate(sql2);
																												
																												Socket sc7 = new Socket("localhost",901);
																												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																												dout6.writeUTF("N20");
																												dout6.writeUTF(fname);
																												dout6.writeUTF(Integer.toString(len));
																												dout6.writeUTF(Integer.toString(bw20));
																												dout6.writeUTF(Integer.toString(bw));
																												
																												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																												String i7=din7.readUTF();
																												
																												
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																																																					
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																												
																												
																											}
																											else if(i==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																									}
																									else
																									{
																										Thread.sleep(3000);
																										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l42.setIcon(i110);
																																																																		
																										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																										if(i==0)
																										{
																											Statement stmt2 = con.createStatement();
																											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																											stmt2.executeUpdate(sql2);
																											
																											Socket sc8 = new Socket("localhost",902);
																											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																											dout7.writeUTF("N20");
																											dout7.writeUTF(fname);
																											dout7.writeUTF(mac20);
																											dout7.writeUTF(mac);
																											
																											
																											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																											String i7=din7.readUTF();
																											
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																																																			
																											//code towards  desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																										}
																										else if(i==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																									
																									}
																									
																								}
																								else if(len>=bw19)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l40.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N19");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw19));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l40.setIcon(i114);
																										
																																																			
																										//code towards   node 20
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l43.setIcon(i101);
																										
																										if(mac.equalsIgnoreCase(mac20))
																										{
																											if(len<=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																												//code towards desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																																																																						
																												
																												
																											}
																											else if(len>=bw20)
																											{
																												Thread.sleep(3000);
																												ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																												l42.setIcon(i112);
																												
																												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																												if(i1==0)
																												{
																													int bw1=len;
																													bw1=bw1+1000;
																													
																													Statement stmt21 = con.createStatement();
																													String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																													stmt21.executeUpdate(sql21);
																													
																													Socket sc71 = new Socket("localhost",901);
																													DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																													dout61.writeUTF("N20");
																													dout61.writeUTF(fname);
																													dout61.writeUTF(Integer.toString(len));
																													dout61.writeUTF(Integer.toString(bw20));
																													dout61.writeUTF(Integer.toString(bw1));
																													
																													DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																													String i71=din71.readUTF();
																													
																													
																													Thread.sleep(3000);
																													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																													l42.setIcon(i113);
																													
																																																						
																													//code towards  desti
																													
																													Thread.sleep(3000);
																													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																													l44.setIcon(i103);
																													
																													Thread.sleep(3000);
																													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																													l45.setIcon(i121);
																													
																													funcnD1(ss1,dname,dip,content,fname);
																													
																													
																												}
																												else if(i1==1)
																												{
																													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																													Thread.sleep(2000);   
																													refresh();
																												}
																											}
																										}
																										else
																										{
																											Thread.sleep(3000);
																											ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i112);
																																																																			
																											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																											if(i1==0)
																											{
																												Statement stmt21 = con.createStatement();
																												String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																												stmt21.executeUpdate(sql21);
																												
																												Socket sc8 = new Socket("localhost",902);
																												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																												dout7.writeUTF("N20");
																												dout7.writeUTF(fname);
																												dout7.writeUTF(mac20);
																												dout7.writeUTF(mac);
																												
																												
																												DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																												String i71=din7.readUTF();
																												
																												Thread.sleep(3000);
																												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i113);
																												
																																																				
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																											}
																											else if(i1==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										
																										}
																										
																										
																										
																										
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																									
																									
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l40.setIcon(i110);
																								
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N19");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac19);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l37.setIcon(i112);
																									
																																														
																									//code towards  node 20
																									
																									Thread.sleep(3000);
																									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l43.setIcon(i101);
																									
																									if(mac.equalsIgnoreCase(mac20))
																									{
																										if(len<=bw20)
																										{
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																											//code towards desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																																																																					
																											
																											
																										}
																										else if(len>=bw20)
																										{
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																											if(i1==0)
																											{
																												int bw1=len;
																												bw1=bw1+1000;
																												
																												Statement stmt21 = con.createStatement();
																												String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																												stmt21.executeUpdate(sql21);
																												
																												Socket sc71 = new Socket("localhost",901);
																												DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																												dout61.writeUTF("N20");
																												dout61.writeUTF(fname);
																												dout61.writeUTF(Integer.toString(len));
																												dout61.writeUTF(Integer.toString(bw20));
																												dout61.writeUTF(Integer.toString(bw1));
																												
																												DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																												String i71=din71.readUTF();
																												
																												
																												Thread.sleep(3000);
																												ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																												l42.setIcon(i114);
																												
																																																					
																												//code towards  desti
																												
																												Thread.sleep(3000);
																												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																												l44.setIcon(i103);
																												
																												Thread.sleep(3000);
																												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																												l45.setIcon(i121);
																												
																												funcnD1(ss1,dname,dip,content,fname);
																												
																												
																											}
																											else if(i1==1)
																											{
																												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																												dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																												Thread.sleep(2000);   
																												refresh();
																											}
																										}
																									}
																									else
																									{
																										Thread.sleep(3000);
																										ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l42.setIcon(i115);
																																																																		
																										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																										if(i1==0)
																										{
																											Statement stmt21 = con.createStatement();
																											String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																											stmt21.executeUpdate(sql21);
																											
																											Socket sc81 = new Socket("localhost",902);
																											DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																											dout71.writeUTF("N20");
																											dout71.writeUTF(fname);
																											dout71.writeUTF(mac20);
																											dout71.writeUTF(mac);
																											
																											
																											DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																											String i71=din7.readUTF();
																											
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																																																			
																											//code towards  desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																										}
																										else if(i1==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																									
																									}
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																						}
																						else if(cost19>=cost20)
																						{
																							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																							l41.setIcon(i101);
																							
																							if(mac.equalsIgnoreCase(mac20))
																							{
																								if(len<=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																									//code towards desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																																																																			
																									
																									
																								}
																								else if(len>=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l42.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N20");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw20));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																																																			
																										//code towards  desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																										
																										
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l42.setIcon(i110);
																																																																
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N20");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac20);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																																																	
																									//code towards  desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							
																							}
																						}
																							
																					}
																					else if(len<=bw18)
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l37.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																						if(i==0)
																						{
																							int bw=len;
																							bw=bw+1000;
																							
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc7 = new Socket("localhost",901);
																							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																							dout6.writeUTF("N18");
																							dout6.writeUTF(fname);
																							dout6.writeUTF(Integer.toString(len));
																							dout6.writeUTF(Integer.toString(bw18));
																							dout6.writeUTF(Integer.toString(bw));
																							
																							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																							String i7=din7.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l37.setIcon(i111);
																							
																																																
																							//code towards  node 19 and node 20
																							funcn19to20(ss1,dname,dip,content,fname,mac,len);
																							break one;
																							
																							
																							
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																						
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l37.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																					if(i==0)
																					{
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N18");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac18);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																						String i7=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l37.setIcon(i111);
																						
																																														
																						//code towards  node 19 and node 20
																						funcn19to20(ss1,dname,dip,content,fname,mac,len);
																						break one;
																						
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																				
																			}
																			
																			
																		}
																		else if(len>=bw16)
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l31.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N16");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw16));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l31.setIcon(i108);
																				
																																													
																				//code towards node 17 and node 18
																				funcn17to18(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l31.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N16");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac16);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l31.setIcon(i108);
																			
																																											
																			//code towards node 17 and node 18
																			
																			funcn17to18(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																
																
															}
															else if(len>=bw14)
															{
																Thread.sleep(3000);
																ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l28.setIcon(i109);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N14");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw14));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l28.setIcon(i108);
																	
																																										
																	//code towards node 15 and node 16
																	funcn15to16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l28.setIcon(i109);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N14");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac14);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l28.setIcon(i108);
																
																																								
																//code towards node 15 and node 16
																
																funcn15to16(ss1,dname,dip,content,fname,mac,len);
																break one;
																
															}
															else if(i==1)
															{
																//code towards node 12
																funcn12(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															
															
														}
													}
													
													
														
												}
												else if(len>=bw11)
												{
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l25.setIcon(i107);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N11");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw11));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l25.setIcon(i108);
														
																																							
														//code towards node 13 and node 14
														
														funcn13to14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l25.setIcon(i107);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N11");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac11);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l25.setIcon(i108);
													
																																					
													//code towards node 13 and node 14
													funcn13to14(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													//code towards node 12
													funcn12(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
											}
										}
										else if(cost11>=cost12)
										{
											Thread.sleep(3000);
											ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
											l23.setIcon(i96);
											
											if(mac.equalsIgnoreCase(mac12))
											{
												if(len<=bw12)
												{
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l24.setIcon(i108);
													//code towards node 14 and node 16
													
													if(cost14<=cost16)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
														l27.setIcon(i97);
														//code towards node 14
														
														funcn14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(cost14>=cost16)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
														l33.setIcon(i97);
														//code towards node 16
														
														funcn16(ss1,dname,dip,content,fname,mac,len);
														break one;
														
														
													}
													
												}
												else if(len>=bw12)
												{
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l24.setIcon(i108);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N12");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw12));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l24.setIcon(i107);
														
																																							
														//code towards node 14 and node 16
														
														if(cost14<=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
															l27.setIcon(i97);
															//code towards node 14
															
															funcn14(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(cost14>=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
															l33.setIcon(i97);
															//code towards node 16
															
															funcn16(ss1,dname,dip,content,fname,mac,len);
															break one;
															
															
														}
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l24.setIcon(i108);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N12");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac12);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l24.setIcon(i107);
													
																																					
													//code towards node 14 and node 16
													
													if(cost14<=cost16)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
														l27.setIcon(i97);
														//code towards node 14
														
														funcn14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(cost14>=cost16)
													{
														Thread.sleep(3000);
														ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
														l33.setIcon(i97);
														//code towards node 16
														
														funcn16(ss1,dname,dip,content,fname,mac,len);
														break one;
														
														
													}
												}
												else if(i==1)
												{
													//code towards node 11
													funcn11(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
											}
										}
										
										
									}
									else if(len>=bw10)
									{
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l21.setIcon(i107);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N10");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw10));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l21.setIcon(i106);
											
																																				
											//code towards node 11 and node 12
											funcn11to12(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l21.setIcon(i103);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N10");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac10);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l21.setIcon(i107);
										
																																		
										//code towards node 11 and node 12
										
										funcn11to12(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
								
							}
							else if(len>=bw9)
							{
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l19.setIcon(i107);
								
								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
								if(i==0)
								{
									int bw=len;
									bw=bw+1000;
									
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
									stmt2.executeUpdate(sql2);
									
									Socket sc7 = new Socket("localhost",901);
									DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
									dout6.writeUTF("N9");
									dout6.writeUTF(fname);
									dout6.writeUTF(Integer.toString(len));
									dout6.writeUTF(Integer.toString(bw9));
									dout6.writeUTF(Integer.toString(bw));
									
									DataInputStream din7 = new DataInputStream(sc7.getInputStream());
									String i7=din7.readUTF();
									
									
									Thread.sleep(3000);
									ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l19.setIcon(i106);
									
																																		
									//code towards node 10
									
									funcn10(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
						}
						else
						{

							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l19.setIcon(i103);
							
							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
							if(i==0)
							{
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
								stmt2.executeUpdate(sql2);
								
								Socket sc8 = new Socket("localhost",902);
								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
								dout7.writeUTF("N9");
								dout7.writeUTF(fname);
								dout7.writeUTF(mac9);
								dout7.writeUTF(mac);
								
								
								DataInputStream din7 = new DataInputStream(sc8.getInputStream());
								String i7=din7.readUTF();
								
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l19.setIcon(i107);
								
																																
								//code towards node 10
								Thread.sleep(3000);
								ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
								l20.setIcon(i122);
								
								funcn10(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("No Alternative Path Found So Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						
						}
						
					}
					else if(len>=bw8)
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l17.setIcon(i107);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-8");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-8");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N8'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N8");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw8));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l17.setIcon(i106);
							
																																
							//code towards node 9
							funcn9(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-8 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{

					Thread.sleep(3000);
					ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l17.setIcon(i103);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-8");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-8");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N8'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N8");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac8);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l17.setIcon(i107);
						
																														
						//code towards node 9
						
						funcn9(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
				
				}
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn9(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(mac.equalsIgnoreCase(mac9))
				{
					if(len<=bw9)
					{
						Thread.sleep(3000);
						ImageIcon i105=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l19.setIcon(i105);
						
						Thread.sleep(3000);
						ImageIcon i150=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
						l20.setIcon(i150);
						
						
						if(mac.equalsIgnoreCase(mac10))
						{
							if(len<=bw10)
							{
								Thread.sleep(3000);
								ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l21.setIcon(i106);
								
								//code towards node 11 and node 12
								
								
								
								if(cost11<=cost12)
								{
									Thread.sleep(3000);
									ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
									l22.setIcon(i96);
									
									if(mac.equalsIgnoreCase(mac11))
									{
										if(len<=bw11)
										{
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l25.setIcon(i107);
											
											//code towards node 13 and node 14
											
											
											if(cost13<=cost14)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
												l26.setIcon(i97);
												
												if(mac.equalsIgnoreCase(mac13))
												{
													if(len<=bw13)
													{
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l48.setIcon(i108);
														
														Thread.sleep(3000);
														ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
														l49.setIcon(i98);
														JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
														Socket sc16 = new Socket("localhost",903);
														DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
														dout16.writeUTF("N13");
																																
														DataInputStream din16 = new DataInputStream(sc16.getInputStream());
														String i16=din16.readUTF();
														
														//code towards node 14
														Thread.sleep(3000);
														ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
														l55.setIcon(i99);
														
														funcn14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(len>=bw13)
													{
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l48.setIcon(i108);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N13");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw13));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l48.setIcon(i109);
															
																																								
															Thread.sleep(3000);
															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
															l49.setIcon(i98);
															JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
															Socket sc16 = new Socket("localhost",903);
															DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
															dout16.writeUTF("N13");
																																	
															DataInputStream din16 = new DataInputStream(sc16.getInputStream());
															String i16=din16.readUTF();
															
															//code towards node 14
															
															Thread.sleep(3000);
															ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
															l55.setIcon(i99);
															
															funcn14(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l48.setIcon(i108);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N13");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac13);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l48.setIcon(i109);
														
																																						
														Thread.sleep(3000);
														ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
														l49.setIcon(i98);
														JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
														Socket sc16 = new Socket("localhost",903);
														DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
														dout16.writeUTF("N13");
																																
														DataInputStream din16 = new DataInputStream(sc16.getInputStream());
														String i16=din16.readUTF();
														
														//code towards node 14
														Thread.sleep(3000);
														ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
														l55.setIcon(i99);
														funcn14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														//code towards node 14
														Thread.sleep(3000);
														ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
														l55.setIcon(i98);
														
														funcn14(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													
													
												}
											
											}
											else if(cost13>=cost14)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
												l55.setIcon(i97);
												
												if(mac.equalsIgnoreCase(mac14))
												{
													if(len<=bw14)
													{
														Thread.sleep(3000);
														ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l28.setIcon(i109);
														
														//code towards node 15 and node 16
														
														
														
														if(cost15<=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
															l29.setIcon(i98);
															
															if(mac.equalsIgnoreCase(mac15))
															{
																if(len<=bw15)
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l30.setIcon(i110);
																	
																	Thread.sleep(3000);
																	ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																	l34.setIcon(i99);
																	
																	//code towards node 16
																	
																	funcn16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(len>=bw15)
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l30.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N15");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw15));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l30.setIcon(i108);
																		
																		Thread.sleep(3000);
																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																		l34.setIcon(i99);																									
																		//code towards node 16
																		funcn16(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																	
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l30.setIcon(i110);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N15");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac15);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l30.setIcon(i108);
																	
																	Thread.sleep(3000);
																	ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																	l34.setIcon(i99);																								
																	//code towards  node 16
																	
																	funcn16(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
																
																
															}
														}
														else if(cost15>=cost16)
														{
															Thread.sleep(3000);
															ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
															l32.setIcon(i98);
															
															if(mac.equalsIgnoreCase(mac16))
															{
																if(len<=bw16)
																{
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l31.setIcon(i108);
																	
																	//code towards node 17 and node 18
																	
																	
																	if(cost17<=cost18)
																	{
																		Thread.sleep(3000);
																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																		l36.setIcon(i99);
																		
																		if(mac.equalsIgnoreCase(mac17))
																		{
																			if(len<=bw17)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l38.setIcon(i110);
																				
																				//code towards node 18
																				
																				funcn18(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(len>=bw17)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l38.setIcon(i110);
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N17");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw17));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l38.setIcon(i111);
																					
																																														
																					//code towards node 18
																					funcn18(ss1,dname,dip,content,fname,mac,len);
																					break one;
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else 
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l38.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N17");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac17);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l38.setIcon(i111);
																				
																																												
																				//code towards  node 18
																				funcn18(ss1,dname,dip,content,fname,mac,len);
																				break one;
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																		
																	}
																	else if(cost17>=cost18)
																	{
																		Thread.sleep(3000);
																		ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																		l35.setIcon(i99);
																		
																		if(mac.equalsIgnoreCase(mac18))
																		{
																			if(len<=bw18)
																			{
																				Thread.sleep(3000);
																				ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l37.setIcon(i111);
																				
																				//code towards  node 19 and node 20
																				
																				if(cost19<=cost20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																					l39.setIcon(i100);
																					
																					if(mac.equalsIgnoreCase(mac19))
																					{
																						if(len<=bw19)
																						{
																							Thread.sleep(3000);
																							ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l40.setIcon(i112);
																							
																							//code towards   node 20
																							
																							Thread.sleep(3000);
																							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l43.setIcon(i101);
																							
																							if(mac.equalsIgnoreCase(mac20))
																							{
																								if(len<=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																									//code towards desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																																																																			
																									
																									
																								}
																								else if(len>=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l42.setIcon(i110);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																									if(i==0)
																									{
																										int bw=len;
																										bw=bw+1000;
																										
																										Statement stmt2 = con.createStatement();
																										String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																										stmt2.executeUpdate(sql2);
																										
																										Socket sc7 = new Socket("localhost",901);
																										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																										dout6.writeUTF("N20");
																										dout6.writeUTF(fname);
																										dout6.writeUTF(Integer.toString(len));
																										dout6.writeUTF(Integer.toString(bw20));
																										dout6.writeUTF(Integer.toString(bw));
																										
																										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																										String i7=din7.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																																																			
																										//code towards  desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																										
																										
																									}
																									else if(i==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l42.setIcon(i110);
																																																																
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																								if(i==0)
																								{
																									Statement stmt2 = con.createStatement();
																									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																									stmt2.executeUpdate(sql2);
																									
																									Socket sc8 = new Socket("localhost",902);
																									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																									dout7.writeUTF("N20");
																									dout7.writeUTF(fname);
																									dout7.writeUTF(mac20);
																									dout7.writeUTF(mac);
																									
																									
																									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																									String i7=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																																																	
																									//code towards  desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																								}
																								else if(i==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							
																							}
																							
																						}
																						else if(len>=bw19)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l40.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N19");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw19));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l40.setIcon(i114);
																								
																																																	
																								//code towards   node 20
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l43.setIcon(i101);
																								
																								if(mac.equalsIgnoreCase(mac20))
																								{
																									if(len<=bw20)
																									{
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																										//code towards desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																																																																				
																										
																										
																									}
																									else if(len>=bw20)
																									{
																										Thread.sleep(3000);
																										ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																										l42.setIcon(i112);
																										
																										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																										if(i1==0)
																										{
																											int bw1=len;
																											bw1=bw1+1000;
																											
																											Statement stmt21 = con.createStatement();
																											String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																											stmt21.executeUpdate(sql21);
																											
																											Socket sc71 = new Socket("localhost",901);
																											DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																											dout61.writeUTF("N20");
																											dout61.writeUTF(fname);
																											dout61.writeUTF(Integer.toString(len));
																											dout61.writeUTF(Integer.toString(bw20));
																											dout61.writeUTF(Integer.toString(bw1));
																											
																											DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																											String i71=din71.readUTF();
																											
																											
																											Thread.sleep(3000);
																											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																											l42.setIcon(i113);
																											
																																																				
																											//code towards  desti
																											
																											Thread.sleep(3000);
																											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																											l44.setIcon(i103);
																											
																											Thread.sleep(3000);
																											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																											l45.setIcon(i121);
																											
																											funcnD1(ss1,dname,dip,content,fname);
																											
																											
																										}
																										else if(i1==1)
																										{
																											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																											Thread.sleep(2000);   
																											refresh();
																										}
																									}
																								}
																								else
																								{
																									Thread.sleep(3000);
																									ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l42.setIcon(i112);
																																																																	
																									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																									int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																									if(i1==0)
																									{
																										Statement stmt21 = con.createStatement();
																										String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																										stmt21.executeUpdate(sql21);
																										
																										Socket sc8 = new Socket("localhost",902);
																										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																										dout7.writeUTF("N20");
																										dout7.writeUTF(fname);
																										dout7.writeUTF(mac20);
																										dout7.writeUTF(mac);
																										
																										
																										DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																										String i71=din7.readUTF();
																										
																										Thread.sleep(3000);
																										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i113);
																										
																																																		
																										//code towards  desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																									}
																									else if(i1==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								
																								}
																								
																								
																								
																								
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																							
																							
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l40.setIcon(i110);
																						
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N19");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac19);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l37.setIcon(i112);
																							
																																												
																							//code towards  node 20
																							
																							Thread.sleep(3000);
																							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l43.setIcon(i101);
																							
																							if(mac.equalsIgnoreCase(mac20))
																							{
																								if(len<=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																									//code towards desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																																																																			
																									
																									
																								}
																								else if(len>=bw20)
																								{
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																									int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																									if(i1==0)
																									{
																										int bw1=len;
																										bw1=bw1+1000;
																										
																										Statement stmt21 = con.createStatement();
																										String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																										stmt21.executeUpdate(sql21);
																										
																										Socket sc71 = new Socket("localhost",901);
																										DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																										dout61.writeUTF("N20");
																										dout61.writeUTF(fname);
																										dout61.writeUTF(Integer.toString(len));
																										dout61.writeUTF(Integer.toString(bw20));
																										dout61.writeUTF(Integer.toString(bw1));
																										
																										DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																										String i71=din71.readUTF();
																										
																										
																										Thread.sleep(3000);
																										ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																										l42.setIcon(i114);
																										
																																																			
																										//code towards  desti
																										
																										Thread.sleep(3000);
																										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																										l44.setIcon(i103);
																										
																										Thread.sleep(3000);
																										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																										l45.setIcon(i121);
																										
																										funcnD1(ss1,dname,dip,content,fname);
																										
																										
																									}
																									else if(i1==1)
																									{
																										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																										Thread.sleep(2000);   
																										refresh();
																									}
																								}
																							}
																							else
																							{
																								Thread.sleep(3000);
																								ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l42.setIcon(i115);
																																																																
																								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																								int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																								if(i1==0)
																								{
																									Statement stmt21 = con.createStatement();
																									String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																									stmt21.executeUpdate(sql21);
																									
																									Socket sc81 = new Socket("localhost",902);
																									DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																									dout71.writeUTF("N20");
																									dout71.writeUTF(fname);
																									dout71.writeUTF(mac20);
																									dout71.writeUTF(mac);
																									
																									
																									DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																									String i71=din7.readUTF();
																									
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																																																	
																									//code towards  desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																								}
																								else if(i1==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							
																							}
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else if(cost19>=cost20)
																				{
																					ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																					l41.setIcon(i101);
																					
																					if(mac.equalsIgnoreCase(mac20))
																					{
																						if(len<=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																							//code towards desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																																																																	
																							
																							
																						}
																						else if(len>=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l42.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N20");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw20));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l42.setIcon(i113);
																								
																																																	
																								//code towards  desti
																								
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l44.setIcon(i103);
																								
																								Thread.sleep(3000);
																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																								l45.setIcon(i121);
																								
																								funcnD1(ss1,dname,dip,content,fname);
																								
																								
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l42.setIcon(i110);
																																																														
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N20");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac20);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																																															
																							//code towards  desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					
																					}
																				}
																					
																			}
																			else if(len<=bw18)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l37.setIcon(i110);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N18");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw18));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l37.setIcon(i111);
																					
																																														
																					//code towards  node 19 and node 20
																					funcn19to20(ss1,dname,dip,content,fname,mac,len);
																					break one;
																					
																					
																					
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																				
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l37.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N18");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac18);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l37.setIcon(i111);
																				
																																												
																				//code towards  node 19 and node 20
																				funcn19to20(ss1,dname,dip,content,fname,mac,len);
																				break one;
																				
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																		
																	}
																	
																	
																}
																else if(len>=bw16)
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l31.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N16");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw16));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l31.setIcon(i108);
																		
																																											
																		//code towards node 17 and node 18
																		funcn17to18(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l31.setIcon(i110);
																
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N16");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac16);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l31.setIcon(i108);
																	
																																									
																	//code towards node 17 and node 18
																	
																	funcn17to18(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														
														
													}
													else if(len>=bw14)
													{
														Thread.sleep(3000);
														ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l28.setIcon(i109);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N14");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw14));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l28.setIcon(i108);
															
																																								
															//code towards node 15 and node 16
															funcn15to16(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l28.setIcon(i109);
													
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N14");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac14);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l28.setIcon(i108);
														
																																						
														//code towards node 15 and node 16
														
														funcn15to16(ss1,dname,dip,content,fname,mac,len);
														break one;
														
													}
													else if(i==1)
													{
														//code towards node 12
														funcn12(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													
													
												}
											}
											
											
												
										}
										else if(len>=bw11)
										{
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l25.setIcon(i107);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
											if(i==0)
											{
												int bw=len;
												bw=bw+1000;
												
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
												stmt2.executeUpdate(sql2);
												
												Socket sc7 = new Socket("localhost",901);
												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
												dout6.writeUTF("N11");
												dout6.writeUTF(fname);
												dout6.writeUTF(Integer.toString(len));
												dout6.writeUTF(Integer.toString(bw11));
												dout6.writeUTF(Integer.toString(bw));
												
												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
												String i7=din7.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l25.setIcon(i108);
												
																																					
												//code towards node 13 and node 14
												
												funcn13to14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l25.setIcon(i107);
										
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
										if(i==0)
										{
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
											stmt2.executeUpdate(sql2);
											
											Socket sc8 = new Socket("localhost",902);
											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
											dout7.writeUTF("N11");
											dout7.writeUTF(fname);
											dout7.writeUTF(mac11);
											dout7.writeUTF(mac);
											
											
											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
											String i7=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l25.setIcon(i108);
											
																																			
											//code towards node 13 and node 14
											funcn13to14(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											//code towards node 12
											funcn12(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
									}
								}
								else if(cost11>=cost12)
								{
									Thread.sleep(3000);
									ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
									l23.setIcon(i96);
									
									if(mac.equalsIgnoreCase(mac12))
									{
										if(len<=bw12)
										{
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l24.setIcon(i108);
											//code towards node 14 and node 16
											
											if(cost14<=cost16)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
												l27.setIcon(i97);
												//code towards node 14
												
												funcn14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(cost14>=cost16)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
												l33.setIcon(i97);
												//code towards node 16
												
												funcn16(ss1,dname,dip,content,fname,mac,len);
												break one;
												
												
											}
											
										}
										else if(len>=bw12)
										{
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l24.setIcon(i108);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
											if(i==0)
											{
												int bw=len;
												bw=bw+1000;
												
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
												stmt2.executeUpdate(sql2);
												
												Socket sc7 = new Socket("localhost",901);
												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
												dout6.writeUTF("N12");
												dout6.writeUTF(fname);
												dout6.writeUTF(Integer.toString(len));
												dout6.writeUTF(Integer.toString(bw12));
												dout6.writeUTF(Integer.toString(bw));
												
												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
												String i7=din7.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l24.setIcon(i107);
												
																																					
												//code towards node 14 and node 16
												
												if(cost14<=cost16)
												{
													Thread.sleep(3000);
													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
													l27.setIcon(i97);
													//code towards node 14
													
													funcn14(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(cost14>=cost16)
												{
													Thread.sleep(3000);
													ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
													l33.setIcon(i97);
													//code towards node 16
													
													funcn16(ss1,dname,dip,content,fname,mac,len);
													break one;
													
													
												}
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l24.setIcon(i108);
										
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
										if(i==0)
										{
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
											stmt2.executeUpdate(sql2);
											
											Socket sc8 = new Socket("localhost",902);
											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
											dout7.writeUTF("N12");
											dout7.writeUTF(fname);
											dout7.writeUTF(mac12);
											dout7.writeUTF(mac);
											
											
											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
											String i7=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l24.setIcon(i107);
											
																																			
											//code towards node 14 and node 16
											
											if(cost14<=cost16)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
												l27.setIcon(i97);
												//code towards node 14
												
												funcn14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(cost14>=cost16)
											{
												Thread.sleep(3000);
												ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
												l33.setIcon(i97);
												//code towards node 16
												
												funcn16(ss1,dname,dip,content,fname,mac,len);
												break one;
												
												
											}
										}
										else if(i==1)
										{
											//code towards node 11
											funcn11(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
									}
								}
								
								
							}
							else if(len>=bw10)
							{
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l21.setIcon(i107);
								
								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
								if(i==0)
								{
									int bw=len;
									bw=bw+1000;
									
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
									stmt2.executeUpdate(sql2);
									
									Socket sc7 = new Socket("localhost",901);
									DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
									dout6.writeUTF("N10");
									dout6.writeUTF(fname);
									dout6.writeUTF(Integer.toString(len));
									dout6.writeUTF(Integer.toString(bw10));
									dout6.writeUTF(Integer.toString(bw));
									
									DataInputStream din7 = new DataInputStream(sc7.getInputStream());
									String i7=din7.readUTF();
									
									
									Thread.sleep(3000);
									ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l21.setIcon(i106);
									
																																		
									//code towards node 11 and node 12
									funcn11to12(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
						}
						else
						{
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l21.setIcon(i103);
							
							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
							if(i==0)
							{
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
								stmt2.executeUpdate(sql2);
								
								Socket sc8 = new Socket("localhost",902);
								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
								dout7.writeUTF("N10");
								dout7.writeUTF(fname);
								dout7.writeUTF(mac10);
								dout7.writeUTF(mac);
								
								
								DataInputStream din7 = new DataInputStream(sc8.getInputStream());
								String i7=din7.readUTF();
								
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l21.setIcon(i107);
								
																																
								//code towards node 11 and node 12
								
								funcn11to12(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("No Alternative Path Found So Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
						
					}
					else if(len>=bw9)
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l19.setIcon(i107);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-9");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-9");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N9'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N9");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw9));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l19.setIcon(i106);
							
																																
							//code towards node 10
							
							funcn10(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-9 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{

					Thread.sleep(3000);
					ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l19.setIcon(i103);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-9");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-9");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N9'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N9");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac9);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l19.setIcon(i107);
						
																														
						//code towards node 10
						Thread.sleep(3000);
						ImageIcon i122=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //node 5
						l20.setIcon(i122);
						
						funcn10(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
				
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn10(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
		one:	 if(mac.equalsIgnoreCase(mac10))
				{
					if(len<=bw10)
					{
						Thread.sleep(3000);
						ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l21.setIcon(i106);
						
						//code towards node 11 and node 12
						
						
						
						if(cost11<=cost12)
						{
							Thread.sleep(3000);
							ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
							l22.setIcon(i96);
							
							if(mac.equalsIgnoreCase(mac11))
							{
								if(len<=bw11)
								{
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l25.setIcon(i107);
									
									//code towards node 13 and node 14
									
									
									if(cost13<=cost14)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
										l26.setIcon(i97);
										
										if(mac.equalsIgnoreCase(mac13))
										{
											if(len<=bw13)
											{
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l48.setIcon(i108);
												
												Thread.sleep(3000);
												ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
												l49.setIcon(i98);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N13");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												//code towards node 14
												Thread.sleep(3000);
												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
												l55.setIcon(i99);
												
												funcn14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(len>=bw13)
											{
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l48.setIcon(i108);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N13");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw13));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l48.setIcon(i109);
													
																																						
													Thread.sleep(3000);
													ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
													l49.setIcon(i98);
													JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
													Socket sc16 = new Socket("localhost",903);
													DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
													dout16.writeUTF("N13");
																															
													DataInputStream din16 = new DataInputStream(sc16.getInputStream());
													String i16=din16.readUTF();
													
													//code towards node 14
													
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
													l55.setIcon(i99);
													
													funcn14(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l48.setIcon(i108);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N13");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac13);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l48.setIcon(i109);
												
																																				
												Thread.sleep(3000);
												ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
												l49.setIcon(i98);
												JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
												Socket sc16 = new Socket("localhost",903);
												DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
												dout16.writeUTF("N13");
																														
												DataInputStream din16 = new DataInputStream(sc16.getInputStream());
												String i16=din16.readUTF();
												
												//code towards node 14
												Thread.sleep(3000);
												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
												l55.setIcon(i99);
												funcn14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												//code towards node 14
												Thread.sleep(3000);
												ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
												l55.setIcon(i98);
												
												funcn14(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											
											
										}
									
									}
									else if(cost13>=cost14)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
										l55.setIcon(i97);
										
										if(mac.equalsIgnoreCase(mac14))
										{
											if(len<=bw14)
											{
												Thread.sleep(3000);
												ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l28.setIcon(i109);
												
												//code towards node 15 and node 16
												
												
												
												if(cost15<=cost16)
												{
													Thread.sleep(3000);
													ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
													l29.setIcon(i98);
													
													if(mac.equalsIgnoreCase(mac15))
													{
														if(len<=bw15)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l30.setIcon(i110);
															
															Thread.sleep(3000);
															ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
															l34.setIcon(i99);
															
															//code towards node 16
															
															funcn16(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(len>=bw15)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l30.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N15");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw15));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l30.setIcon(i108);
																
																Thread.sleep(3000);
																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
																l34.setIcon(i99);																									
																//code towards node 16
																funcn16(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
															
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l30.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N15");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac15);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l30.setIcon(i108);
															
															Thread.sleep(3000);
															ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
															l34.setIcon(i99);																								
															//code towards  node 16
															
															funcn16(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
														
														
													}
												}
												else if(cost15>=cost16)
												{
													Thread.sleep(3000);
													ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
													l32.setIcon(i98);
													
													if(mac.equalsIgnoreCase(mac16))
													{
														if(len<=bw16)
														{
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l31.setIcon(i108);
															
															//code towards node 17 and node 18
															
															
															if(cost17<=cost18)
															{
																Thread.sleep(3000);
																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
																l36.setIcon(i99);
																
																if(mac.equalsIgnoreCase(mac17))
																{
																	if(len<=bw17)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l38.setIcon(i110);
																		
																		//code towards node 18
																		
																		funcn18(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(len>=bw17)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l38.setIcon(i110);
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N17");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw17));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l38.setIcon(i111);
																			
																																												
																			//code towards node 18
																			funcn18(ss1,dname,dip,content,fname,mac,len);
																			break one;
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else 
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l38.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N17");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac17);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l38.setIcon(i111);
																		
																																										
																		//code towards  node 18
																		funcn18(ss1,dname,dip,content,fname,mac,len);
																		break one;
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
																
															}
															else if(cost17>=cost18)
															{
																Thread.sleep(3000);
																ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
																l35.setIcon(i99);
																
																if(mac.equalsIgnoreCase(mac18))
																{
																	if(len<=bw18)
																	{
																		Thread.sleep(3000);
																		ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l37.setIcon(i111);
																		
																		//code towards  node 19 and node 20
																		
																		if(cost19<=cost20)
																		{
																			Thread.sleep(3000);
																			ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																			l39.setIcon(i100);
																			
																			if(mac.equalsIgnoreCase(mac19))
																			{
																				if(len<=bw19)
																				{
																					Thread.sleep(3000);
																					ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l40.setIcon(i112);
																					
																					//code towards   node 20
																					
																					Thread.sleep(3000);
																					ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l43.setIcon(i101);
																					
																					if(mac.equalsIgnoreCase(mac20))
																					{
																						if(len<=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																							//code towards desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																																																																	
																							
																							
																						}
																						else if(len>=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l42.setIcon(i110);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																							if(i==0)
																							{
																								int bw=len;
																								bw=bw+1000;
																								
																								Statement stmt2 = con.createStatement();
																								String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																								stmt2.executeUpdate(sql2);
																								
																								Socket sc7 = new Socket("localhost",901);
																								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																								dout6.writeUTF("N20");
																								dout6.writeUTF(fname);
																								dout6.writeUTF(Integer.toString(len));
																								dout6.writeUTF(Integer.toString(bw20));
																								dout6.writeUTF(Integer.toString(bw));
																								
																								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																								String i7=din7.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l42.setIcon(i113);
																								
																																																	
																								//code towards  desti
																								
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l44.setIcon(i103);
																								
																								Thread.sleep(3000);
																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																								l45.setIcon(i121);
																								
																								funcnD1(ss1,dname,dip,content,fname);
																								
																								
																							}
																							else if(i==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l42.setIcon(i110);
																																																														
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																						if(i==0)
																						{
																							Statement stmt2 = con.createStatement();
																							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																							stmt2.executeUpdate(sql2);
																							
																							Socket sc8 = new Socket("localhost",902);
																							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																							dout7.writeUTF("N20");
																							dout7.writeUTF(fname);
																							dout7.writeUTF(mac20);
																							dout7.writeUTF(mac);
																							
																							
																							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																							String i7=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																																															
																							//code towards  desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																						}
																						else if(i==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					
																					}
																					
																				}
																				else if(len>=bw19)
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l40.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																					if(i==0)
																					{
																						int bw=len;
																						bw=bw+1000;
																						
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc7 = new Socket("localhost",901);
																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																						dout6.writeUTF("N19");
																						dout6.writeUTF(fname);
																						dout6.writeUTF(Integer.toString(len));
																						dout6.writeUTF(Integer.toString(bw19));
																						dout6.writeUTF(Integer.toString(bw));
																						
																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																						String i7=din7.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l40.setIcon(i114);
																						
																																															
																						//code towards   node 20
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l43.setIcon(i101);
																						
																						if(mac.equalsIgnoreCase(mac20))
																						{
																							if(len<=bw20)
																							{
																								Thread.sleep(3000);
																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l42.setIcon(i113);
																								
																								//code towards desti
																								
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l44.setIcon(i103);
																								
																								Thread.sleep(3000);
																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																								l45.setIcon(i121);
																								
																								funcnD1(ss1,dname,dip,content,fname);
																																																																		
																								
																								
																							}
																							else if(len>=bw20)
																							{
																								Thread.sleep(3000);
																								ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																								l42.setIcon(i112);
																								
																								JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																								int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																								if(i1==0)
																								{
																									int bw1=len;
																									bw1=bw1+1000;
																									
																									Statement stmt21 = con.createStatement();
																									String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																									stmt21.executeUpdate(sql21);
																									
																									Socket sc71 = new Socket("localhost",901);
																									DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																									dout61.writeUTF("N20");
																									dout61.writeUTF(fname);
																									dout61.writeUTF(Integer.toString(len));
																									dout61.writeUTF(Integer.toString(bw20));
																									dout61.writeUTF(Integer.toString(bw1));
																									
																									DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																									String i71=din71.readUTF();
																									
																									
																									Thread.sleep(3000);
																									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																									l42.setIcon(i113);
																									
																																																		
																									//code towards  desti
																									
																									Thread.sleep(3000);
																									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																									l44.setIcon(i103);
																									
																									Thread.sleep(3000);
																									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																									l45.setIcon(i121);
																									
																									funcnD1(ss1,dname,dip,content,fname);
																									
																									
																								}
																								else if(i1==1)
																								{
																									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																									dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																									Thread.sleep(2000);   
																									refresh();
																								}
																							}
																						}
																						else
																						{
																							Thread.sleep(3000);
																							ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l42.setIcon(i112);
																																																															
																							JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																							int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																							if(i1==0)
																							{
																								Statement stmt21 = con.createStatement();
																								String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																								stmt21.executeUpdate(sql21);
																								
																								Socket sc8 = new Socket("localhost",902);
																								DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																								dout7.writeUTF("N20");
																								dout7.writeUTF(fname);
																								dout7.writeUTF(mac20);
																								dout7.writeUTF(mac);
																								
																								
																								DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																								String i71=din7.readUTF();
																								
																								Thread.sleep(3000);
																								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l42.setIcon(i113);
																								
																																																
																								//code towards  desti
																								
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l44.setIcon(i103);
																								
																								Thread.sleep(3000);
																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																								l45.setIcon(i121);
																								
																								funcnD1(ss1,dname,dip,content,fname);
																							}
																							else if(i1==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						
																						}
																						
																						
																						
																						
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																					
																					
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l40.setIcon(i110);
																				
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																				if(i==0)
																				{
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N19");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac19);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																					String i7=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l37.setIcon(i112);
																					
																																										
																					//code towards  node 20
																					
																					Thread.sleep(3000);
																					ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l43.setIcon(i101);
																					
																					if(mac.equalsIgnoreCase(mac20))
																					{
																						if(len<=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																							//code towards desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																																																																	
																							
																							
																						}
																						else if(len>=bw20)
																						{
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																							int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																							if(i1==0)
																							{
																								int bw1=len;
																								bw1=bw1+1000;
																								
																								Statement stmt21 = con.createStatement();
																								String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																								stmt21.executeUpdate(sql21);
																								
																								Socket sc71 = new Socket("localhost",901);
																								DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																								dout61.writeUTF("N20");
																								dout61.writeUTF(fname);
																								dout61.writeUTF(Integer.toString(len));
																								dout61.writeUTF(Integer.toString(bw20));
																								dout61.writeUTF(Integer.toString(bw1));
																								
																								DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																								String i71=din71.readUTF();
																								
																								
																								Thread.sleep(3000);
																								ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																								l42.setIcon(i114);
																								
																																																	
																								//code towards  desti
																								
																								Thread.sleep(3000);
																								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																								l44.setIcon(i103);
																								
																								Thread.sleep(3000);
																								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																								l45.setIcon(i121);
																								
																								funcnD1(ss1,dname,dip,content,fname);
																								
																								
																							}
																							else if(i1==1)
																							{
																								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																								dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																								Thread.sleep(2000);   
																								refresh();
																							}
																						}
																					}
																					else
																					{
																						Thread.sleep(3000);
																						ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l42.setIcon(i115);
																																																														
																						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																						int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																						if(i1==0)
																						{
																							Statement stmt21 = con.createStatement();
																							String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																							stmt21.executeUpdate(sql21);
																							
																							Socket sc81 = new Socket("localhost",902);
																							DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																							dout71.writeUTF("N20");
																							dout71.writeUTF(fname);
																							dout71.writeUTF(mac20);
																							dout71.writeUTF(mac);
																							
																							
																							DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																							String i71=din7.readUTF();
																							
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																																															
																							//code towards  desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																						}
																						else if(i1==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					
																					}
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else if(cost19>=cost20)
																		{
																			ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																			l41.setIcon(i101);
																			
																			if(mac.equalsIgnoreCase(mac20))
																			{
																				if(len<=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																					//code towards desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																																																															
																					
																					
																				}
																				else if(len>=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l42.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																					if(i==0)
																					{
																						int bw=len;
																						bw=bw+1000;
																						
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc7 = new Socket("localhost",901);
																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																						dout6.writeUTF("N20");
																						dout6.writeUTF(fname);
																						dout6.writeUTF(Integer.toString(len));
																						dout6.writeUTF(Integer.toString(bw20));
																						dout6.writeUTF(Integer.toString(bw));
																						
																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																						String i7=din7.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i113);
																						
																																															
																						//code towards  desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																						
																						
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i110);
																																																												
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																				if(i==0)
																				{
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N20");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac20);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																					String i7=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																																													
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			
																			}
																		}
																			
																	}
																	else if(len<=bw18)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l37.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N18");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw18));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l37.setIcon(i111);
																			
																																												
																			//code towards  node 19 and node 20
																			funcn19to20(ss1,dname,dip,content,fname,mac,len);
																			break one;
																			
																			
																			
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																		
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l37.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N18");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac18);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l37.setIcon(i111);
																		
																																										
																		//code towards  node 19 and node 20
																		funcn19to20(ss1,dname,dip,content,fname,mac,len);
																		break one;
																		
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
																
															}
															
															
														}
														else if(len>=bw16)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l31.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N16");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw16));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l31.setIcon(i108);
																
																																									
																//code towards node 17 and node 18
																funcn17to18(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l31.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N16");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac16);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l31.setIcon(i108);
															
																																							
															//code towards node 17 and node 18
															
															funcn17to18(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												
												
											}
											else if(len>=bw14)
											{
												Thread.sleep(3000);
												ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l28.setIcon(i109);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N14");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw14));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l28.setIcon(i108);
													
																																						
													//code towards node 15 and node 16
													funcn15to16(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l28.setIcon(i109);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N14");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac14);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l28.setIcon(i108);
												
																																				
												//code towards node 15 and node 16
												
												funcn15to16(ss1,dname,dip,content,fname,mac,len);
												break one;
												
											}
											else if(i==1)
											{
												//code towards node 12
												funcn12(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											
											
										}
									}
									
									
										
								}
								else if(len>=bw11)
								{
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l25.setIcon(i107);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N11");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw11));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l25.setIcon(i108);
										
																																			
										//code towards node 13 and node 14
										
										funcn13to14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l25.setIcon(i107);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N11");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac11);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l25.setIcon(i108);
									
																																	
									//code towards node 13 and node 14
									funcn13to14(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									//code towards node 12
									funcn12(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
							}
						}
						else if(cost11>=cost12)
						{
							Thread.sleep(3000);
							ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
							l23.setIcon(i96);
							
							if(mac.equalsIgnoreCase(mac12))
							{
								if(len<=bw12)
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l24.setIcon(i108);
									//code towards node 14 and node 16
									
									if(cost14<=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
										l27.setIcon(i97);
										//code towards node 14
										
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(cost14>=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
										l33.setIcon(i97);
										//code towards node 16
										
										funcn16(ss1,dname,dip,content,fname,mac,len);
										break one;
										
										
									}
									
								}
								else if(len>=bw12)
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l24.setIcon(i108);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N12");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw12));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l24.setIcon(i107);
										
																																			
										//code towards node 14 and node 16
										
										if(cost14<=cost16)
										{
											Thread.sleep(3000);
											ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
											l27.setIcon(i97);
											//code towards node 14
											
											funcn14(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(cost14>=cost16)
										{
											Thread.sleep(3000);
											ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
											l33.setIcon(i97);
											//code towards node 16
											
											funcn16(ss1,dname,dip,content,fname,mac,len);
											break one;
											
											
										}
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l24.setIcon(i108);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N12");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac12);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l24.setIcon(i107);
									
																																	
									//code towards node 14 and node 16
									
									if(cost14<=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
										l27.setIcon(i97);
										//code towards node 14
										
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(cost14>=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
										l33.setIcon(i97);
										//code towards node 16
										
										funcn16(ss1,dname,dip,content,fname,mac,len);
										break one;
										
										
									}
								}
								else if(i==1)
								{
									//code towards node 11
									funcn11(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
							}
						}
						
						
					}
					else if(len>=bw10)
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l21.setIcon(i107);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-10");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-10");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N10'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N10");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw10));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i106=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l21.setIcon(i106);
							
																																
							//code towards node 11 and node 12
							funcn11to12(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-10 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i103=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l21.setIcon(i103);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-10");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-10");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N10'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N10");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac10);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l21.setIcon(i107);
						
																														
						//code towards node 11 and node 12
						
						funcn11to12(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn11to12(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(cost11<=cost12)
				{
					Thread.sleep(3000);
					ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
					l22.setIcon(i96);
					
					if(mac.equalsIgnoreCase(mac11))
					{
						if(len<=bw11)
						{
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l25.setIcon(i107);
							
							//code towards node 13 and node 14
							
							
							if(cost13<=cost14)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
								l26.setIcon(i97);
								
								if(mac.equalsIgnoreCase(mac13))
								{
									if(len<=bw13)
									{
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l48.setIcon(i108);
										
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
										l49.setIcon(i98);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N13");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node 14
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
										l55.setIcon(i99);
										
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(len>=bw13)
									{
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l48.setIcon(i108);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N13");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw13));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l48.setIcon(i109);
											
																																				
											Thread.sleep(3000);
											ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
											l49.setIcon(i98);
											JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
											Socket sc16 = new Socket("localhost",903);
											DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
											dout16.writeUTF("N13");
																													
											DataInputStream din16 = new DataInputStream(sc16.getInputStream());
											String i16=din16.readUTF();
											
											//code towards node 14
											
											Thread.sleep(3000);
											ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
											l55.setIcon(i99);
											
											funcn14(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l48.setIcon(i108);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N13");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac13);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l48.setIcon(i109);
										
																																		
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
										l49.setIcon(i98);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N13");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node 14
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
										l55.setIcon(i99);
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										//code towards node 14
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
										l55.setIcon(i98);
										
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									
									
								}
							
							}
							else if(cost13>=cost14)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
								l55.setIcon(i97);
								
								if(mac.equalsIgnoreCase(mac14))
								{
									if(len<=bw14)
									{
										Thread.sleep(3000);
										ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l28.setIcon(i109);
										
										//code towards node 15 and node 16
										
										
										
										if(cost15<=cost16)
										{
											Thread.sleep(3000);
											ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
											l29.setIcon(i98);
											
											if(mac.equalsIgnoreCase(mac15))
											{
												if(len<=bw15)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l30.setIcon(i110);
													
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
													l34.setIcon(i99);
													
													//code towards node 16
													
													funcn16(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(len>=bw15)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l30.setIcon(i110);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N15");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw15));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l30.setIcon(i108);
														
														Thread.sleep(3000);
														ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
														l34.setIcon(i99);																									
														//code towards node 16
														funcn16(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
													
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l30.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N15");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac15);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l30.setIcon(i108);
													
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
													l34.setIcon(i99);																								
													//code towards  node 16
													
													funcn16(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
												
												
											}
										}
										else if(cost15>=cost16)
										{
											Thread.sleep(3000);
											ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
											l32.setIcon(i98);
											
											if(mac.equalsIgnoreCase(mac16))
											{
												if(len<=bw16)
												{
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l31.setIcon(i108);
													
													//code towards node 17 and node 18
													
													
													if(cost17<=cost18)
													{
														Thread.sleep(3000);
														ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
														l36.setIcon(i99);
														
														if(mac.equalsIgnoreCase(mac17))
														{
															if(len<=bw17)
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l38.setIcon(i110);
																
																//code towards node 18
																
																funcn18(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(len>=bw17)
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l38.setIcon(i110);
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N17");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw17));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l38.setIcon(i111);
																	
																																										
																	//code towards node 18
																	funcn18(ss1,dname,dip,content,fname,mac,len);
																	break one;
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else 
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l38.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N17");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac17);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l38.setIcon(i111);
																
																																								
																//code towards  node 18
																funcn18(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
														
													}
													else if(cost17>=cost18)
													{
														Thread.sleep(3000);
														ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
														l35.setIcon(i99);
														
														if(mac.equalsIgnoreCase(mac18))
														{
															if(len<=bw18)
															{
																Thread.sleep(3000);
																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l37.setIcon(i111);
																
																//code towards  node 19 and node 20
																
																if(cost19<=cost20)
																{
																	Thread.sleep(3000);
																	ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																	l39.setIcon(i100);
																	
																	if(mac.equalsIgnoreCase(mac19))
																	{
																		if(len<=bw19)
																		{
																			Thread.sleep(3000);
																			ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l40.setIcon(i112);
																			
																			//code towards   node 20
																			
																			Thread.sleep(3000);
																			ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l43.setIcon(i101);
																			
																			if(mac.equalsIgnoreCase(mac20))
																			{
																				if(len<=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																					//code towards desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																																																															
																					
																					
																				}
																				else if(len>=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l42.setIcon(i110);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																					if(i==0)
																					{
																						int bw=len;
																						bw=bw+1000;
																						
																						Statement stmt2 = con.createStatement();
																						String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																						stmt2.executeUpdate(sql2);
																						
																						Socket sc7 = new Socket("localhost",901);
																						DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																						dout6.writeUTF("N20");
																						dout6.writeUTF(fname);
																						dout6.writeUTF(Integer.toString(len));
																						dout6.writeUTF(Integer.toString(bw20));
																						dout6.writeUTF(Integer.toString(bw));
																						
																						DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																						String i7=din7.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i113);
																						
																																															
																						//code towards  desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																						
																						
																					}
																					else if(i==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i110);
																																																												
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																				if(i==0)
																				{
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N20");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac20);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																					String i7=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																																													
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			
																			}
																			
																		}
																		else if(len>=bw19)
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l40.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N19");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw19));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l40.setIcon(i114);
																				
																																													
																				//code towards   node 20
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l43.setIcon(i101);
																				
																				if(mac.equalsIgnoreCase(mac20))
																				{
																					if(len<=bw20)
																					{
																						Thread.sleep(3000);
																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i113);
																						
																						//code towards desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																																																																
																						
																						
																					}
																					else if(len>=bw20)
																					{
																						Thread.sleep(3000);
																						ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																						l42.setIcon(i112);
																						
																						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																						int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																						if(i1==0)
																						{
																							int bw1=len;
																							bw1=bw1+1000;
																							
																							Statement stmt21 = con.createStatement();
																							String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																							stmt21.executeUpdate(sql21);
																							
																							Socket sc71 = new Socket("localhost",901);
																							DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																							dout61.writeUTF("N20");
																							dout61.writeUTF(fname);
																							dout61.writeUTF(Integer.toString(len));
																							dout61.writeUTF(Integer.toString(bw20));
																							dout61.writeUTF(Integer.toString(bw1));
																							
																							DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																							String i71=din71.readUTF();
																							
																							
																							Thread.sleep(3000);
																							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																							l42.setIcon(i113);
																							
																																																
																							//code towards  desti
																							
																							Thread.sleep(3000);
																							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																							l44.setIcon(i103);
																							
																							Thread.sleep(3000);
																							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																							l45.setIcon(i121);
																							
																							funcnD1(ss1,dname,dip,content,fname);
																							
																							
																						}
																						else if(i1==1)
																						{
																							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																							dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																							Thread.sleep(2000);   
																							refresh();
																						}
																					}
																				}
																				else
																				{
																					Thread.sleep(3000);
																					ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l42.setIcon(i112);
																																																													
																					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																					int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																					if(i1==0)
																					{
																						Statement stmt21 = con.createStatement();
																						String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																						stmt21.executeUpdate(sql21);
																						
																						Socket sc8 = new Socket("localhost",902);
																						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																						dout7.writeUTF("N20");
																						dout7.writeUTF(fname);
																						dout7.writeUTF(mac20);
																						dout7.writeUTF(mac);
																						
																						
																						DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																						String i71=din7.readUTF();
																						
																						Thread.sleep(3000);
																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i113);
																						
																																														
																						//code towards  desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																					}
																					else if(i1==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				
																				}
																				
																				
																				
																				
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																			
																			
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l40.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N19");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac19);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l37.setIcon(i112);
																			
																																								
																			//code towards  node 20
																			
																			Thread.sleep(3000);
																			ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l43.setIcon(i101);
																			
																			if(mac.equalsIgnoreCase(mac20))
																			{
																				if(len<=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																					//code towards desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																																																															
																					
																					
																				}
																				else if(len>=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																					int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																					if(i1==0)
																					{
																						int bw1=len;
																						bw1=bw1+1000;
																						
																						Statement stmt21 = con.createStatement();
																						String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																						stmt21.executeUpdate(sql21);
																						
																						Socket sc71 = new Socket("localhost",901);
																						DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																						dout61.writeUTF("N20");
																						dout61.writeUTF(fname);
																						dout61.writeUTF(Integer.toString(len));
																						dout61.writeUTF(Integer.toString(bw20));
																						dout61.writeUTF(Integer.toString(bw1));
																						
																						DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																						String i71=din71.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i114);
																						
																																															
																						//code towards  desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																						
																						
																					}
																					else if(i1==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i115);
																																																												
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																				int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																				if(i1==0)
																				{
																					Statement stmt21 = con.createStatement();
																					String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																					stmt21.executeUpdate(sql21);
																					
																					Socket sc81 = new Socket("localhost",902);
																					DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																					dout71.writeUTF("N20");
																					dout71.writeUTF(fname);
																					dout71.writeUTF(mac20);
																					dout71.writeUTF(mac);
																					
																					
																					DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																					String i71=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																																													
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																				}
																				else if(i1==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			
																			}
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else if(cost19>=cost20)
																{
																	ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																	l41.setIcon(i101);
																	
																	if(mac.equalsIgnoreCase(mac20))
																	{
																		if(len<=bw20)
																		{
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																			//code towards desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																																																													
																			
																			
																		}
																		else if(len>=bw20)
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l42.setIcon(i110);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																			if(i==0)
																			{
																				int bw=len;
																				bw=bw+1000;
																				
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc7 = new Socket("localhost",901);
																				DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																				dout6.writeUTF("N20");
																				dout6.writeUTF(fname);
																				dout6.writeUTF(Integer.toString(len));
																				dout6.writeUTF(Integer.toString(bw20));
																				dout6.writeUTF(Integer.toString(bw));
																				
																				DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																				String i7=din7.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																																													
																				//code towards  desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																				
																				
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i110);
																																																										
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																		if(i==0)
																		{
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N20");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac20);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																			String i7=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																																											
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	
																	}
																}
																	
															}
															else if(len<=bw18)
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l37.setIcon(i110);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N18");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw18));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l37.setIcon(i111);
																	
																																										
																	//code towards  node 19 and node 20
																	funcn19to20(ss1,dname,dip,content,fname,mac,len);
																	break one;
																	
																	
																	
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
																
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l37.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N18");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac18);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l37.setIcon(i111);
																
																																								
																//code towards  node 19 and node 20
																funcn19to20(ss1,dname,dip,content,fname,mac,len);
																break one;
																
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
														
													}
													
													
												}
												else if(len>=bw16)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l31.setIcon(i110);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N16");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw16));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l31.setIcon(i108);
														
																																							
														//code towards node 17 and node 18
														funcn17to18(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l31.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N16");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac16);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l31.setIcon(i108);
													
																																					
													//code towards node 17 and node 18
													
													funcn17to18(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										
										
									}
									else if(len>=bw14)
									{
										Thread.sleep(3000);
										ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l28.setIcon(i109);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N14");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw14));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l28.setIcon(i108);
											
																																				
											//code towards node 15 and node 16
											funcn15to16(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l28.setIcon(i109);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N14");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac14);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l28.setIcon(i108);
										
																																		
										//code towards node 15 and node 16
										
										funcn15to16(ss1,dname,dip,content,fname,mac,len);
										break one;
										
									}
									else if(i==1)
									{
										//code towards node 12
										funcn12(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									
									
								}
							}
							
							
								
						}
						else if(len>=bw11)
						{
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l25.setIcon(i107);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N11");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw11));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l25.setIcon(i108);
								
																																	
								//code towards node 13 and node 14
								
								funcn13to14(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l25.setIcon(i107);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N11");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac11);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l25.setIcon(i108);
							
																															
							//code towards node 13 and node 14
							funcn13to14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							//code towards node 12
							funcn12(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
					}
				}
				else if(cost11>=cost12)
				{
					Thread.sleep(3000);
					ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
					l23.setIcon(i96);
					
					if(mac.equalsIgnoreCase(mac12))
					{
						if(len<=bw12)
						{
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l24.setIcon(i108);
							//code towards node 14 and node 16
							
							if(cost14<=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
								l27.setIcon(i97);
								//code towards node 14
								
								funcn14(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(cost14>=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
								l33.setIcon(i97);
								//code towards node 16
								
								funcn16(ss1,dname,dip,content,fname,mac,len);
								break one;
								
								
							}
							
						}
						else if(len>=bw12)
						{
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l24.setIcon(i108);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N12");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw12));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l24.setIcon(i107);
								
																																	
								//code towards node 14 and node 16
								
								if(cost14<=cost16)
								{
									Thread.sleep(3000);
									ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
									l27.setIcon(i97);
									//code towards node 14
									
									funcn14(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(cost14>=cost16)
								{
									Thread.sleep(3000);
									ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
									l33.setIcon(i97);
									//code towards node 16
									
									funcn16(ss1,dname,dip,content,fname,mac,len);
									break one;
									
									
								}
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l24.setIcon(i108);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N12");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac12);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l24.setIcon(i107);
							
																															
							//code towards node 14 and node 16
							
							if(cost14<=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
								l27.setIcon(i97);
								//code towards node 14
								
								funcn14(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(cost14>=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
								l33.setIcon(i97);
								//code towards node 16
								
								funcn16(ss1,dname,dip,content,fname,mac,len);
								break one;
								
								
							}
						}
						else if(i==1)
						{
							//code towards node 11
							funcn11(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
					}
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn11(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				Thread.sleep(3000);
				ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
				l22.setIcon(i96);
				
			one:	if(mac.equalsIgnoreCase(mac11))
				{
					if(len<=bw11)
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l25.setIcon(i107);
						
						//code towards node 13 and node 14
						
						
						if(cost13<=cost14)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
							l26.setIcon(i97);
							
							if(mac.equalsIgnoreCase(mac13))
							{
								if(len<=bw13)
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l48.setIcon(i108);
									
									Thread.sleep(3000);
									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
									l49.setIcon(i98);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N13");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									//code towards node 14
									Thread.sleep(3000);
									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
									l55.setIcon(i99);
									
									funcn14(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(len>=bw13)
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l48.setIcon(i108);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N13");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw13));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l48.setIcon(i109);
										
																																			
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
										l49.setIcon(i98);
										JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
										Socket sc16 = new Socket("localhost",903);
										DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
										dout16.writeUTF("N13");
																												
										DataInputStream din16 = new DataInputStream(sc16.getInputStream());
										String i16=din16.readUTF();
										
										//code towards node 14
										
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
										l55.setIcon(i99);
										
										funcn14(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l48.setIcon(i108);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N13");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac13);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l48.setIcon(i109);
									
																																	
									Thread.sleep(3000);
									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
									l49.setIcon(i98);
									JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
									Socket sc16 = new Socket("localhost",903);
									DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
									dout16.writeUTF("N13");
																											
									DataInputStream din16 = new DataInputStream(sc16.getInputStream());
									String i16=din16.readUTF();
									
									//code towards node 14
									Thread.sleep(3000);
									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
									l55.setIcon(i99);
									funcn14(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									//code towards node 14
									Thread.sleep(3000);
									ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
									l55.setIcon(i98);
									
									funcn14(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								
								
							}
						
						}
						else if(cost13>=cost14)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
							l55.setIcon(i97);
							
							if(mac.equalsIgnoreCase(mac14))
							{
								if(len<=bw14)
								{
									Thread.sleep(3000);
									ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l28.setIcon(i109);
									
									//code towards node 15 and node 16
									
									
									
									if(cost15<=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
										l29.setIcon(i98);
										
										if(mac.equalsIgnoreCase(mac15))
										{
											if(len<=bw15)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l30.setIcon(i110);
												
												Thread.sleep(3000);
												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
												l34.setIcon(i99);
												
												//code towards node 16
												
												funcn16(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(len>=bw15)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l30.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N15");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw15));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l30.setIcon(i108);
													
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
													l34.setIcon(i99);																									
													//code towards node 16
													funcn16(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
												
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l30.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N15");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac15);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l30.setIcon(i108);
												
												Thread.sleep(3000);
												ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
												l34.setIcon(i99);																								
												//code towards  node 16
												
												funcn16(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
											
											
										}
									}
									else if(cost15>=cost16)
									{
										Thread.sleep(3000);
										ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
										l32.setIcon(i98);
										
										if(mac.equalsIgnoreCase(mac16))
										{
											if(len<=bw16)
											{
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l31.setIcon(i108);
												
												//code towards node 17 and node 18
												
												
												if(cost17<=cost18)
												{
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
													l36.setIcon(i99);
													
													if(mac.equalsIgnoreCase(mac17))
													{
														if(len<=bw17)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l38.setIcon(i110);
															
															//code towards node 18
															
															funcn18(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(len>=bw17)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l38.setIcon(i110);
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N17");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw17));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l38.setIcon(i111);
																
																																									
																//code towards node 18
																funcn18(ss1,dname,dip,content,fname,mac,len);
																break one;
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else 
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l38.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N17");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac17);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l38.setIcon(i111);
															
																																							
															//code towards  node 18
															funcn18(ss1,dname,dip,content,fname,mac,len);
															break one;
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
													
												}
												else if(cost17>=cost18)
												{
													Thread.sleep(3000);
													ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
													l35.setIcon(i99);
													
													if(mac.equalsIgnoreCase(mac18))
													{
														if(len<=bw18)
														{
															Thread.sleep(3000);
															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l37.setIcon(i111);
															
															//code towards  node 19 and node 20
															
															if(cost19<=cost20)
															{
																Thread.sleep(3000);
																ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
																l39.setIcon(i100);
																
																if(mac.equalsIgnoreCase(mac19))
																{
																	if(len<=bw19)
																	{
																		Thread.sleep(3000);
																		ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l40.setIcon(i112);
																		
																		//code towards   node 20
																		
																		Thread.sleep(3000);
																		ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l43.setIcon(i101);
																		
																		if(mac.equalsIgnoreCase(mac20))
																		{
																			if(len<=bw20)
																			{
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																				//code towards desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																																																														
																				
																				
																			}
																			else if(len>=bw20)
																			{
																				Thread.sleep(3000);
																				ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i110);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																				int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																				if(i==0)
																				{
																					int bw=len;
																					bw=bw+1000;
																					
																					Statement stmt2 = con.createStatement();
																					String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																					stmt2.executeUpdate(sql2);
																					
																					Socket sc7 = new Socket("localhost",901);
																					DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																					dout6.writeUTF("N20");
																					dout6.writeUTF(fname);
																					dout6.writeUTF(Integer.toString(len));
																					dout6.writeUTF(Integer.toString(bw20));
																					dout6.writeUTF(Integer.toString(bw));
																					
																					DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																					String i7=din7.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																																														
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																					
																					
																				}
																				else if(i==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l42.setIcon(i110);
																																																											
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																			int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																			if(i==0)
																			{
																				Statement stmt2 = con.createStatement();
																				String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																				stmt2.executeUpdate(sql2);
																				
																				Socket sc8 = new Socket("localhost",902);
																				DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																				dout7.writeUTF("N20");
																				dout7.writeUTF(fname);
																				dout7.writeUTF(mac20);
																				dout7.writeUTF(mac);
																				
																				
																				DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																				String i7=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																																												
																				//code towards  desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																			}
																			else if(i==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		
																		}
																		
																	}
																	else if(len>=bw19)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l40.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N19");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw19));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l40.setIcon(i114);
																			
																																												
																			//code towards   node 20
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l43.setIcon(i101);
																			
																			if(mac.equalsIgnoreCase(mac20))
																			{
																				if(len<=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																					//code towards desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																																																															
																					
																					
																				}
																				else if(len>=bw20)
																				{
																					Thread.sleep(3000);
																					ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																					l42.setIcon(i112);
																					
																					JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																					int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																					if(i1==0)
																					{
																						int bw1=len;
																						bw1=bw1+1000;
																						
																						Statement stmt21 = con.createStatement();
																						String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																						stmt21.executeUpdate(sql21);
																						
																						Socket sc71 = new Socket("localhost",901);
																						DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																						dout61.writeUTF("N20");
																						dout61.writeUTF(fname);
																						dout61.writeUTF(Integer.toString(len));
																						dout61.writeUTF(Integer.toString(bw20));
																						dout61.writeUTF(Integer.toString(bw1));
																						
																						DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																						String i71=din71.readUTF();
																						
																						
																						Thread.sleep(3000);
																						ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																						l42.setIcon(i113);
																						
																																															
																						//code towards  desti
																						
																						Thread.sleep(3000);
																						ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																						l44.setIcon(i103);
																						
																						Thread.sleep(3000);
																						ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																						l45.setIcon(i121);
																						
																						funcnD1(ss1,dname,dip,content,fname);
																						
																						
																					}
																					else if(i1==1)
																					{
																						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																						dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																						Thread.sleep(2000);   
																						refresh();
																					}
																				}
																			}
																			else
																			{
																				Thread.sleep(3000);
																				ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i112);
																																																												
																				JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																				int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																				if(i1==0)
																				{
																					Statement stmt21 = con.createStatement();
																					String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																					stmt21.executeUpdate(sql21);
																					
																					Socket sc8 = new Socket("localhost",902);
																					DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																					dout7.writeUTF("N20");
																					dout7.writeUTF(fname);
																					dout7.writeUTF(mac20);
																					dout7.writeUTF(mac);
																					
																					
																					DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																					String i71=din7.readUTF();
																					
																					Thread.sleep(3000);
																					ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i113);
																					
																																													
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																				}
																				else if(i1==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			
																			}
																			
																			
																			
																			
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																		
																		
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l40.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N19");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac19);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l37.setIcon(i112);
																		
																																							
																		//code towards  node 20
																		
																		Thread.sleep(3000);
																		ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l43.setIcon(i101);
																		
																		if(mac.equalsIgnoreCase(mac20))
																		{
																			if(len<=bw20)
																			{
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																				//code towards desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																																																														
																				
																				
																			}
																			else if(len>=bw20)
																			{
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																				JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																				int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																				if(i1==0)
																				{
																					int bw1=len;
																					bw1=bw1+1000;
																					
																					Statement stmt21 = con.createStatement();
																					String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																					stmt21.executeUpdate(sql21);
																					
																					Socket sc71 = new Socket("localhost",901);
																					DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																					dout61.writeUTF("N20");
																					dout61.writeUTF(fname);
																					dout61.writeUTF(Integer.toString(len));
																					dout61.writeUTF(Integer.toString(bw20));
																					dout61.writeUTF(Integer.toString(bw1));
																					
																					DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																					String i71=din71.readUTF();
																					
																					
																					Thread.sleep(3000);
																					ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																					l42.setIcon(i114);
																					
																																														
																					//code towards  desti
																					
																					Thread.sleep(3000);
																					ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																					l44.setIcon(i103);
																					
																					Thread.sleep(3000);
																					ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																					l45.setIcon(i121);
																					
																					funcnD1(ss1,dname,dip,content,fname);
																					
																					
																				}
																				else if(i1==1)
																				{
																					DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																					dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																					Thread.sleep(2000);   
																					refresh();
																				}
																			}
																		}
																		else
																		{
																			Thread.sleep(3000);
																			ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l42.setIcon(i115);
																																																											
																			JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																			int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																			if(i1==0)
																			{
																				Statement stmt21 = con.createStatement();
																				String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																				stmt21.executeUpdate(sql21);
																				
																				Socket sc81 = new Socket("localhost",902);
																				DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																				dout71.writeUTF("N20");
																				dout71.writeUTF(fname);
																				dout71.writeUTF(mac20);
																				dout71.writeUTF(mac);
																				
																				
																				DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																				String i71=din7.readUTF();
																				
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																																												
																				//code towards  desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																			}
																			else if(i1==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		
																		}
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else if(cost19>=cost20)
															{
																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
																l41.setIcon(i101);
																
																if(mac.equalsIgnoreCase(mac20))
																{
																	if(len<=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																		//code towards desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																																																												
																		
																		
																	}
																	else if(len>=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N20");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw20));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																																												
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																			
																			
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i110);
																																																									
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N20");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac20);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																																										
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																
																}
															}
																
														}
														else if(len<=bw18)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l37.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N18");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw18));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l37.setIcon(i111);
																
																																									
																//code towards  node 19 and node 20
																funcn19to20(ss1,dname,dip,content,fname,mac,len);
																break one;
																
																
																
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
															
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l37.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N18");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac18);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l37.setIcon(i111);
															
																																							
															//code towards  node 19 and node 20
															funcn19to20(ss1,dname,dip,content,fname,mac,len);
															break one;
															
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
													
												}
												
												
											}
											else if(len>=bw16)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l31.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N16");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw16));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l31.setIcon(i108);
													
																																						
													//code towards node 17 and node 18
													funcn17to18(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l31.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N16");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac16);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l31.setIcon(i108);
												
																																				
												//code towards node 17 and node 18
												
												funcn17to18(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									
									
								}
								else if(len>=bw14)
								{
									Thread.sleep(3000);
									ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l28.setIcon(i109);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N14");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw14));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l28.setIcon(i108);
										
																																			
										//code towards node 15 and node 16
										funcn15to16(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l28.setIcon(i109);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N14");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac14);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l28.setIcon(i108);
									
																																	
									//code towards node 15 and node 16
									
									funcn15to16(ss1,dname,dip,content,fname,mac,len);
									break one;
									
								}
								else if(i==1)
								{
									//code towards node 12
									funcn12(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								
								
							}
						}
						
						
							
					}
					else if(len>=bw11)
					{
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l25.setIcon(i107);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-11");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-11");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N11'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N11");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw11));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l25.setIcon(i108);
							
																																
							//code towards node 13 and node 14
							
							funcn13to14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-11 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i107=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l25.setIcon(i107);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-11");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-11");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N11'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N11");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac11);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l25.setIcon(i108);
						
																														
						//code towards node 13 and node 14
						funcn13to14(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						//code towards node 12
						funcn12(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
				}
			
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn12(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				Thread.sleep(3000);
				ImageIcon i96=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
				l23.setIcon(i96);
				
			one:	if(mac.equalsIgnoreCase(mac12))
				{
					if(len<=bw12)
					{
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l24.setIcon(i108);
						//code towards node 14 and node 16
						
						if(cost14<=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
							l27.setIcon(i97);
							//code towards node 14
							
							funcn14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(cost14>=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
							l33.setIcon(i97);
							//code towards node 16
							
							funcn16(ss1,dname,dip,content,fname,mac,len);
							break one;
							
							
						}
						
					}
					else if(len>=bw12)
					{
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l24.setIcon(i108);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-12");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-12");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N12'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N12");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw12));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l24.setIcon(i107);
							
																																
							//code towards node 14 and node 16
							
							if(cost14<=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
								l27.setIcon(i97);
								//code towards node 14
								
								funcn14(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(cost14>=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
								l33.setIcon(i97);
								//code towards node 16
								
								funcn16(ss1,dname,dip,content,fname,mac,len);
								break one;
								
								
							}
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-12 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l24.setIcon(i108);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-12");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-12");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N12'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N12");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac12);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i107=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l24.setIcon(i107);
						
																														
						//code towards node 14 and node 16
						
						if(cost14<=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline12.png"));  //line 3
							l27.setIcon(i97);
							//code towards node 14
							
							funcn14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(cost14>=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline17.png"));  //line 3
							l33.setIcon(i97);
							//code towards node 16
							
							funcn16(ss1,dname,dip,content,fname,mac,len);
							break one;
							
							
						}
					}
					else if(i==1)
					{
						//code towards node 11
						
						funcn11(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
				}
			
			 
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn13to14(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(cost13<=cost14)
				{
					Thread.sleep(3000);
					ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
					l26.setIcon(i97);
					
					if(mac.equalsIgnoreCase(mac13))
					{
						if(len<=bw13)
						{
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l48.setIcon(i108);
							
							Thread.sleep(3000);
							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
							l49.setIcon(i98);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N13");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							//code towards node 14
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
							l55.setIcon(i99);
							
							funcn14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(len>=bw13)
						{
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l48.setIcon(i108);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-13");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-13");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N13'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N13");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw13));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l48.setIcon(i109);
								
																																	
								Thread.sleep(3000);
								ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
								l49.setIcon(i98);
								JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
								Socket sc16 = new Socket("localhost",903);
								DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
								dout16.writeUTF("N13");
																										
								DataInputStream din16 = new DataInputStream(sc16.getInputStream());
								String i16=din16.readUTF();
								
								//code towards node 14
								
								Thread.sleep(3000);
								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
								l55.setIcon(i99);
								
								funcn14(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-13 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l48.setIcon(i108);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-13");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-13");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N13'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N13");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac13);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l48.setIcon(i109);
							
																															
							Thread.sleep(3000);
							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline13.png"));  //line 3
							l49.setIcon(i98);
							JOptionPane.showMessageDialog(null,"Connection Hole Occurs in Node-13");
							Socket sc16 = new Socket("localhost",903);
							DataOutputStream dout16 = new DataOutputStream(sc16.getOutputStream());
							dout16.writeUTF("N13");
																									
							DataInputStream din16 = new DataInputStream(sc16.getInputStream());
							String i16=din16.readUTF();
							
							//code towards node 14
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
							l55.setIcon(i99);
							funcn14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							//code towards node 14
							Thread.sleep(3000);
							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
							l55.setIcon(i98);
							
							funcn14(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						
						
					}
				
				}
				else if(cost13>=cost14)
				{
					Thread.sleep(3000);
					ImageIcon i97=new ImageIcon(this.getClass().getResource("Greenline15.png"));  //line 3
					l55.setIcon(i97);
					
					if(mac.equalsIgnoreCase(mac14))
					{
						if(len<=bw14)
						{
							Thread.sleep(3000);
							ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l28.setIcon(i109);
							
							//code towards node 15 and node 16
							
							
							
							if(cost15<=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
								l29.setIcon(i98);
								
								if(mac.equalsIgnoreCase(mac15))
								{
									if(len<=bw15)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l30.setIcon(i110);
										
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
										l34.setIcon(i99);
										
										//code towards node 16
										
										funcn16(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(len>=bw15)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l30.setIcon(i110);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N15");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw15));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l30.setIcon(i108);
											
											Thread.sleep(3000);
											ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
											l34.setIcon(i99);																									
											//code towards node 16
											funcn16(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
										
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l30.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N15");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac15);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l30.setIcon(i108);
										
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
										l34.setIcon(i99);																								
										//code towards  node 16
										
										funcn16(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
									
									
								}
							}
							else if(cost15>=cost16)
							{
								Thread.sleep(3000);
								ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
								l32.setIcon(i98);
								
								if(mac.equalsIgnoreCase(mac16))
								{
									if(len<=bw16)
									{
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l31.setIcon(i108);
										
										//code towards node 17 and node 18
										
										
										if(cost17<=cost18)
										{
											Thread.sleep(3000);
											ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
											l36.setIcon(i99);
											
											if(mac.equalsIgnoreCase(mac17))
											{
												if(len<=bw17)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l38.setIcon(i110);
													
													//code towards node 18
													
													funcn18(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(len>=bw17)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l38.setIcon(i110);
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N17");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw17));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l38.setIcon(i111);
														
																																							
														//code towards node 18
														funcn18(ss1,dname,dip,content,fname,mac,len);
														break one;
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else 
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l38.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N17");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac17);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l38.setIcon(i111);
													
																																					
													//code towards  node 18
													funcn18(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
											
										}
										else if(cost17>=cost18)
										{
											Thread.sleep(3000);
											ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
											l35.setIcon(i99);
											
											if(mac.equalsIgnoreCase(mac18))
											{
												if(len<=bw18)
												{
													Thread.sleep(3000);
													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l37.setIcon(i111);
													
													//code towards  node 19 and node 20
													
													if(cost19<=cost20)
													{
														Thread.sleep(3000);
														ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
														l39.setIcon(i100);
														
														if(mac.equalsIgnoreCase(mac19))
														{
															if(len<=bw19)
															{
																Thread.sleep(3000);
																ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l40.setIcon(i112);
																
																//code towards   node 20
																
																Thread.sleep(3000);
																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l43.setIcon(i101);
																
																if(mac.equalsIgnoreCase(mac20))
																{
																	if(len<=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																		//code towards desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																																																												
																		
																		
																	}
																	else if(len>=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i110);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																		int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																		if(i==0)
																		{
																			int bw=len;
																			bw=bw+1000;
																			
																			Statement stmt2 = con.createStatement();
																			String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																			stmt2.executeUpdate(sql2);
																			
																			Socket sc7 = new Socket("localhost",901);
																			DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																			dout6.writeUTF("N20");
																			dout6.writeUTF(fname);
																			dout6.writeUTF(Integer.toString(len));
																			dout6.writeUTF(Integer.toString(bw20));
																			dout6.writeUTF(Integer.toString(bw));
																			
																			DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																			String i7=din7.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																																												
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																			
																			
																		}
																		else if(i==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i110);
																																																									
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																	if(i==0)
																	{
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N20");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac20);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																		String i7=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																																										
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																
																}
																
															}
															else if(len>=bw19)
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l40.setIcon(i110);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N19");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw19));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l40.setIcon(i114);
																	
																																										
																	//code towards   node 20
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l43.setIcon(i101);
																	
																	if(mac.equalsIgnoreCase(mac20))
																	{
																		if(len<=bw20)
																		{
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																			//code towards desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																																																													
																			
																			
																		}
																		else if(len>=bw20)
																		{
																			Thread.sleep(3000);
																			ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																			l42.setIcon(i112);
																			
																			JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																			int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																			if(i1==0)
																			{
																				int bw1=len;
																				bw1=bw1+1000;
																				
																				Statement stmt21 = con.createStatement();
																				String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																				stmt21.executeUpdate(sql21);
																				
																				Socket sc71 = new Socket("localhost",901);
																				DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																				dout61.writeUTF("N20");
																				dout61.writeUTF(fname);
																				dout61.writeUTF(Integer.toString(len));
																				dout61.writeUTF(Integer.toString(bw20));
																				dout61.writeUTF(Integer.toString(bw1));
																				
																				DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																				String i71=din71.readUTF();
																				
																				
																				Thread.sleep(3000);
																				ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																				l42.setIcon(i113);
																				
																																													
																				//code towards  desti
																				
																				Thread.sleep(3000);
																				ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																				l44.setIcon(i103);
																				
																				Thread.sleep(3000);
																				ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																				l45.setIcon(i121);
																				
																				funcnD1(ss1,dname,dip,content,fname);
																				
																				
																			}
																			else if(i1==1)
																			{
																				DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																				dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																				Thread.sleep(2000);   
																				refresh();
																			}
																		}
																	}
																	else
																	{
																		Thread.sleep(3000);
																		ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i112);
																																																										
																		JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																		int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																		if(i1==0)
																		{
																			Statement stmt21 = con.createStatement();
																			String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																			stmt21.executeUpdate(sql21);
																			
																			Socket sc8 = new Socket("localhost",902);
																			DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																			dout7.writeUTF("N20");
																			dout7.writeUTF(fname);
																			dout7.writeUTF(mac20);
																			dout7.writeUTF(mac);
																			
																			
																			DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																			String i71=din7.readUTF();
																			
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																																											
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																		}
																		else if(i1==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	
																	}
																	
																	
																	
																	
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
																
																
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l40.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N19");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac19);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l37.setIcon(i112);
																
																																					
																//code towards  node 20
																
																Thread.sleep(3000);
																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l43.setIcon(i101);
																
																if(mac.equalsIgnoreCase(mac20))
																{
																	if(len<=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																		//code towards desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																																																												
																		
																		
																	}
																	else if(len>=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																		int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																		if(i1==0)
																		{
																			int bw1=len;
																			bw1=bw1+1000;
																			
																			Statement stmt21 = con.createStatement();
																			String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																			stmt21.executeUpdate(sql21);
																			
																			Socket sc71 = new Socket("localhost",901);
																			DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																			dout61.writeUTF("N20");
																			dout61.writeUTF(fname);
																			dout61.writeUTF(Integer.toString(len));
																			dout61.writeUTF(Integer.toString(bw20));
																			dout61.writeUTF(Integer.toString(bw1));
																			
																			DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																			String i71=din71.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i114);
																			
																																												
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																			
																			
																		}
																		else if(i1==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i115);
																																																									
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																	int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																	if(i1==0)
																	{
																		Statement stmt21 = con.createStatement();
																		String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																		stmt21.executeUpdate(sql21);
																		
																		Socket sc81 = new Socket("localhost",902);
																		DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																		dout71.writeUTF("N20");
																		dout71.writeUTF(fname);
																		dout71.writeUTF(mac20);
																		dout71.writeUTF(mac);
																		
																		
																		DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																		String i71=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																																										
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																	}
																	else if(i1==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																
																}
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else if(cost19>=cost20)
													{
														ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
														l41.setIcon(i101);
														
														if(mac.equalsIgnoreCase(mac20))
														{
															if(len<=bw20)
															{
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																//code towards desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																																																										
																
																
															}
															else if(len>=bw20)
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l42.setIcon(i110);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																if(i==0)
																{
																	int bw=len;
																	bw=bw+1000;
																	
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc7 = new Socket("localhost",901);
																	DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																	dout6.writeUTF("N20");
																	dout6.writeUTF(fname);
																	dout6.writeUTF(Integer.toString(len));
																	dout6.writeUTF(Integer.toString(bw20));
																	dout6.writeUTF(Integer.toString(bw));
																	
																	DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																	String i7=din7.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																																										
																	//code towards  desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																	
																	
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i110);
																																																							
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
															if(i==0)
															{
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																stmt2.executeUpdate(sql2);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N20");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac20);
																dout7.writeUTF(mac);
																
																
																DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																String i7=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																																								
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														
														}
													}
														
												}
												else if(len<=bw18)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l37.setIcon(i110);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N18");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw18));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l37.setIcon(i111);
														
																																							
														//code towards  node 19 and node 20
														funcn19to20(ss1,dname,dip,content,fname,mac,len);
														break one;
														
														
														
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
													
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l37.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N18");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac18);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l37.setIcon(i111);
													
																																					
													//code towards  node 19 and node 20
													funcn19to20(ss1,dname,dip,content,fname,mac,len);
													break one;
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
											
										}
										
										
									}
									else if(len>=bw16)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l31.setIcon(i110);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N16");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw16));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l31.setIcon(i108);
											
																																				
											//code towards node 17 and node 18
											funcn17to18(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l31.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N16");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac16);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l31.setIcon(i108);
										
																																		
										//code towards node 17 and node 18
										
										funcn17to18(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							
							
						}
						else if(len>=bw14)
						{
							Thread.sleep(3000);
							ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l28.setIcon(i109);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N14");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw14));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l28.setIcon(i108);
								
																																	
								//code towards node 15 and node 16
								funcn15to16(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l28.setIcon(i109);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N14");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac14);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l28.setIcon(i108);
							
																															
							//code towards node 15 and node 16
							
							funcn15to16(ss1,dname,dip,content,fname,mac,len);
							break one;
							
						}
						else if(i==1)
						{
							//code towards node 12
							funcn12(ss1,dname,dip,content,fname,mac,len);
							break one;
							
						}
						
						
					}
				}
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn14(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				
				
			one:	if(mac.equalsIgnoreCase(mac14))
				{
					if(len<=bw14)
					{
						Thread.sleep(3000);
						ImageIcon i109=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l28.setIcon(i109);
						
						//code towards node 15 and node 16
						
						
						
						if(cost15<=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
							l29.setIcon(i98);
							
							if(mac.equalsIgnoreCase(mac15))
							{
								if(len<=bw15)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l30.setIcon(i110);
									
									Thread.sleep(3000);
									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
									l34.setIcon(i99);
									
									//code towards node 16
									
									funcn16(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(len>=bw15)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l30.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N15");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw15));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l30.setIcon(i108);
										
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
										l34.setIcon(i99);																									
										//code towards node 16
										funcn16(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
									
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l30.setIcon(i110);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N15");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac15);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l30.setIcon(i108);
									
									Thread.sleep(3000);
									ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
									l34.setIcon(i99);																								
									//code towards  node 16
									
									funcn16(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
								
								
							}
						}
						else if(cost15>=cost16)
						{
							Thread.sleep(3000);
							ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
							l32.setIcon(i98);
							
							if(mac.equalsIgnoreCase(mac16))
							{
								if(len<=bw16)
								{
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l31.setIcon(i108);
									
									//code towards node 17 and node 18
									
									
									if(cost17<=cost18)
									{
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
										l36.setIcon(i99);
										
										if(mac.equalsIgnoreCase(mac17))
										{
											if(len<=bw17)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l38.setIcon(i110);
												
												//code towards node 18
												
												funcn18(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(len>=bw17)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l38.setIcon(i110);
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N17");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw17));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l38.setIcon(i111);
													
																																						
													//code towards node 18
													funcn18(ss1,dname,dip,content,fname,mac,len);
													break one;
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else 
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l38.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N17");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac17);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l38.setIcon(i111);
												
																																				
												//code towards  node 18
												funcn18(ss1,dname,dip,content,fname,mac,len);
												break one;
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
										
									}
									else if(cost17>=cost18)
									{
										Thread.sleep(3000);
										ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
										l35.setIcon(i99);
										
										if(mac.equalsIgnoreCase(mac18))
										{
											if(len<=bw18)
											{
												Thread.sleep(3000);
												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l37.setIcon(i111);
												
												//code towards  node 19 and node 20
												
												if(cost19<=cost20)
												{
													Thread.sleep(3000);
													ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
													l39.setIcon(i100);
													
													if(mac.equalsIgnoreCase(mac19))
													{
														if(len<=bw19)
														{
															Thread.sleep(3000);
															ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l40.setIcon(i112);
															
															//code towards   node 20
															
															Thread.sleep(3000);
															ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l43.setIcon(i101);
															
															if(mac.equalsIgnoreCase(mac20))
															{
																if(len<=bw20)
																{
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																	//code towards desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																																																											
																	
																	
																}
																else if(len>=bw20)
																{
																	Thread.sleep(3000);
																	ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i110);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																	int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																	if(i==0)
																	{
																		int bw=len;
																		bw=bw+1000;
																		
																		Statement stmt2 = con.createStatement();
																		String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																		stmt2.executeUpdate(sql2);
																		
																		Socket sc7 = new Socket("localhost",901);
																		DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																		dout6.writeUTF("N20");
																		dout6.writeUTF(fname);
																		dout6.writeUTF(Integer.toString(len));
																		dout6.writeUTF(Integer.toString(bw20));
																		dout6.writeUTF(Integer.toString(bw));
																		
																		DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																		String i7=din7.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																																											
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																		
																		
																	}
																	else if(i==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l42.setIcon(i110);
																																																								
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																if(i==0)
																{
																	Statement stmt2 = con.createStatement();
																	String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																	stmt2.executeUpdate(sql2);
																	
																	Socket sc8 = new Socket("localhost",902);
																	DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																	dout7.writeUTF("N20");
																	dout7.writeUTF(fname);
																	dout7.writeUTF(mac20);
																	dout7.writeUTF(mac);
																	
																	
																	DataInputStream din7 = new DataInputStream(sc8.getInputStream());
																	String i7=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																																									
																	//code towards  desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																}
																else if(i==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															
															}
															
														}
														else if(len>=bw19)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l40.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N19");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw19));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l40.setIcon(i114);
																
																																									
																//code towards   node 20
																
																
																Thread.sleep(3000);
																ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l43.setIcon(i101);
																
																if(mac.equalsIgnoreCase(mac20))
																{
																	if(len<=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																		//code towards desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																																																												
																		
																		
																	}
																	else if(len>=bw20)
																	{
																		Thread.sleep(3000);
																		ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																		l42.setIcon(i112);
																		
																		JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																		int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																		if(i1==0)
																		{
																			int bw1=len;
																			bw1=bw1+1000;
																			
																			Statement stmt21 = con.createStatement();
																			String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																			stmt21.executeUpdate(sql21);
																			
																			Socket sc71 = new Socket("localhost",901);
																			DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																			dout61.writeUTF("N20");
																			dout61.writeUTF(fname);
																			dout61.writeUTF(Integer.toString(len));
																			dout61.writeUTF(Integer.toString(bw20));
																			dout61.writeUTF(Integer.toString(bw1));
																			
																			DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																			String i71=din71.readUTF();
																			
																			
																			Thread.sleep(3000);
																			ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																			l42.setIcon(i113);
																			
																																												
																			//code towards  desti
																			
																			Thread.sleep(3000);
																			ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																			l44.setIcon(i103);
																			
																			Thread.sleep(3000);
																			ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																			l45.setIcon(i121);
																			
																			funcnD1(ss1,dname,dip,content,fname);
																			
																			
																		}
																		else if(i1==1)
																		{
																			DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																			dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																			Thread.sleep(2000);   
																			refresh();
																		}
																	}
																}
																else
																{
																	Thread.sleep(3000);
																	ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i112);
																																																									
																	JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																	int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																	if(i1==0)
																	{
																		Statement stmt21 = con.createStatement();
																		String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																		stmt21.executeUpdate(sql21);
																		
																		Socket sc8 = new Socket("localhost",902);
																		DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																		dout7.writeUTF("N20");
																		dout7.writeUTF(fname);
																		dout7.writeUTF(mac20);
																		dout7.writeUTF(mac);
																		
																		
																		DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																		String i71=din7.readUTF();
																		
																		Thread.sleep(3000);
																		ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i113);
																		
																																										
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																	}
																	else if(i1==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																
																}
																
																
																
																
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
															
															
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l40.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N19");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac19);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l37.setIcon(i112);
															
																																				
															//code towards  node 20
															
															Thread.sleep(3000);
															ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l43.setIcon(i101);
															
															if(mac.equalsIgnoreCase(mac20))
															{
																if(len<=bw20)
																{
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																	//code towards desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																																																											
																	
																	
																}
																else if(len>=bw20)
																{
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																	JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																	int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																	if(i1==0)
																	{
																		int bw1=len;
																		bw1=bw1+1000;
																		
																		Statement stmt21 = con.createStatement();
																		String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																		stmt21.executeUpdate(sql21);
																		
																		Socket sc71 = new Socket("localhost",901);
																		DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																		dout61.writeUTF("N20");
																		dout61.writeUTF(fname);
																		dout61.writeUTF(Integer.toString(len));
																		dout61.writeUTF(Integer.toString(bw20));
																		dout61.writeUTF(Integer.toString(bw1));
																		
																		DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																		String i71=din71.readUTF();
																		
																		
																		Thread.sleep(3000);
																		ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																		l42.setIcon(i114);
																		
																																											
																		//code towards  desti
																		
																		Thread.sleep(3000);
																		ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																		l44.setIcon(i103);
																		
																		Thread.sleep(3000);
																		ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																		l45.setIcon(i121);
																		
																		funcnD1(ss1,dname,dip,content,fname);
																		
																		
																	}
																	else if(i1==1)
																	{
																		DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																		dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																		Thread.sleep(2000);   
																		refresh();
																	}
																}
															}
															else
															{
																Thread.sleep(3000);
																ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l42.setIcon(i115);
																																																								
																JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
																int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
																if(i1==0)
																{
																	Statement stmt21 = con.createStatement();
																	String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																	stmt21.executeUpdate(sql21);
																	
																	Socket sc81 = new Socket("localhost",902);
																	DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
																	dout71.writeUTF("N20");
																	dout71.writeUTF(fname);
																	dout71.writeUTF(mac20);
																	dout71.writeUTF(mac);
																	
																	
																	DataInputStream din71 = new DataInputStream(sc81.getInputStream());
																	String i71=din7.readUTF();
																	
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																																									
																	//code towards  desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																}
																else if(i1==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															
															}
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else if(cost19>=cost20)
												{
													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
													l41.setIcon(i101);
													
													if(mac.equalsIgnoreCase(mac20))
													{
														if(len<=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
															//code towards desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
																																																									
															
															
														}
														else if(len>=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N20");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw20));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																																									
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																
																
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i110);
																																																						
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N20");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac20);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
																																							
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													
													}
												}
													
											}
											else if(len<=bw18)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l37.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N18");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw18));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l37.setIcon(i111);
													
																																						
													//code towards  node 19 and node 20
													funcn19to20(ss1,dname,dip,content,fname,mac,len);
													break one;
													
													
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
												
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l37.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N18");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac18);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l37.setIcon(i111);
												
																																				
												//code towards  node 19 and node 20
												funcn19to20(ss1,dname,dip,content,fname,mac,len);
												break one;
												
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
										
									}
									
									
								}
								else if(len>=bw16)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l31.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N16");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw16));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l31.setIcon(i108);
										
																																			
										//code towards node 17 and node 18
										funcn17to18(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l31.setIcon(i110);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N16");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac16);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l31.setIcon(i108);
									
																																	
									//code towards node 17 and node 18
									
									funcn17to18(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
						}
						
						
					}
					else if(len>=bw14)
					{
						Thread.sleep(3000);
						ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l28.setIcon(i109);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-14");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-14");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N14'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N14");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw14));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l28.setIcon(i108);
							
																																
							//code towards node 15 and node 16
							funcn15to16(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-14 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i109=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l28.setIcon(i109);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-14");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-14");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N14'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N14");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac14);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l28.setIcon(i108);
						
																														
						//code towards node 15 and node 16
						
						funcn15to16(ss1,dname,dip,content,fname,mac,len);
						break one;
						
					}
					else if(i==1)
					{
						//code towards node 12
						funcn12(ss1,dname,dip,content,fname,mac,len);
						break one;
						
					}
					
					
				}
			
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn16(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

							
			one:	if(mac.equalsIgnoreCase(mac16))
				{
					if(len<=bw16)
					{
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l31.setIcon(i108);
						
						//code towards node 17 and node 18
						
						
						if(cost17<=cost18)
						{
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
							l36.setIcon(i99);
							
							if(mac.equalsIgnoreCase(mac17))
							{
								if(len<=bw17)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l38.setIcon(i110);
									
									//code towards node 18
									
									funcn18(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(len>=bw17)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l38.setIcon(i110);
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N17");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw17));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l38.setIcon(i111);
										
																																			
										//code towards node 18
										funcn18(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else 
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l38.setIcon(i110);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N17");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac17);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l38.setIcon(i111);
									
																																	
									//code towards  node 18
									funcn18(ss1,dname,dip,content,fname,mac,len);
									break one;
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
							
						}
						else if(cost17>=cost18)
						{
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
							l35.setIcon(i99);
							
							if(mac.equalsIgnoreCase(mac18))
							{
								if(len<=bw18)
								{
									Thread.sleep(3000);
									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l37.setIcon(i111);
									
									//code towards  node 19 and node 20
									
									if(cost19<=cost20)
									{
										Thread.sleep(3000);
										ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
										l39.setIcon(i100);
										
										if(mac.equalsIgnoreCase(mac19))
										{
											if(len<=bw19)
											{
												Thread.sleep(3000);
												ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l40.setIcon(i112);
												
												//code towards   node 20
												
												Thread.sleep(3000);
												ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l43.setIcon(i101);
												
												if(mac.equalsIgnoreCase(mac20))
												{
													if(len<=bw20)
													{
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
														//code towards desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
																																																								
														
														
													}
													else if(len>=bw20)
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i110);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
														if(i==0)
														{
															int bw=len;
															bw=bw+1000;
															
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
															stmt2.executeUpdate(sql2);
															
															Socket sc7 = new Socket("localhost",901);
															DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
															dout6.writeUTF("N20");
															dout6.writeUTF(fname);
															dout6.writeUTF(Integer.toString(len));
															dout6.writeUTF(Integer.toString(bw20));
															dout6.writeUTF(Integer.toString(bw));
															
															DataInputStream din7 = new DataInputStream(sc7.getInputStream());
															String i7=din7.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
																																								
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
															
															
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l42.setIcon(i110);
																																																					
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
													if(i==0)
													{
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
														stmt2.executeUpdate(sql2);
														
														Socket sc8 = new Socket("localhost",902);
														DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
														dout7.writeUTF("N20");
														dout7.writeUTF(fname);
														dout7.writeUTF(mac20);
														dout7.writeUTF(mac);
														
														
														DataInputStream din7 = new DataInputStream(sc8.getInputStream());
														String i7=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
																																						
														//code towards  desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												
												}
												
											}
											else if(len>=bw19)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l40.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N19");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw19));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l40.setIcon(i114);
													
																																						
													//code towards   node 20
													
													
													Thread.sleep(3000);
													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l43.setIcon(i101);
													
													if(mac.equalsIgnoreCase(mac20))
													{
														if(len<=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
															//code towards desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
																																																									
															
															
														}
														else if(len>=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i112);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
															if(i1==0)
															{
																int bw1=len;
																bw1=bw1+1000;
																
																Statement stmt21 = con.createStatement();
																String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																stmt21.executeUpdate(sql21);
																
																Socket sc71 = new Socket("localhost",901);
																DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																dout61.writeUTF("N20");
																dout61.writeUTF(fname);
																dout61.writeUTF(Integer.toString(len));
																dout61.writeUTF(Integer.toString(bw20));
																dout61.writeUTF(Integer.toString(bw1));
																
																DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																String i71=din71.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																																									
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																
																
															}
															else if(i1==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i112);
																																																						
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
														if(i1==0)
														{
															Statement stmt21 = con.createStatement();
															String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
															stmt21.executeUpdate(sql21);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N20");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac20);
															dout7.writeUTF(mac);
															
															
															DataInputStream din71 = new DataInputStream(sc8.getInputStream());
															String i71=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
																																							
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
														}
														else if(i1==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													
													}
													
													
													
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
												
												
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l40.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N19");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac19);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l37.setIcon(i112);
												
																																	
												//code towards  node 20
												
												Thread.sleep(3000);
												ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l43.setIcon(i101);
												
												if(mac.equalsIgnoreCase(mac20))
												{
													if(len<=bw20)
													{
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
														//code towards desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
																																																								
														
														
													}
													else if(len>=bw20)
													{
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i113);
														
														JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
														if(i1==0)
														{
															int bw1=len;
															bw1=bw1+1000;
															
															Statement stmt21 = con.createStatement();
															String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
															stmt21.executeUpdate(sql21);
															
															Socket sc71 = new Socket("localhost",901);
															DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
															dout61.writeUTF("N20");
															dout61.writeUTF(fname);
															dout61.writeUTF(Integer.toString(len));
															dout61.writeUTF(Integer.toString(bw20));
															dout61.writeUTF(Integer.toString(bw1));
															
															DataInputStream din71 = new DataInputStream(sc71.getInputStream());
															String i71=din71.readUTF();
															
															
															Thread.sleep(3000);
															ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i114);
															
																																								
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
															
															
														}
														else if(i1==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													}
												}
												else
												{
													Thread.sleep(3000);
													ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l42.setIcon(i115);
																																																					
													JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
													int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
													if(i1==0)
													{
														Statement stmt21 = con.createStatement();
														String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
														stmt21.executeUpdate(sql21);
														
														Socket sc81 = new Socket("localhost",902);
														DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
														dout71.writeUTF("N20");
														dout71.writeUTF(fname);
														dout71.writeUTF(mac20);
														dout71.writeUTF(mac);
														
														
														DataInputStream din71 = new DataInputStream(sc81.getInputStream());
														String i71=din7.readUTF();
														
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
																																						
														//code towards  desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
													}
													else if(i1==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("No Alternative Path Found So Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												
												}
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else if(cost19>=cost20)
									{
										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
										l41.setIcon(i101);
										
										if(mac.equalsIgnoreCase(mac20))
										{
											if(len<=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
												//code towards desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
																																																						
												
												
											}
											else if(len>=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N20");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw20));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
																																						
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
													
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i110);
																																																			
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N20");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac20);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
																																				
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
									}
										
								}
								else if(len<=bw18)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l37.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N18");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw18));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l37.setIcon(i111);
										
																																			
										//code towards  node 19 and node 20
										funcn19to20(ss1,dname,dip,content,fname,mac,len);
										break one;
										
										
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
									
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l37.setIcon(i110);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N18");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac18);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l37.setIcon(i111);
									
																																	
									//code towards  node 19 and node 20
									funcn19to20(ss1,dname,dip,content,fname,mac,len);
									break one;
									
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
							
						}
						
						
					}
					else if(len>=bw16)
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l31.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N16");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw16));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l31.setIcon(i108);
							
																																
							//code towards node 17 and node 18
							funcn17to18(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l31.setIcon(i110);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N16");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac16);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l31.setIcon(i108);
						
																														
						//code towards node 17 and node 18
						
						funcn17to18(ss1,dname,dip,content,fname,mac,len);
						break one;
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
				}
			
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	public void funcn18(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 

				Thread.sleep(3000);
				ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline26.png"));  //line 3
				l56.setIcon(i99);
				
				System.out.println(mac);
				System.out.println(mac18);
				
			one:	if(mac.equalsIgnoreCase(mac18))
				{
					if(len<=bw18)
					{
						Thread.sleep(3000);
						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l37.setIcon(i111);
						
						//code towards  node 19 and node 20
						
						if(cost19<=cost20)
						{
							Thread.sleep(3000);
							ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
							l39.setIcon(i100);
							
							if(mac.equalsIgnoreCase(mac19))
							{
								if(len<=bw19)
								{
									Thread.sleep(3000);
									ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l40.setIcon(i112);
									
									//code towards   node 20
									
									Thread.sleep(3000);
									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l43.setIcon(i101);
									
									if(mac.equalsIgnoreCase(mac20))
									{
										if(len<=bw20)
										{
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
											//code towards desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
																																																					
											
											
										}
										else if(len>=bw20)
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i110);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
											if(i==0)
											{
												int bw=len;
												bw=bw+1000;
												
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
												stmt2.executeUpdate(sql2);
												
												Socket sc7 = new Socket("localhost",901);
												DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
												dout6.writeUTF("N20");
												dout6.writeUTF(fname);
												dout6.writeUTF(Integer.toString(len));
												dout6.writeUTF(Integer.toString(bw20));
												dout6.writeUTF(Integer.toString(bw));
												
												DataInputStream din7 = new DataInputStream(sc7.getInputStream());
												String i7=din7.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
																																					
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
												
												
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l42.setIcon(i110);
																																																		
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
										if(i==0)
										{
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
											stmt2.executeUpdate(sql2);
											
											Socket sc8 = new Socket("localhost",902);
											DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
											dout7.writeUTF("N20");
											dout7.writeUTF(fname);
											dout7.writeUTF(mac20);
											dout7.writeUTF(mac);
											
											
											DataInputStream din7 = new DataInputStream(sc8.getInputStream());
											String i7=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
																																			
											//code towards  desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									
									}
									
								}
								else if(len>=bw19)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l40.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N19");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw19));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l40.setIcon(i114);
										
																																			
										//code towards   node 20
										
										
										Thread.sleep(3000);
										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l43.setIcon(i101);
										
										if(mac.equalsIgnoreCase(mac20))
										{
											if(len<=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
												//code towards desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
																																																						
												
												
											}
											else if(len>=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i112);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
												if(i1==0)
												{
													int bw1=len;
													bw1=bw1+1000;
													
													Statement stmt21 = con.createStatement();
													String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
													stmt21.executeUpdate(sql21);
													
													Socket sc71 = new Socket("localhost",901);
													DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
													dout61.writeUTF("N20");
													dout61.writeUTF(fname);
													dout61.writeUTF(Integer.toString(len));
													dout61.writeUTF(Integer.toString(bw20));
													dout61.writeUTF(Integer.toString(bw1));
													
													DataInputStream din71 = new DataInputStream(sc71.getInputStream());
													String i71=din71.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
																																						
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
													
													
												}
												else if(i1==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i112);
																																																			
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
											if(i1==0)
											{
												Statement stmt21 = con.createStatement();
												String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
												stmt21.executeUpdate(sql21);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N20");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac20);
												dout7.writeUTF(mac);
												
												
												DataInputStream din71 = new DataInputStream(sc8.getInputStream());
												String i71=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
																																				
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
											}
											else if(i1==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
										
										
										
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
									
									
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l40.setIcon(i110);
								
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N19");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac19);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l37.setIcon(i112);
									
																														
									//code towards  node 20
									
									Thread.sleep(3000);
									ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l43.setIcon(i101);
									
									if(mac.equalsIgnoreCase(mac20))
									{
										if(len<=bw20)
										{
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
											//code towards desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
																																																					
											
											
										}
										else if(len>=bw20)
										{
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i113);
											
											JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
											if(i1==0)
											{
												int bw1=len;
												bw1=bw1+1000;
												
												Statement stmt21 = con.createStatement();
												String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
												stmt21.executeUpdate(sql21);
												
												Socket sc71 = new Socket("localhost",901);
												DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
												dout61.writeUTF("N20");
												dout61.writeUTF(fname);
												dout61.writeUTF(Integer.toString(len));
												dout61.writeUTF(Integer.toString(bw20));
												dout61.writeUTF(Integer.toString(bw1));
												
												DataInputStream din71 = new DataInputStream(sc71.getInputStream());
												String i71=din71.readUTF();
												
												
												Thread.sleep(3000);
												ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i114);
												
																																					
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
												
												
											}
											else if(i1==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										}
									}
									else
									{
										Thread.sleep(3000);
										ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l42.setIcon(i115);
																																																		
										JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
										if(i1==0)
										{
											Statement stmt21 = con.createStatement();
											String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
											stmt21.executeUpdate(sql21);
											
											Socket sc81 = new Socket("localhost",902);
											DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
											dout71.writeUTF("N20");
											dout71.writeUTF(fname);
											dout71.writeUTF(mac20);
											dout71.writeUTF(mac);
											
											
											DataInputStream din71 = new DataInputStream(sc81.getInputStream());
											String i71=din7.readUTF();
											
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
																																			
											//code towards  desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
										}
										else if(i1==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("No Alternative Path Found So Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									
									}
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							}
						}
						else if(cost19>=cost20)
						{
							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
							l41.setIcon(i101);
							
							if(mac.equalsIgnoreCase(mac20))
							{
								if(len<=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
									//code towards desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
																																																			
									
									
								}
								else if(len>=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l42.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N20");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw20));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
																																			
										//code towards  desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
										
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l42.setIcon(i110);
																																																
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N20");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac20);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
																																	
									//code towards  desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							
							}
						}
							
					}
					else if(len<=bw18)
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l37.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
						if(i==0)
						{
							int bw=len;
							bw=bw+1000;
							
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
							stmt2.executeUpdate(sql2);
							
							Socket sc7 = new Socket("localhost",901);
							DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
							dout6.writeUTF("N18");
							dout6.writeUTF(fname);
							dout6.writeUTF(Integer.toString(len));
							dout6.writeUTF(Integer.toString(bw18));
							dout6.writeUTF(Integer.toString(bw));
							
							DataInputStream din7 = new DataInputStream(sc7.getInputStream());
							String i7=din7.readUTF();
							
							
							Thread.sleep(3000);
							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l37.setIcon(i111);
							
																																
							//code towards  node 19 and node 20
							funcn19to20(ss1,dname,dip,content,fname,mac,len);
							break one;
							
							
							
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
						
					}
				}
				else
				{
					Thread.sleep(3000);
					ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
					l37.setIcon(i110);
					
					JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
					int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
					if(i==0)
					{
						Statement stmt2 = con.createStatement();
						String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
						stmt2.executeUpdate(sql2);
						
						Socket sc8 = new Socket("localhost",902);
						DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
						dout7.writeUTF("N18");
						dout7.writeUTF(fname);
						dout7.writeUTF(mac18);
						dout7.writeUTF(mac);
						
						
						DataInputStream din7 = new DataInputStream(sc8.getInputStream());
						String i7=din7.readUTF();
						
						Thread.sleep(3000);
						ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
						l37.setIcon(i111);
						
																														
						//code towards  node 19 and node 20
						funcn19to20(ss1,dname,dip,content,fname,mac,len);
						break one;
						
					}
					else if(i==1)
					{
						DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
						dos.writeUTF("No Alternative Path Found So Data Not Transfered");
						Thread.sleep(2000);   
						refresh();
					}
				}
				
			
			 
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	
	public void funcn15to16(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(cost15<=cost16)
				{
					Thread.sleep(3000);
					ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline10.png"));  //line 3
					l29.setIcon(i98);
					
					if(mac.equalsIgnoreCase(mac15))
					{
						if(len<=bw15)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l30.setIcon(i110);
							
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
							l34.setIcon(i99);
							
							//code towards node 16
							
							funcn16(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(len>=bw15)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l30.setIcon(i110);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-15");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-15");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N15'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N15");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw15));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l30.setIcon(i108);
								
								Thread.sleep(3000);
								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
								l34.setIcon(i99);																									
								//code towards node 16
								funcn16(ss1,dname,dip,content,fname,mac,len);
								break one; 
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-15 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
							
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l30.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-15");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-15");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N15'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N15");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac15);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l30.setIcon(i108);
							
							Thread.sleep(3000);
							ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline20.png"));  //line 3
							l34.setIcon(i99);																								
							//code towards  node 16
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
						
						
					}
				}
				else if(cost15>=cost16)
				{
					Thread.sleep(3000);
					ImageIcon i98=new ImageIcon(this.getClass().getResource("Greenline19.png"));  //line 3
					l32.setIcon(i98);
					
					if(mac.equalsIgnoreCase(mac16))
					{
						if(len<=bw16)
						{
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l31.setIcon(i108);
							
							//code towards node 17 and node 18
							
							
							if(cost17<=cost18)
							{
								Thread.sleep(3000);
								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
								l36.setIcon(i99);
								
								if(mac.equalsIgnoreCase(mac17))
								{
									if(len<=bw17)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l38.setIcon(i110);
										
										//code towards node 18
										funcn18(ss1,dname,dip,content,fname,mac,len);
										break one;
									}
									else if(len>=bw17)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l38.setIcon(i110);
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N17");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw17));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l38.setIcon(i111);
											
																																				
											//code towards node 18
											funcn18(ss1,dname,dip,content,fname,mac,len);
											break one;
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else 
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l38.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N17");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac17);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l38.setIcon(i111);
										
																																		
										//code towards  node 18
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
								
							}
							else if(cost17>=cost18)
							{
								Thread.sleep(3000);
								ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
								l35.setIcon(i99);
								
								if(mac.equalsIgnoreCase(mac18))
								{
									if(len<=bw18)
									{
										Thread.sleep(3000);
										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l37.setIcon(i111);
										
										//code towards  node 19 and node 20
										
										if(cost19<=cost20)
										{
											Thread.sleep(3000);
											ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
											l39.setIcon(i100);
											
											if(mac.equalsIgnoreCase(mac19))
											{
												if(len<=bw19)
												{
													Thread.sleep(3000);
													ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l40.setIcon(i112);
													
													//code towards   node 20
													
													Thread.sleep(3000);
													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l43.setIcon(i101);
													
													if(mac.equalsIgnoreCase(mac20))
													{
														if(len<=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
															//code towards desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
																																																									
															
															
														}
														else if(len>=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i110);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
															int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
															if(i==0)
															{
																int bw=len;
																bw=bw+1000;
																
																Statement stmt2 = con.createStatement();
																String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
																stmt2.executeUpdate(sql2);
																
																Socket sc7 = new Socket("localhost",901);
																DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
																dout6.writeUTF("N20");
																dout6.writeUTF(fname);
																dout6.writeUTF(Integer.toString(len));
																dout6.writeUTF(Integer.toString(bw20));
																dout6.writeUTF(Integer.toString(bw));
																
																DataInputStream din7 = new DataInputStream(sc7.getInputStream());
																String i7=din7.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																																									
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																
																
															}
															else if(i==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i110);
																																																						
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
														int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
														if(i==0)
														{
															Statement stmt2 = con.createStatement();
															String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
															stmt2.executeUpdate(sql2);
															
															Socket sc8 = new Socket("localhost",902);
															DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
															dout7.writeUTF("N20");
															dout7.writeUTF(fname);
															dout7.writeUTF(mac20);
															dout7.writeUTF(mac);
															
															
															DataInputStream din7 = new DataInputStream(sc8.getInputStream());
															String i7=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
																																							
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
														}
														else if(i==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													
													}
													
												}
												else if(len>=bw19)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l40.setIcon(i110);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N19");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw19));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l40.setIcon(i114);
														
																																							
														//code towards   node 20
														
														
														Thread.sleep(3000);
														ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l43.setIcon(i101);
														
														if(mac.equalsIgnoreCase(mac20))
														{
															if(len<=bw20)
															{
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																//code towards desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																																																										
																
																
															}
															else if(len>=bw20)
															{
																Thread.sleep(3000);
																ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
																l42.setIcon(i112);
																
																JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
																int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
																if(i1==0)
																{
																	int bw1=len;
																	bw1=bw1+1000;
																	
																	Statement stmt21 = con.createStatement();
																	String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																	stmt21.executeUpdate(sql21);
																	
																	Socket sc71 = new Socket("localhost",901);
																	DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																	dout61.writeUTF("N20");
																	dout61.writeUTF(fname);
																	dout61.writeUTF(Integer.toString(len));
																	dout61.writeUTF(Integer.toString(bw20));
																	dout61.writeUTF(Integer.toString(bw1));
																	
																	DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																	String i71=din71.readUTF();
																	
																	
																	Thread.sleep(3000);
																	ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																	l42.setIcon(i113);
																	
																																										
																	//code towards  desti
																	
																	Thread.sleep(3000);
																	ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																	l44.setIcon(i103);
																	
																	Thread.sleep(3000);
																	ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																	l45.setIcon(i121);
																	
																	funcnD1(ss1,dname,dip,content,fname);
																	
																	
																}
																else if(i1==1)
																{
																	DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																	dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																	Thread.sleep(2000);   
																	refresh();
																}
															}
														}
														else
														{
															Thread.sleep(3000);
															ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i112);
																																																							
															JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
															if(i1==0)
															{
																Statement stmt21 = con.createStatement();
																String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
																stmt21.executeUpdate(sql21);
																
																Socket sc8 = new Socket("localhost",902);
																DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
																dout7.writeUTF("N20");
																dout7.writeUTF(fname);
																dout7.writeUTF(mac20);
																dout7.writeUTF(mac);
																
																
																DataInputStream din71 = new DataInputStream(sc8.getInputStream());
																String i71=din7.readUTF();
																
																Thread.sleep(3000);
																ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i113);
																
																																								
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
															}
															else if(i1==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("No Alternative Path Found So Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														
														}
														
														
														
														
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
													
													
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l40.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N19");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac19);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l37.setIcon(i112);
													
																																		
													//code towards  node 20
													
													Thread.sleep(3000);
													ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l43.setIcon(i101);
													
													if(mac.equalsIgnoreCase(mac20))
													{
														if(len<=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
															//code towards desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
																																																									
															
															
														}
														else if(len>=bw20)
														{
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
															l42.setIcon(i113);
															
															JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
															int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
															if(i1==0)
															{
																int bw1=len;
																bw1=bw1+1000;
																
																Statement stmt21 = con.createStatement();
																String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
																stmt21.executeUpdate(sql21);
																
																Socket sc71 = new Socket("localhost",901);
																DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
																dout61.writeUTF("N20");
																dout61.writeUTF(fname);
																dout61.writeUTF(Integer.toString(len));
																dout61.writeUTF(Integer.toString(bw20));
																dout61.writeUTF(Integer.toString(bw1));
																
																DataInputStream din71 = new DataInputStream(sc71.getInputStream());
																String i71=din71.readUTF();
																
																
																Thread.sleep(3000);
																ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
																l42.setIcon(i114);
																
																																									
																//code towards  desti
																
																Thread.sleep(3000);
																ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
																l44.setIcon(i103);
																
																Thread.sleep(3000);
																ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
																l45.setIcon(i121);
																
																funcnD1(ss1,dname,dip,content,fname);
																
																
															}
															else if(i1==1)
															{
																DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
																dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
																Thread.sleep(2000);   
																refresh();
															}
														}
													}
													else
													{
														Thread.sleep(3000);
														ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
														l42.setIcon(i115);
																																																						
														JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
														int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
														if(i1==0)
														{
															Statement stmt21 = con.createStatement();
															String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
															stmt21.executeUpdate(sql21);
															
															Socket sc81 = new Socket("localhost",902);
															DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
															dout71.writeUTF("N20");
															dout71.writeUTF(fname);
															dout71.writeUTF(mac20);
															dout71.writeUTF(mac);
															
															
															DataInputStream din71 = new DataInputStream(sc81.getInputStream());
															String i71=din7.readUTF();
															
															Thread.sleep(3000);
															ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
															l42.setIcon(i113);
															
																																							
															//code towards  desti
															
															Thread.sleep(3000);
															ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
															l44.setIcon(i103);
															
															Thread.sleep(3000);
															ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
															l45.setIcon(i121);
															
															funcnD1(ss1,dname,dip,content,fname);
														}
														else if(i1==1)
														{
															DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
															dos.writeUTF("No Alternative Path Found So Data Not Transfered");
															Thread.sleep(2000);   
															refresh();
														}
													
													}
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else if(cost19>=cost20)
										{
											ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
											l41.setIcon(i101);
											
											if(mac.equalsIgnoreCase(mac20))
											{
												if(len<=bw20)
												{
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
													//code towards desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
																																																							
													
													
												}
												else if(len>=bw20)
												{
													Thread.sleep(3000);
													ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l42.setIcon(i110);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
													int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
													if(i==0)
													{
														int bw=len;
														bw=bw+1000;
														
														Statement stmt2 = con.createStatement();
														String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
														stmt2.executeUpdate(sql2);
														
														Socket sc7 = new Socket("localhost",901);
														DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
														dout6.writeUTF("N20");
														dout6.writeUTF(fname);
														dout6.writeUTF(Integer.toString(len));
														dout6.writeUTF(Integer.toString(bw20));
														dout6.writeUTF(Integer.toString(bw));
														
														DataInputStream din7 = new DataInputStream(sc7.getInputStream());
														String i7=din7.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
																																							
														//code towards  desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
														
														
													}
													else if(i==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i110);
																																																				
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
												if(i==0)
												{
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
													stmt2.executeUpdate(sql2);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N20");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac20);
													dout7.writeUTF(mac);
													
													
													DataInputStream din7 = new DataInputStream(sc8.getInputStream());
													String i7=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
																																					
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											
											}
										}
											
									}
									else if(len<=bw18)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l37.setIcon(i110);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N18");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw18));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l37.setIcon(i111);
											
																																				
											//code towards  node 19 and node 20
											funcn19to20(ss1,dname,dip,content,fname,mac,len);
											break one;
											
											
											
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
										
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l37.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N18");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac18);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l37.setIcon(i111);
										
																																		
										//code towards  node 19 and node 20
										funcn19to20(ss1,dname,dip,content,fname,mac,len);
										break one;
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
								
							}
							
							
						}
						else if(len>=bw16)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l31.setIcon(i110);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-16");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-16");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N16'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N16");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw16));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l31.setIcon(i108);
								
																																	
								//code towards node 17 and node 18
								funcn17to18(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-16 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l31.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-16");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-16");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N16'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N16");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac16);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i108=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l31.setIcon(i108);
							
																															
							//code towards node 17 and node 18
							
							funcn17to18(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn17to18(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
			one: if(cost17<=cost18)
				{
					Thread.sleep(3000);
					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline21.png"));  //line 3
					l36.setIcon(i99);
					
					if(mac.equalsIgnoreCase(mac17))
					{
						if(len<=bw17)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l38.setIcon(i110);
							
							//code towards node 18
							funcn18(ss1,dname,dip,content,fname,mac,len);
							break one;
						}
						else if(len>=bw17)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l38.setIcon(i110);
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-17");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-17");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N17'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N17");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw17));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l38.setIcon(i111);
								
																																	
								//code towards node 18
								funcn18(ss1,dname,dip,content,fname,mac,len);
								break one;
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-17 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else 
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l38.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-17");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-17");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N17'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N17");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac17);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l38.setIcon(i111);
							
																															
							//code towards  node 18
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
					
				}
				else if(cost17>=cost18)
				{
					Thread.sleep(3000);
					ImageIcon i99=new ImageIcon(this.getClass().getResource("Greenline22.png"));  //line 3
					l35.setIcon(i99);
					
					if(mac.equalsIgnoreCase(mac18))
					{
						if(len<=bw18)
						{
							Thread.sleep(3000);
							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l37.setIcon(i111);
							
							//code towards  node 19 and node 20
							
							if(cost19<=cost20)
							{
								Thread.sleep(3000);
								ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
								l39.setIcon(i100);
								
								if(mac.equalsIgnoreCase(mac19))
								{
									if(len<=bw19)
									{
										Thread.sleep(3000);
										ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l40.setIcon(i112);
										
										//code towards   node 20
										
										Thread.sleep(3000);
										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l43.setIcon(i101);
										
										if(mac.equalsIgnoreCase(mac20))
										{
											if(len<=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
												//code towards desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
																																																						
												
												
											}
											else if(len>=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i110);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
												int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
												if(i==0)
												{
													int bw=len;
													bw=bw+1000;
													
													Statement stmt2 = con.createStatement();
													String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
													stmt2.executeUpdate(sql2);
													
													Socket sc7 = new Socket("localhost",901);
													DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
													dout6.writeUTF("N20");
													dout6.writeUTF(fname);
													dout6.writeUTF(Integer.toString(len));
													dout6.writeUTF(Integer.toString(bw20));
													dout6.writeUTF(Integer.toString(bw));
													
													DataInputStream din7 = new DataInputStream(sc7.getInputStream());
													String i7=din7.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
																																						
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
													
													
												}
												else if(i==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i110);
																																																			
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
											int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
											if(i==0)
											{
												Statement stmt2 = con.createStatement();
												String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
												stmt2.executeUpdate(sql2);
												
												Socket sc8 = new Socket("localhost",902);
												DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
												dout7.writeUTF("N20");
												dout7.writeUTF(fname);
												dout7.writeUTF(mac20);
												dout7.writeUTF(mac);
												
												
												DataInputStream din7 = new DataInputStream(sc8.getInputStream());
												String i7=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
																																				
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
											}
											else if(i==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
										
									}
									else if(len>=bw19)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l40.setIcon(i110);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N19");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw19));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l40.setIcon(i114);
											
																																				
											//code towards   node 20
											
											
											Thread.sleep(3000);
											ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l43.setIcon(i101);
											
											if(mac.equalsIgnoreCase(mac20))
											{
												if(len<=bw20)
												{
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
													//code towards desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
																																																							
													
													
												}
												else if(len>=bw20)
												{
													Thread.sleep(3000);
													ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
													l42.setIcon(i112);
													
													JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
													int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
													if(i1==0)
													{
														int bw1=len;
														bw1=bw1+1000;
														
														Statement stmt21 = con.createStatement();
														String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
														stmt21.executeUpdate(sql21);
														
														Socket sc71 = new Socket("localhost",901);
														DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
														dout61.writeUTF("N20");
														dout61.writeUTF(fname);
														dout61.writeUTF(Integer.toString(len));
														dout61.writeUTF(Integer.toString(bw20));
														dout61.writeUTF(Integer.toString(bw1));
														
														DataInputStream din71 = new DataInputStream(sc71.getInputStream());
														String i71=din71.readUTF();
														
														
														Thread.sleep(3000);
														ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
														l42.setIcon(i113);
														
																																							
														//code towards  desti
														
														Thread.sleep(3000);
														ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
														l44.setIcon(i103);
														
														Thread.sleep(3000);
														ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
														l45.setIcon(i121);
														
														funcnD1(ss1,dname,dip,content,fname);
														
														
													}
													else if(i1==1)
													{
														DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
														dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
														Thread.sleep(2000);   
														refresh();
													}
												}
											}
											else
											{
												Thread.sleep(3000);
												ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i112);
																																																				
												JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
												if(i1==0)
												{
													Statement stmt21 = con.createStatement();
													String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
													stmt21.executeUpdate(sql21);
													
													Socket sc8 = new Socket("localhost",902);
													DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
													dout7.writeUTF("N20");
													dout7.writeUTF(fname);
													dout7.writeUTF(mac20);
													dout7.writeUTF(mac);
													
													
													DataInputStream din71 = new DataInputStream(sc8.getInputStream());
													String i71=din7.readUTF();
													
													Thread.sleep(3000);
													ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i113);
													
																																					
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
												}
												else if(i1==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("No Alternative Path Found So Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											
											}
											
											
											
											
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
										
										
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l40.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N19");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac19);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l37.setIcon(i112);
										
																															
										//code towards  node 20
										
										Thread.sleep(3000);
										ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l43.setIcon(i101);
										
										if(mac.equalsIgnoreCase(mac20))
										{
											if(len<=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
												//code towards desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
																																																						
												
												
											}
											else if(len>=bw20)
											{
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
												l42.setIcon(i113);
												
												JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
												int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
												if(i1==0)
												{
													int bw1=len;
													bw1=bw1+1000;
													
													Statement stmt21 = con.createStatement();
													String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
													stmt21.executeUpdate(sql21);
													
													Socket sc71 = new Socket("localhost",901);
													DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
													dout61.writeUTF("N20");
													dout61.writeUTF(fname);
													dout61.writeUTF(Integer.toString(len));
													dout61.writeUTF(Integer.toString(bw20));
													dout61.writeUTF(Integer.toString(bw1));
													
													DataInputStream din71 = new DataInputStream(sc71.getInputStream());
													String i71=din71.readUTF();
													
													
													Thread.sleep(3000);
													ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
													l42.setIcon(i114);
													
																																						
													//code towards  desti
													
													Thread.sleep(3000);
													ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
													l44.setIcon(i103);
													
													Thread.sleep(3000);
													ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
													l45.setIcon(i121);
													
													funcnD1(ss1,dname,dip,content,fname);
													
													
												}
												else if(i1==1)
												{
													DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
													dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
													Thread.sleep(2000);   
													refresh();
												}
											}
										}
										else
										{
											Thread.sleep(3000);
											ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
											l42.setIcon(i115);
																																																			
											JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
											int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
											if(i1==0)
											{
												Statement stmt21 = con.createStatement();
												String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
												stmt21.executeUpdate(sql21);
												
												Socket sc81 = new Socket("localhost",902);
												DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
												dout71.writeUTF("N20");
												dout71.writeUTF(fname);
												dout71.writeUTF(mac20);
												dout71.writeUTF(mac);
												
												
												DataInputStream din71 = new DataInputStream(sc81.getInputStream());
												String i71=din7.readUTF();
												
												Thread.sleep(3000);
												ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
												l42.setIcon(i113);
												
																																				
												//code towards  desti
												
												Thread.sleep(3000);
												ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
												l44.setIcon(i103);
												
												Thread.sleep(3000);
												ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
												l45.setIcon(i121);
												
												funcnD1(ss1,dname,dip,content,fname);
											}
											else if(i1==1)
											{
												DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
												dos.writeUTF("No Alternative Path Found So Data Not Transfered");
												Thread.sleep(2000);   
												refresh();
											}
										
										}
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else if(cost19>=cost20)
							{
								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
								l41.setIcon(i101);
								
								if(mac.equalsIgnoreCase(mac20))
								{
									if(len<=bw20)
									{
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
										//code towards desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
																																																				
										
										
									}
									else if(len>=bw20)
									{
										Thread.sleep(3000);
										ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l42.setIcon(i110);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
										int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
										if(i==0)
										{
											int bw=len;
											bw=bw+1000;
											
											Statement stmt2 = con.createStatement();
											String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
											stmt2.executeUpdate(sql2);
											
											Socket sc7 = new Socket("localhost",901);
											DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
											dout6.writeUTF("N20");
											dout6.writeUTF(fname);
											dout6.writeUTF(Integer.toString(len));
											dout6.writeUTF(Integer.toString(bw20));
											dout6.writeUTF(Integer.toString(bw));
											
											DataInputStream din7 = new DataInputStream(sc7.getInputStream());
											String i7=din7.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
																																				
											//code towards  desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
											
											
										}
										else if(i==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l42.setIcon(i110);
																																																	
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
									if(i==0)
									{
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
										stmt2.executeUpdate(sql2);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N20");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac20);
										dout7.writeUTF(mac);
										
										
										DataInputStream din7 = new DataInputStream(sc8.getInputStream());
										String i7=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
																																		
										//code towards  desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								
								}
							}
								
						}
						else if(len<=bw18)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l37.setIcon(i110);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-18");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-18");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N18'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N18");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw18));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l37.setIcon(i111);
								
																																	
								//code towards  node 19 and node 20
								funcn19to20(ss1,dname,dip,content,fname,mac,len);
								break one;
								
								
								
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-18 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
							
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l37.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-18");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-18");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N18'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N18");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac18);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i111=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l37.setIcon(i111);
							
																															
							//code towards  node 19 and node 20
							funcn19to20(ss1,dname,dip,content,fname,mac,len);
							break one;
							
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
					
				}
			 
		}
			
			catch(Exception e)
			{
				e.printStackTrace();
			}
			
		}
	
	public void funcn19to20(Socket ss1,String dname,String dip,String content,String fname,String mac,int len)
	{
		
		
		
		 try
		{
			 DBCon db = new DBCon();
			 Connection con = db.getConnection();
			 
				if(cost19<=cost20)
				{
					Thread.sleep(3000);
					ImageIcon i100=new ImageIcon(this.getClass().getResource("Greenline23.png"));  //line 3
					l39.setIcon(i100);
					
					if(mac.equalsIgnoreCase(mac19))
					{
						if(len<=bw19)
						{
							Thread.sleep(3000);
							ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l40.setIcon(i112);
							
							//code towards   node 20
							
							Thread.sleep(3000);
							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
							l43.setIcon(i101);
							
							if(mac.equalsIgnoreCase(mac20))
							{
								if(len<=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
									//code towards desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
																																																			
									
									
								}
								else if(len>=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l42.setIcon(i110);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
									int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
									if(i==0)
									{
										int bw=len;
										bw=bw+1000;
										
										Statement stmt2 = con.createStatement();
										String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
										stmt2.executeUpdate(sql2);
										
										Socket sc7 = new Socket("localhost",901);
										DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
										dout6.writeUTF("N20");
										dout6.writeUTF(fname);
										dout6.writeUTF(Integer.toString(len));
										dout6.writeUTF(Integer.toString(bw20));
										dout6.writeUTF(Integer.toString(bw));
										
										DataInputStream din7 = new DataInputStream(sc7.getInputStream());
										String i7=din7.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
																																			
										//code towards  desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
										
										
									}
									else if(i==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l42.setIcon(i110);
																																																
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
								int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
								if(i==0)
								{
									Statement stmt2 = con.createStatement();
									String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
									stmt2.executeUpdate(sql2);
									
									Socket sc8 = new Socket("localhost",902);
									DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
									dout7.writeUTF("N20");
									dout7.writeUTF(fname);
									dout7.writeUTF(mac20);
									dout7.writeUTF(mac);
									
									
									DataInputStream din7 = new DataInputStream(sc8.getInputStream());
									String i7=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
																																	
									//code towards  desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
								}
								else if(i==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							
							}
							
						}
						else if(len>=bw19)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l40.setIcon(i110);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-19");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-19");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N19'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N19");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw19));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l40.setIcon(i114);
								
																																	
								//code towards   node 20
								
								
								Thread.sleep(3000);
								ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
								l43.setIcon(i101);
								
								if(mac.equalsIgnoreCase(mac20))
								{
									if(len<=bw20)
									{
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
										//code towards desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
																																																				
										
										
									}
									else if(len>=bw20)
									{
										Thread.sleep(3000);
										ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
										l42.setIcon(i112);
										
										JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
										int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
										if(i1==0)
										{
											int bw1=len;
											bw1=bw1+1000;
											
											Statement stmt21 = con.createStatement();
											String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
											stmt21.executeUpdate(sql21);
											
											Socket sc71 = new Socket("localhost",901);
											DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
											dout61.writeUTF("N20");
											dout61.writeUTF(fname);
											dout61.writeUTF(Integer.toString(len));
											dout61.writeUTF(Integer.toString(bw20));
											dout61.writeUTF(Integer.toString(bw1));
											
											DataInputStream din71 = new DataInputStream(sc71.getInputStream());
											String i71=din71.readUTF();
											
											
											Thread.sleep(3000);
											ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
											l42.setIcon(i113);
											
																																				
											//code towards  desti
											
											Thread.sleep(3000);
											ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
											l44.setIcon(i103);
											
											Thread.sleep(3000);
											ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
											l45.setIcon(i121);
											
											funcnD1(ss1,dname,dip,content,fname);
											
											
										}
										else if(i1==1)
										{
											DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
											dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
											Thread.sleep(2000);   
											refresh();
										}
									}
								}
								else
								{
									Thread.sleep(3000);
									ImageIcon i112=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l42.setIcon(i112);
																																																	
									JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
									int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
									if(i1==0)
									{
										Statement stmt21 = con.createStatement();
										String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
										stmt21.executeUpdate(sql21);
										
										Socket sc8 = new Socket("localhost",902);
										DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
										dout7.writeUTF("N20");
										dout7.writeUTF(fname);
										dout7.writeUTF(mac20);
										dout7.writeUTF(mac);
										
										
										DataInputStream din71 = new DataInputStream(sc8.getInputStream());
										String i71=din7.readUTF();
										
										Thread.sleep(3000);
										ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i113);
										
																																		
										//code towards  desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
									}
									else if(i1==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("No Alternative Path Found So Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								
								}
								
								
								
								
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-19 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
							
							
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l40.setIcon(i110);
						
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-19");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-19");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N19'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N19");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac19);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i112=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l37.setIcon(i112);
							
																												
							//code towards  node 20
							
							Thread.sleep(3000);
							ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
							l43.setIcon(i101);
							
							if(mac.equalsIgnoreCase(mac20))
							{
								if(len<=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
									//code towards desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
																																																			
									
									
								}
								else if(len>=bw20)
								{
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
									l42.setIcon(i113);
									
									JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
									int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
									if(i1==0)
									{
										int bw1=len;
										bw1=bw1+1000;
										
										Statement stmt21 = con.createStatement();
										String sql21 = "update Router set  Bw="+bw1+" where nname='N20'";
										stmt21.executeUpdate(sql21);
										
										Socket sc71 = new Socket("localhost",901);
										DataOutputStream dout61 = new DataOutputStream(sc71.getOutputStream());
										dout61.writeUTF("N20");
										dout61.writeUTF(fname);
										dout61.writeUTF(Integer.toString(len));
										dout61.writeUTF(Integer.toString(bw20));
										dout61.writeUTF(Integer.toString(bw1));
										
										DataInputStream din71 = new DataInputStream(sc71.getInputStream());
										String i71=din71.readUTF();
										
										
										Thread.sleep(3000);
										ImageIcon i114=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
										l42.setIcon(i114);
										
																																			
										//code towards  desti
										
										Thread.sleep(3000);
										ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
										l44.setIcon(i103);
										
										Thread.sleep(3000);
										ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
										l45.setIcon(i121);
										
										funcnD1(ss1,dname,dip,content,fname);
										
										
									}
									else if(i1==1)
									{
										DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
										dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
										Thread.sleep(2000);   
										refresh();
									}
								}
							}
							else
							{
								Thread.sleep(3000);
								ImageIcon i115=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
								l42.setIcon(i115);
																																																
								JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
								int i1 = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
								if(i1==0)
								{
									Statement stmt21 = con.createStatement();
									String sql21 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
									stmt21.executeUpdate(sql21);
									
									Socket sc81 = new Socket("localhost",902);
									DataOutputStream dout71 = new DataOutputStream(sc81.getOutputStream());
									dout71.writeUTF("N20");
									dout71.writeUTF(fname);
									dout71.writeUTF(mac20);
									dout71.writeUTF(mac);
									
									
									DataInputStream din71 = new DataInputStream(sc81.getInputStream());
									String i71=din7.readUTF();
									
									Thread.sleep(3000);
									ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
									l42.setIcon(i113);
									
																																	
									//code towards  desti
									
									Thread.sleep(3000);
									ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
									l44.setIcon(i103);
									
									Thread.sleep(3000);
									ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
									l45.setIcon(i121);
									
									funcnD1(ss1,dname,dip,content,fname);
								}
								else if(i1==1)
								{
									DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
									dos.writeUTF("No Alternative Path Found So Data Not Transfered");
									Thread.sleep(2000);   
									refresh();
								}
							
							}
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							Thread.sleep(2000);   
							refresh();
						}
					}
				}
				else if(cost19>=cost20)
				{
					ImageIcon i101=new ImageIcon(this.getClass().getResource("Greenline24.png"));  //line 3
					l41.setIcon(i101);
					
					if(mac.equalsIgnoreCase(mac20))
					{
						if(len<=bw20)
						{
							Thread.sleep(3000);
							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l42.setIcon(i113);
							
							//code towards desti
							
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
							l44.setIcon(i103);
							
							Thread.sleep(3000);
							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
							l45.setIcon(i121);
							
							funcnD1(ss1,dname,dip,content,fname);
																																																	
							
							
						}
						else if(len>=bw20)
						{
							Thread.sleep(3000);
							ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
							l42.setIcon(i110);
							
							JOptionPane.showMessageDialog(null,"Less Energy Found in Node-20");
							int i = JOptionPane.showConfirmDialog(null, "Do You Want to Increase Energy for Node-20");
							if(i==0)
							{
								int bw=len;
								bw=bw+1000;
								
								Statement stmt2 = con.createStatement();
								String sql2 = "update Router set  Bw="+bw+" where nname='N20'";
								stmt2.executeUpdate(sql2);
								
								Socket sc7 = new Socket("localhost",901);
								DataOutputStream dout6 = new DataOutputStream(sc7.getOutputStream());
								dout6.writeUTF("N20");
								dout6.writeUTF(fname);
								dout6.writeUTF(Integer.toString(len));
								dout6.writeUTF(Integer.toString(bw20));
								dout6.writeUTF(Integer.toString(bw));
								
								DataInputStream din7 = new DataInputStream(sc7.getInputStream());
								String i7=din7.readUTF();
								
								
								Thread.sleep(3000);
								ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
								l42.setIcon(i113);
								
																																	
								//code towards  desti
								
								Thread.sleep(3000);
								ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
								l44.setIcon(i103);
								
								Thread.sleep(3000);
								ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
								l45.setIcon(i121);
								
								funcnD1(ss1,dname,dip,content,fname);
								
								
							}
							else if(i==1)
							{
								DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
								dos.writeUTF("Due to Less Energy in Node-20 Data Not Transfered");
								Thread.sleep(2000);   
								refresh();
							}
						}
					}
					else
					{
						Thread.sleep(3000);
						ImageIcon i110=new ImageIcon(this.getClass().getResource("rednodes.png"));  //node 5
						l42.setIcon(i110);
																																														
						JOptionPane.showMessageDialog(null,"Malicious Data Found in Node-20");
						int i = JOptionPane.showConfirmDialog(null, "Do You Want to Localise Node-20");
						if(i==0)
						{
							Statement stmt2 = con.createStatement();
							String sql2 = "update Router set status='Normal', idata='', Mac='"+mac+"' where nname='N20'";
							stmt2.executeUpdate(sql2);
							
							Socket sc8 = new Socket("localhost",902);
							DataOutputStream dout7 = new DataOutputStream(sc8.getOutputStream());
							dout7.writeUTF("N20");
							dout7.writeUTF(fname);
							dout7.writeUTF(mac20);
							dout7.writeUTF(mac);
							
							
							DataInputStream din7 = new DataInputStream(sc8.getInputStream());
							String i7=din7.readUTF();
							
							Thread.sleep(3000);
							ImageIcon i113=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //node 5
							l42.setIcon(i113);
							
																															
							//code towards  desti
							
							Thread.sleep(3000);
							ImageIcon i103=new ImageIcon(this.getClass().getResource("Greenline25.png"));  //line 3
							l44.setIcon(i103);
							
							Thread.sleep(3000);
							ImageIcon i121=new ImageIcon(this.getClass().getResource("Greennodes.png"));  //line 3
							l45.setIcon(i121);
							
							funcnD1(ss1,dname,dip,content,fname);
						}
						else if(i==1)
						{
							DataOutputStream dos=new DataOutputStream(ss1.getOutputStream());
							dos.writeUTF("No Alternative Path Found So Data Not Transfered");
							
							Thread.sleep(2000);   
							refresh();
						}
					
					}
				}
		}
	
	catch(Exception e)
	{
		e.printStackTrace();
	}
	
}
	
	public void funcnD1(Socket s,String dname,String dip,String content,String filename)
	{
		
		 
		try
		{
			
			
				
			 if(dname.equalsIgnoreCase("A"))   
             {
				
           	  Socket s3=new Socket(dip,101);
                 ObjectOutputStream dout=new ObjectOutputStream(s3.getOutputStream());
                 dout.writeObject(filename);   
                 dout.writeObject(content);
                    
                     ObjectInputStream dis = new ObjectInputStream(s3.getInputStream());
						String message = (String)dis.readObject();
						DataOutputStream dout1=new DataOutputStream(s.getOutputStream());
                    dout1.writeUTF(message+" By A");
             }
             if(dname.equalsIgnoreCase("B"))   
             {
            	 
           	  Socket s3=new Socket(dip,102);
                 ObjectOutputStream dout=new ObjectOutputStream(s3.getOutputStream());
                 dout.writeObject(filename);     
                 dout.writeObject(content);
                   
                     ObjectInputStream dis = new ObjectInputStream(s3.getInputStream());
						String message =(String) dis.readObject();
						DataOutputStream dout1=new DataOutputStream(s.getOutputStream());
	                    dout1.writeUTF(message+" By B");
             }
             if(dname.equalsIgnoreCase("C"))   
             {
            	 
           	  Socket s3=new Socket(dip,103);
                 ObjectOutputStream dout=new ObjectOutputStream(s3.getOutputStream());
                 dout.writeObject(filename);      
                 dout.writeObject(content);
                    
                     ObjectInputStream dis = new ObjectInputStream(s3.getInputStream());
						String message = (String)dis.readObject();
						DataOutputStream dout1=new DataOutputStream(s.getOutputStream());
	                    dout1.writeUTF(message+" By C");
             }
             if(dname.equalsIgnoreCase("D"))   
             {
            	 
           	  Socket s3=new Socket(dip,104);
                 ObjectOutputStream dout=new ObjectOutputStream(s3.getOutputStream());
                 dout.writeObject(filename);      
                 dout.writeObject(content);
                    
                     ObjectInputStream dis = new ObjectInputStream(s3.getInputStream());
						String message =(String) dis.readObject();
						DataOutputStream dout1=new DataOutputStream(s.getOutputStream());
	                    dout1.writeUTF(message+" By D");
             }
             
            
             Thread.sleep(2000);   
			refresh();
		
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
}
	
	
	public void refresh()
	{
		try
		{
		
		ImageIcon ic=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Source
		con1.setIcon(ic);
		

		ImageIcon i1=new ImageIcon(this.getClass().getResource("Blackline1.png"));  //line 1
		l1.setIcon(i1);
		
		ImageIcon i2=new ImageIcon(this.getClass().getResource("Blackline2.png"));  //line 2
		l2.setIcon(i2);
		

		ImageIcon i3=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //node 1
		
		l3.setIcon(i3);
		


		ImageIcon i4=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //node 2
		
		l4.setIcon(i4);
		

		ImageIcon i5=new ImageIcon(this.getClass().getResource("Blackline3.png"));  //line 3
		
		l5.setIcon(i5);
		



		ImageIcon i6=new ImageIcon(this.getClass().getResource("Blackline4.png"));  //line 4
		
		l6.setIcon(i6);
		




		ImageIcon i7=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 3
	
		l7.setIcon(i7);
		

		ImageIcon i8=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 4
		
		l8.setIcon(i8);
		


		ImageIcon i9=new ImageIcon(this.getClass().getResource("Blackline5.png"));  //Line 5
		
		l9.setIcon(i9);
		


		ImageIcon i10=new ImageIcon(this.getClass().getResource("Blackline6.png"));  //Line 6
		
		l10.setIcon(i10);
		


		ImageIcon i11=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 6
		
		l11.setIcon(i11);
		



		ImageIcon i12=new ImageIcon(this.getClass().getResource("Blackline7.png"));  //line 7
		
		l12.setIcon(i12);
		


		ImageIcon i13=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 5
		
		l13.setIcon(i13);
		


		ImageIcon i14=new ImageIcon(this.getClass().getResource("Blackline8.png"));  //Line 8
		
		l14.setIcon(i14);
		


		ImageIcon i15=new ImageIcon(this.getClass().getResource("Blackline9.png"));  //Line 9
		
		l15.setIcon(i15);
		

		ImageIcon i16=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 7
		
		l16.setIcon(i16);
		

		ImageIcon i17=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 8
		
		l17.setIcon(i17);
		


		ImageIcon i18=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 10
		
		l18.setIcon(i18);
		


		ImageIcon i19=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 9
		
		l19.setIcon(i19);
		


		ImageIcon i20=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 11
		
		l20.setIcon(i20);
		

		ImageIcon i21=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 10
		
		l21.setIcon(i21);
		


		ImageIcon i22=new ImageIcon(this.getClass().getResource("Blackline13.png"));  //Line 13
		
		l22.setIcon(i22);
		


		ImageIcon i23=new ImageIcon(this.getClass().getResource("Blackline12.png"));  //Line 12
		
		l23.setIcon(i23);
	


		ImageIcon i24=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 12
		
		l24.setIcon(i24);
		

		ImageIcon i25=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 11
		
		l25.setIcon(i25);
		


		ImageIcon i26=new ImageIcon(this.getClass().getResource("Blackline13.png"));  //Line 14 same as 13
		
		l26.setIcon(i26);
		

		ImageIcon i27=new ImageIcon(this.getClass().getResource("Blackline12.png"));  //Line 16 same as 12
		l27.setIcon(i27);
		


		ImageIcon i28=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 14
		l28.setIcon(i28);
		

		ImageIcon i29=new ImageIcon(this.getClass().getResource("Blackline10.png"));  //Line 18 same as 10
		
		l29.setIcon(i29);
		


		ImageIcon i30=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 15
		
		l30.setIcon(i30);
		


		ImageIcon i31=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 16
		
		l31.setIcon(i31);
		


		ImageIcon i32=new ImageIcon(this.getClass().getResource("Blackline19.png"));  //Line 19
		
		l32.setIcon(i32);
		



		ImageIcon i33=new ImageIcon(this.getClass().getResource("Blackline17.png"));  //Line 17
		
		l33.setIcon(i33);
		



		ImageIcon i34=new ImageIcon(this.getClass().getResource("Blackline20.png"));  //Line 20
		
		l34.setIcon(i34);
		


		ImageIcon i35=new ImageIcon(this.getClass().getResource("Blackline22.png"));  //Line 22
		
		l35.setIcon(i35);
		

		ImageIcon i36=new ImageIcon(this.getClass().getResource("Blackline21.png"));  //Line 21
		
		l36.setIcon(i36);
		


		ImageIcon i37=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 18
		
		l37.setIcon(i37);
		


		ImageIcon i38=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 17
		
		l38.setIcon(i37);
		

		ImageIcon i39=new ImageIcon(this.getClass().getResource("Blackline23.png"));  //Line 23
		
		l39.setIcon(i39);
		



		ImageIcon i40=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 19
		
		l40.setIcon(i40);
		


		ImageIcon i41=new ImageIcon(this.getClass().getResource("Blackline24.png"));  //line 24
		
		l41.setIcon(i41);
		



		ImageIcon i42=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Node 20
		
		l42.setIcon(i42);
		



		ImageIcon i43=new ImageIcon(this.getClass().getResource("Blackline25.png"));  //Line 25
		
		l43.setIcon(i43);
		
		ImageIcon i44=new ImageIcon(this.getClass().getResource("Blackline25.png"));  //Line 25
		
		l44.setIcon(i44);
		

		ImageIcon i45=new ImageIcon(this.getClass().getResource("Blacknodes.png"));  //Destination
		
		l45.setIcon(i45);
		

		ImageIcon i48=new ImageIcon(this.getClass().getResource("Blacknodes.png")); // Node 13
		
		l48.setIcon(i48);
		


		//Conectivity Lines

		ImageIcon i46=new ImageIcon(this.getClass().getResource("Blackline7.png"));  //
		
		l46.setIcon(i46);
		


		ImageIcon i47=new ImageIcon(this.getClass().getResource("Blackline8.png"));  //
		
		l47.setIcon(i47);
		



		ImageIcon i49=new ImageIcon(this.getClass().getResource("Blackline13.png")); //connectivity
		
		l49.setIcon(i49);
		
		
		ImageIcon i70=new ImageIcon(this.getClass().getResource("Blackline15.png"));  //Line 15
		
		l55.setIcon(i70);
		
		
		
		ImageIcon i71=new ImageIcon(this.getClass().getResource("Blackline26.png"));  //Line 26
		
		l56.setIcon(i71);
		
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
		
		
}
	@Override
	public void actionPerformed(ActionEvent e) 
	{


		
		if(e.getSource()==m4)
		{
		System.exit(0);
			
		}
		if(e.getSource()==mi1)
		{
			try
			{
				
				
				
				
				
					String[] dsname = { "Select Nodes", "N1", "N2", "N3", "N4","N5","N6","N7","N8","N9","N10", "N11", "N12", "N13", "N14","N15","N16","N17","N18","N19","N20" };
					
					String dataname = (String) JOptionPane.showInputDialog(null,
							"Select Nodes", "Node Name",
							JOptionPane.QUESTION_MESSAGE, null,  dsname,  dsname[0]);
					
					String bw1 = JOptionPane.showInputDialog(null,
							"Enter the Cost for the Node-> "+dataname);
					
					DBCon db = new DBCon();
					 Connection con = db.getConnection();
						
						String sql = "update Router set cost='"+bw1+"' where nname='"+dataname+"'";
						Statement stmt = con.createStatement();
						stmt.executeUpdate(sql);
						JOptionPane.showMessageDialog(null,"Cost Assigned Successfully");
				
				
				
				
			
			
		}
		
		catch(Exception e1)
		{
			e1.printStackTrace();
		}
	}
		
		if(e.getSource()==m2)
		{
			try
			{
			
				
				
				
				
				String[] dsname = { "Select Nodes", "N1", "N2", "N3", "N4","N5","N6","N7","N8","N9","N10", "N11", "N12", "N13", "N14","N15","N16","N17","N18","N19","N20" };
				
				String dataname = (String) JOptionPane.showInputDialog(null,
						"Select Nodes", "Node Name",
						JOptionPane.QUESTION_MESSAGE, null,  dsname,  dsname[0]);
					
				String Energy = JOptionPane.showInputDialog(null,
						"Enter the Energy for the Node-> "+dataname);
					
					DBCon db = new DBCon();
					 Connection con = db.getConnection();
						
						String sql = "update Router set Bw='"+Energy+"' where nname='"+dataname+"'";
						Statement stmt = con.createStatement();
						stmt.executeUpdate(sql);
						JOptionPane.showMessageDialog(null,"Energy Assigned Successfully");
				
				
			
			
		
		}
		
		catch(Exception e1)
		{
			e1.printStackTrace();
		}
	}
		
		else if(e.getSource()==m1)
		{
			//Nodesinfo i2 = new Nodesinfo();
			
					
			
					new viewr();
			
		}
		else if(e.getSource()==m3)
		{
			//Nodesinfo i2 = new Nodesinfo();
			try {
				UIManager
						.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
			} catch (Exception e1) {
				e1.printStackTrace();
			}
			java.awt.EventQueue.invokeLater(new Runnable() {
				public void run() {
					//new Nodesinfo();
				}
			});
		}
		
		

		



	}
	
	public void send(String mac,int data,String destination)
	{
		
	}
	
	
	public void send1(String mac,int data,String destination)
	{
		
		try
		{
			
			
			
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
		
}